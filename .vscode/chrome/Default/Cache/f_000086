{"version":3,"sources":["webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/audit-logs/audit-log-detail-modal.component.html","webpack:///./src/app/admin/audit-logs/audit-log-detail-modal.component.ts","webpack:///./src/app/admin/audit-logs/audit-logs.component.html","webpack:///./src/app/admin/audit-logs/audit-logs.component.less","webpack:///./src/app/admin/audit-logs/audit-logs.component.ts","webpack:///./src/app/admin/audit-logs/entity-change-detail-modal.component.html","webpack:///./src/app/admin/audit-logs/entity-change-detail-modal.component.ts","webpack:///./src/app/admin/dashboard/host-dashboard.component.html","webpack:///./src/app/admin/dashboard/host-dashboard.component.less","webpack:///./src/app/admin/dashboard/host-dashboard.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-components.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-components.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-date-time.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-date-time.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-editor.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-editor.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-file-upload.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-file-upload.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-input-mask.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-input-mask.component.ts","webpack:///./src/app/admin/demo-ui-components/demo-ui-selection.component.html","webpack:///./src/app/admin/demo-ui-components/demo-ui-selection.component.ts","webpack:///./src/app/admin/editions/create-or-edit-edition-modal.component.html","webpack:///./src/app/admin/editions/create-or-edit-edition-modal.component.ts","webpack:///./src/app/admin/editions/editions.component.html","webpack:///./src/app/admin/editions/editions.component.ts","webpack:///./src/app/admin/install/install.component.html","webpack:///./src/app/admin/install/install.component.ts","webpack:///./src/app/admin/languages/create-or-edit-language-modal.component.html","webpack:///./src/app/admin/languages/create-or-edit-language-modal.component.ts","webpack:///./src/app/admin/languages/edit-text-modal.component.html","webpack:///./src/app/admin/languages/edit-text-modal.component.ts","webpack:///./src/app/admin/languages/language-texts.component.html","webpack:///./src/app/admin/languages/language-texts.component.less","webpack:///./src/app/admin/languages/language-texts.component.ts","webpack:///./src/app/admin/languages/languages.component.html","webpack:///./src/app/admin/languages/languages.component.ts","webpack:///./src/app/admin/maintenance/maintenance.component.html","webpack:///./src/app/admin/maintenance/maintenance.component.less","webpack:///./src/app/admin/maintenance/maintenance.component.ts","webpack:///./src/app/admin/organization-units/add-member-modal.component.html","webpack:///./src/app/admin/organization-units/add-member-modal.component.ts","webpack:///./src/app/admin/organization-units/create-or-edit-unit-modal.component.html","webpack:///./src/app/admin/organization-units/create-or-edit-unit-modal.component.ts","webpack:///./src/app/admin/organization-units/organization-tree.component.html","webpack:///./src/app/admin/organization-units/organization-tree.component.less","webpack:///./src/app/admin/organization-units/organization-tree.component.ts","webpack:///./src/app/admin/organization-units/organization-unit-members.component.html","webpack:///./src/app/admin/organization-units/organization-unit-members.component.ts","webpack:///./src/app/admin/organization-units/organization-units.component.html","webpack:///./src/app/admin/organization-units/organization-units.component.ts","webpack:///./src/app/admin/roles/create-or-edit-role-modal.component.html","webpack:///./src/app/admin/roles/create-or-edit-role-modal.component.ts","webpack:///./src/app/admin/roles/roles.component.html","webpack:///./src/app/admin/roles/roles.component.ts","webpack:///./src/app/admin/settings/host-settings.component.html","webpack:///./src/app/admin/settings/host-settings.component.ts","webpack:///./src/app/admin/settings/tenant-settings.component.html","webpack:///./src/app/admin/settings/tenant-settings.component.ts","webpack:///./src/app/admin/shared/edition-combo.component.ts","webpack:///./src/app/admin/shared/feature-tree.component.less","webpack:///./src/app/admin/shared/feature-tree.component.ts","webpack:///./src/app/admin/shared/organization-unit-tree.component.ts","webpack:///./src/app/admin/shared/permission-combo.component.ts","webpack:///./src/app/admin/shared/permission-tree.component.ts","webpack:///./src/app/admin/shared/role-combo.component.ts","webpack:///./src/app/admin/subscription-management/invoice/invoice.component.html","webpack:///./src/app/admin/subscription-management/invoice/invoice.component.less","webpack:///./src/app/admin/subscription-management/invoice/invoice.component.ts","webpack:///./src/app/admin/subscription-management/subscription-management.component.html","webpack:///./src/app/admin/subscription-management/subscription-management.component.ts","webpack:///./src/app/admin/tenants/create-tenant-modal.component.html","webpack:///./src/app/admin/tenants/create-tenant-modal.component.ts","webpack:///./src/app/admin/tenants/edit-tenant-modal.component.html","webpack:///./src/app/admin/tenants/edit-tenant-modal.component.ts","webpack:///./src/app/admin/tenants/tenant-features-modal.component.html","webpack:///./src/app/admin/tenants/tenant-features-modal.component.ts","webpack:///./src/app/admin/tenants/tenants.component.html","webpack:///./src/app/admin/tenants/tenants.component.ts","webpack:///./src/app/admin/ui-customization/ui-customization.component.html","webpack:///./src/app/admin/ui-customization/ui-customization.component.ts","webpack:///./src/app/admin/users/create-or-edit-user-modal.component.html","webpack:///./src/app/admin/users/create-or-edit-user-modal.component.ts","webpack:///./src/app/admin/users/edit-user-permissions-modal.component.html","webpack:///./src/app/admin/users/edit-user-permissions-modal.component.ts","webpack:///./src/app/admin/users/users.component.html","webpack:///./src/app/admin/users/users.component.ts","webpack:///./src/shared/helpers/HtmlHelper.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AAC6B;AACC;AACO;AACgB;AAC5B;AACH;AACe;AACT;AACM;AACoB;AACtC;AACkB;AACI;AACQ;AACuB;AAC/C;AAC0B;AAChC;AAiCzD;IAEI,4BACY,MAAc;QAD1B,iBAUC;QATW,WAAM,GAAN,MAAM,CAAQ;QAEtB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAK;YAC1B,KAAI,CAAC,8BAA8B,EAAE,CAAC;YAEtC,EAAE,CAAC,CAAC,KAAK,YAAY,6DAAa,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2DAA8B,GAA9B;QACI,IAAI,cAAc,GAAG,CAAC,CAAC,+BAA+B,CAAC,CAAC;QACxD,cAAc,CAAC,GAAG,CAAC;YACf,SAAS,EAAE,MAAM;SACpB,CAAC,CAAC;IACP,CAAC;IAnBQ,kBAAkB;QA/B9B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY,CAAC,QAAQ,CAAC;oBAClB;wBACI,IAAI,EAAE,EAAE;wBACR,QAAQ,EAAE;4BACN,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,4BAA4B,EAAE,EAAE;4BAChG,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,4BAA4B,EAAE,EAAE;4BAChG,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,mFAAkB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,gCAAgC,EAAE,EAAE;4BAC5G,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,uFAAoB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,uCAAuC,EAAE,EAAE;4BACvH,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,wFAAqB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,oCAAoC,EAAE,EAAE;4BACtH,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,gBAAgB,EAAE,EAAE;4BAC1F,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,gCAAgC,EAAE,EAAE;4BAC5G,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,0FAAsB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,4CAA4C,EAAE,EAAE;4BACxI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4EAAgB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE,EAAE;4BACvF,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,4GAA0B,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,wCAAwC,EAAE,EAAE;4BACrI,EAAE,IAAI,EAAE,yBAAyB,EAAE,SAAS,EAAE,2HAA+B,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,oDAAoD,EAAE,EAAE;4BAC3J,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,oGAAgB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,oDAAoD,EAAE,EAAE;4BACvI,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,4FAAuB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,sCAAsC,EAAE,EAAE;4BAC5H,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,0FAAsB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,qCAAqC,EAAE,EAAE;4BACzH,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,0GAAyB,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,wBAAwB,EAAE,EAAE;4BACpH,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;4BAChD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,sGAAwB,EAAE;yBACpE;qBACJ;iBACJ,CAAC;aACL;YACD,OAAO,EAAE;gBACL,4DAAY;aACf;SACJ,CAAC;yCAIsB,sDAAM;OAHjB,kBAAkB,CAqB9B;IAAD,yBAAC;CAAA;AArB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDgB;AACN;AACI;AAC0B;AACd;AACyC;AAC/C;AACmC;AAC4D;AACtG;AACgB;AACiC;AACtB;AAC8B;AACvB;AACgB;AACH;AACL;AACS;AACF;AACD;AACU;AACpC;AACH;AAC0C;AAC1B;AACD;AACT;AACM;AAC+B;AACb;AACe;AACb;AACF;AACpC;AACkB;AACI;AACN;AACF;AACoB;AACZ;AACF;AACV;AACoB;AACuB;AACzB;AACJ;AACQ;AAC1B;AAC0B;AACI;AACK;AAC7B;AACZ;AA0EzD;IAAA;IAA2B,CAAC;IAAf,WAAW;QAxEvB,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,0DAAW;gBACX,4DAAY;gBACZ,gEAAgB;gBAChB,yDAAW,CAAC,OAAO,EAAE;gBACrB,wDAAU,CAAC,OAAO,EAAE;gBACpB,2DAAa,CAAC,OAAO,EAAE;gBACvB,2DAAa,CAAC,OAAO,EAAE;gBACvB,yEAAkB;gBAClB,sEAAW;gBACX,oFAAe;gBACf,yDAAW;gBACX,+DAAe;gBACf,gEAAuB;gBACvB,kEAAkB;gBAClB,4DAAY;gBACZ,+DAAe;aAClB;YACD,YAAY,EAAE;gBACV,sEAAc;gBACd,4FAAwB;gBACxB,gFAAkB;gBAClB,0GAA8B;gBAC9B,+GAAiC;gBACjC,0FAAuB;gBACvB,oFAAoB;gBACpB,wGAA8B;gBAC9B,sEAAc;gBACd,0GAA8B;gBAC9B,oFAAkB;gBAClB,0GAA4B;gBAC5B,kHAAgC;gBAChC,wFAAqB;gBACrB,4EAAgB;gBAChB,wFAAoB;gBACpB,+EAAiB;gBACjB,mHAAiC;gBACjC,kFAAkB;gBAClB,2FAAsB;gBACtB,sHAAkC;gBAClC,4EAAgB;gBAChB,kGAA0B;gBAC1B,8FAAwB;gBACxB,sGAA4B;gBAC5B,sHAAkC;gBAClC,4FAAsB;gBACtB,4GAA0B;gBAC1B,0GAAyB;gBACzB,yHAAgC;gBAChC,uHAA8B;gBAC9B,4FAAuB;gBACvB,2FAAsB;gBACtB,sFAAqB;gBACrB,oGAAgB;gBAChB,2HAA+B;gBAC/B,+GAAuB;gBACvB,2GAAyB;gBACzB,wGAAuB;gBACvB,yGAAwB;gBACxB,4GAAyB;gBACzB,0GAAwB;gBACxB,mGAAqB;gBACrB,sGAAwB;aAC3B;YACD,OAAO,EAAE;gBACL,+GAAuB;aAC1B;YACD,SAAS,EAAE;gBACP,kFAAoB;aACvB;SACJ,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/HxB,qMAAqM,mBAAmB,0UAA0U,uBAAuB,iNAAiN,6JAA6J,yBAAyB,gSAAgS,iBAAiB,mJAAmJ,mBAAmB,kRAAkR,kBAAkB,mJAAmJ,oBAAoB,kRAAkR,eAAe,mJAAmJ,qBAAqB,kRAAkR,gBAAgB,mJAAmJ,sBAAsB,kaAAka,mCAAmC,oMAAoM,2BAA2B,8RAA8R,gBAAgB,mJAAmJ,sBAAsB,mWAAmW,eAAe,mJAAmJ,qBAAqB,mWAAmW,aAAa,mJAAmJ,oBAAoB,mWAAmW,iBAAiB,mJAAmJ,mBAAmB,gRAAgR,mBAAmB,6LAA6L,0BAA0B,mMAAmM,mBAAmB,8RAA8R,aAAa,+MAA+M,qBAAqB,mMAAmM,mBAAmB,kXAAkX,gBAAgB,8MAA8M,oBAAoB,kTAAkT,cAAc,6F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAttP;AACM;AAEpC;AACc;AAM/C;IAAkD,gDAAgB;IAO9D,sCACI,QAAkB;QADtB,YAGI,kBAAM,QAAQ,CAAC,SAClB;QAPD,YAAM,GAAG,KAAK,CAAC;;IAOf,CAAC;IAED,uDAAgB,GAAhB;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,CAAC,mCAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,GAAG,mCAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAC;IAC1I,CAAC;IAED,sDAAe,GAAf;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IAC1D,CAAC;IAED,6DAAsB,GAAtB;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC;YACD,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAClD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACzC,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACpC,CAAC;IACL,CAAC;IAED,2CAAI,GAAJ,UAAK,MAAuB;QACxB,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QAEvB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,4CAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IA1CiC;QAAjC,+DAAS,CAAC,qBAAqB,CAAC;kCAAQ,4DAAc;+DAAC;IAF/C,4BAA4B;QAJxC,+DAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;;SAElC,CAAC;yCASgB,sDAAQ;OARb,4BAA4B,CA6CxC;IAAD,mCAAC;CAAA,CA7CiD,kFAAgB,GA6CjE;AA7CwC;;;;;;;;;;;;ACVzC,iSAAiS,kBAAkB,6kBAA6kB,sBAAsB,gSAAgS,mBAAmB,imBAAimB,sBAAsB,gKAAgK,gBAAgB,opBAAopB,kBAAkB,4hBAA4hB,iBAAiB,urBAAurB,gBAAgB,4cAA4c,iBAAiB,qHAAqH,2iCAA2iC,eAAe,qhBAAqhB,mBAAmB,mPAAmP,YAAY,6FAA6F,gBAAgB,4FAA4F,iBAAiB,mbAAmb,gBAAgB,g8BAAg8B,4BAA4B,qOAAqO,4BAA4B,2xBAA2xB,wDAAwD,6+BAA6+B,WAAW,gVAAgV,eAAe,8SAA8S,cAAc,wMAAwM,aAAa,8OAA8O,eAAe,uTAAuT,gBAAgB,wMAAwM,aAAa,wMAAwM,cAAc,sjDAAsjD,4DAA4D,wMAAwM,iBAAiB,wMAAwM,oBAAoB,wMAAwM,mBAAmB,wMAAwM,oCAAoC,wMAAwM,wBAAwB,wMAAwM,mBAAmB,sNAAsN,oBAAoB,KAAK,mDAAmD,+XAA+X,wDAAwD,6nBAA6nB,uEAAuE,8rBAA8rB,sBAAsB,oKAAoK,gBAAgB,yqBAAyqB,kBAAkB,4iBAA4iB,iBAAiB,yjBAAyjB,eAAe,6RAA6R,YAAY,mJAAmJ,iBAAiB,s6BAAs6B,4DAA4D,g/BAAg/B,aAAa,wMAAwM,aAAa,qOAAqO,eAAe,6UAA6U,WAAW,0nCAA0nC,uBAAuB,KAAK,0BAA0B,+MAA+M,2BAA2B,wMAAwM,iBAAiB,wMAAwM,yDAAyD,wXAAwX,4DAA4D,6oBAA6oB,2EAA2E,2kB;;;;;;;;;;;ACA5jyB,0DAA0D,oBAAoB,GAAG,sCAAsC,qBAAqB,GAAG,4DAA4D,cAAc,GAAG,qDAAqD,sBAAsB,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/O;AACuB;AACoB;AACQ;AACrC;AACJ;AAC8D;AACzD;AACzC;AAEkC;AACZ;AACgB;AAQvE;IAAwC,sCAAgB;IA2BpD,4BACI,QAAkB,EACV,gBAAsC,EACtC,cAA6B,EAC7B,oBAAyC;QAJrD,YAMI,kBAAM,QAAQ,CAAC,SAClB;QALW,sBAAgB,GAAhB,gBAAgB,CAAsB;QACtC,oBAAc,GAAd,cAAc,CAAe;QAC7B,0BAAoB,GAApB,oBAAoB,CAAqB;QAtBrD,SAAS;QACF,eAAS,GAAkB,mCAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnD,aAAO,GAAkB,mCAAM,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAM/C,kBAAY,GAAY,SAAS,CAAC;QAMzC,iCAA2B,GAAG,IAAI,qFAAkB,EAAE,CAAC;QACvD,qCAA+B,GAAG,IAAI,qFAAkB,EAAE,CAAC;QAC3D,6BAAuB,GAAG,KAAK,CAAC;;IAShC,CAAC;IAED,gDAAmB,GAAnB,UAAoB,MAAuB;QACvC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,oDAAuB,GAAvB,UAAwB,MAA2B;QAC/C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC;IAED,yCAAY,GAAZ,UAAa,KAAqB;QAAlC,iBA2BC;QA1BG,EAAE,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAEtC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,2BAA2B,CAAC,oBAAoB,EAAE,CAAC;QAExD,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAC9B,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,EACpE,IAAI,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,EAClF,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAChF,CAAC,SAAS,CAAC,UAAC,MAAM;YACf,KAAI,CAAC,2BAA2B,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC;YACvE,KAAI,CAAC,2BAA2B,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YACxD,KAAI,CAAC,2BAA2B,CAAC,oBAAoB,EAAE,CAAC;QAC5D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAgB,GAAhB,UAAiB,KAAqB;QAAtC,iBA2BC;QA1BG,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,EAAE;aAC9C,SAAS,CAAC,UAAC,MAAM;YACd,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEP,EAAE,CAAC,CAAC,IAAI,CAAC,+BAA+B,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE1C,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,+BAA+B,CAAC,oBAAoB,EAAE,CAAC;QAE5D,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAClC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,+BAA+B,CAAC,UAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAC5E,IAAI,CAAC,+BAA+B,CAAC,iBAAiB,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC,EAC1F,IAAI,CAAC,+BAA+B,CAAC,YAAY,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC,CACxF,CAAC,SAAS,CAAC,UAAC,MAAM;YACf,KAAI,CAAC,+BAA+B,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC;YAC3E,KAAI,CAAC,+BAA+B,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC5D,KAAI,CAAC,+BAA+B,CAAC,oBAAoB,EAAE,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAsB,GAAtB;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CACrC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,oBAAoB,EACzB,SAAS,EACT,CAAC,EACD,CAAC,CAAC;aACD,SAAS,CAAC,gBAAM;YACb,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACX,CAAC;IAED,uDAA0B,GAA1B;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CACzC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,oBAAoB,EACzB,IAAI,CAAC,kBAAkB,EACvB,SAAS,EACT,CAAC,EACD,CAAC,CAAC;aACD,SAAS,CAAC,gBAAM;YACb,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACX,CAAC;IAED,sDAAyB,GAAzB,UAA0B,IAAY,EAAE,MAAc;QAClD,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,yBAAyB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC7D,CAAC;IAzIiC;QAAjC,+DAAS,CAAC,qBAAqB,CAAC;kCAAsB,mHAA4B;mEAAC;IAC9C;QAArC,+DAAS,CAAC,yBAAyB,CAAC;kCAA0B,2HAAgC;uEAAC;IAC/D;QAAhC,+DAAS,CAAC,oBAAoB,CAAC;kCAAqB,qEAAK;kEAAC;IACtB;QAApC,+DAAS,CAAC,wBAAwB,CAAC;kCAAyB,qEAAK;sEAAC;IAClC;QAAhC,+DAAS,CAAC,oBAAoB,CAAC;kCAAqB,gFAAS;kEAAC;IAC1B;QAApC,+DAAS,CAAC,wBAAwB,CAAC;kCAAyB,gFAAS;sEAAC;IAP9D,kBAAkB;QAN9B,+DAAS,CAAC;;;YAGP,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCA6BgB,sDAAQ;YACQ,4FAAoB;YACtB,wEAAa;YACP,uFAAmB;OA/B5C,kBAAkB,CA4I9B;IAAD,yBAAC;CAAA,CA5IuC,kFAAgB,GA4IvD;AA5I8B;;;;;;;;;;;;ACpB/B,6MAA6M,mBAAmB,kOAAkO,eAAe,KAAK,oCAAoC,ocAAoc,iBAAiB,yCAAyC,sBAAsB,yCAAyC,iBAAiB,qKAAqK,6BAA6B,oDAAoD,2FAA2F,yCAAyC,sFAAsF,oPAAoP,cAAc,oE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3tD;AACM;AACwD;AAC5F;AACc;AAM/C;IAAsD,oDAAgB;IASlE,0CACI,QAAkB,EACV,gBAAsC;QAFlD,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,sBAAgB,GAAhB,gBAAgB,CAAsB;QANlD,YAAM,GAAG,KAAK,CAAC;;IASf,CAAC;IAED,iEAAsB,GAAtB,UAAuB,mBAAmB,EAAE,oBAAoB;QAC5D,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,mBAAmB,CAAC;QAC/B,CAAC;QACD,mBAAmB,GAAG,mBAAmB,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACxF,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,mCAAM,CAAC,mBAAmB,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QACrE,CAAC;QAED,EAAE,CAAC,CAAC,mBAAmB,KAAK,MAAM,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,MAAM,CAAC,mBAAmB,CAAC;IAC/B,CAAC;IAED,iDAAM,GAAN,UAAO,IAAI,EAAE,oBAAoB;QAC7B,MAAM,CAAC,oBAAoB,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,+CAAI,GAAJ,UAAK,MAA2B;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAE3B,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YACvE,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,gDAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAhDD;QADC,+DAAS,CAAC,yBAAyB,CAAC;kCAC9B,4DAAc;mEAAC;IAHb,gCAAgC;QAJ5C,+DAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;;SAEtC,CAAC;yCAWgB,sDAAQ;YACQ,4FAAoB;OAXzC,gCAAgC,CAoD5C;IAAD,uCAAC;CAAA,CApDqD,kFAAgB,GAoDrE;AApD4C;;;;;;;;;;;;ACV7C,uUAAuU,kBAAkB,mHAAmH,gCAAgC,qOAAqO,gBAAgB,4YAA4Y,0CAA0C,KAAK,wCAAwC,sHAAsH,k3BAAk3B,8BAA8B,wMAAwM,qBAAqB,gRAAgR,+EAA+E,6WAA6W,mTAAmT,yCAAyC,KAAK,uCAAuC,uoBAAuoB,mBAAmB,wMAAwM,gBAAgB,0MAA0M,yEAAyE,2TAA2T,mTAAmT,yCAAyC,KAAK,uCAAuC,ghBAAghB,kCAAkC,0MAA0M,kCAAkC,iNAAiN,+EAA+E,4TAA4T,yOAAyO,0CAA0C,oqBAAoqB,kCAAkC,0MAA0M,kCAAkC,kNAAkN,+EAA+E,6TAA6T,yOAAyO,0CAA0C,8hCAA8hC,yBAAyB,yLAAyL,yCAAyC,KAAK,uCAAuC,25BAA25B,cAAc,8jBAA8jB,eAAe,gkBAAgkB,gBAAgB,+tBAA+tB,eAAe,stBAAstB,0BAA0B,yLAAyL,yCAAyC,KAAK,uCAAuC,swBAAswB,eAAe,4xBAA4xB,oCAAoC,2NAA2N,gIAAgI,2yBAA2yB,+CAA+C,uaAAua,iBAAiB,6DAA6D,mBAAmB,6TAA6T,mBAAmB,6DAA6D,0BAA0B,gbAAgb,6EAA6E,sBAAsB,u0BAAu0B,sBAAsB,2NAA2N,qHAAqH,qyBAAqyB,+CAA+C,uaAAua,iBAAiB,6DAA6D,mBAAmB,6TAA6T,aAAa,6DAA6D,4CAA4C,gbAAgb,yEAAyE,sBAAsB,uS;;;;;;;;;;;ACAjgrB,4CAA4C,kBAAkB,gBAAgB,GAAG,qCAAqC,iCAAiC,GAAG,mDAAmD,yCAAyC,iBAAiB,GAAG,iDAAiD,yCAAyC,iBAAiB,GAAG,0CAA0C,iBAAiB,GAAG,sCAAsC,2BAA2B,mBAAmB,uBAAuB,iBAAiB,iBAAiB,GAAG,+EAA+E,oBAAoB,GAAG,4DAA4D,eAAe,GAAG,+CAA+C,sBAAsB,GAAG,wCAAwC,wBAAwB,wDAAwD,wDAAwD,qBAAqB,qCAAqC,qCAAqC,GAAG,wCAAwC,kBAAkB,GAAG,yEAAyE,oBAAoB,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5nC;AACvC;AACX;AACM;AACJ;AACkC;AACtE;AACsB;AAQvD;IAA4C,0CAAgB;IA4BxD,gCACI,QAAkB,EACV,gBAAiC,EACjC,qBAAgD;QAH5D,YAKI,kBAAM,QAAQ,CAAC,SAClB;QAJW,sBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,2BAAqB,GAArB,qBAAqB,CAA2B;QAvB5D,aAAO,GAAG,KAAK,CAAC;QAChB,6BAAuB,GAAG,KAAK,CAAC;QAGhC,sBAAgB,GAAkB,mCAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1E,oBAAc,GAAkB,mCAAM,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtD,cAAQ,GAAG,GAAG,CAAC;QACf,qCAA+B,GAAG,gFAA+B,CAAC;QAIlE,uBAAiB,GAAG;YAChB,SAAS,EAAE,KAAI,CAAC,gBAAgB;YAChC,OAAO,EAAE,KAAI,CAAC,cAAc;SAC/B,CAAC;QAGF,yBAAmB,GAAG,EAAE,CAAC;QACzB,uBAAiB,GAAG,EAAE,CAAC;;IAQvB,CAAC;IAED,qCAAI,GAAJ;QACI,IAAI,CAAC,oCAAoC,GAAG,gFAA+B,CAAC,KAAK,CAAC;IACtF,CAAC;IAED,yCAAQ,GAAR;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,gDAAe,GAAf;QAAA,iBAOC;QANG,UAAU,CAAC;YACP,KAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,KAAI,CAAC,0BAA0B,EAAE,CAAC;YAClC,KAAI,CAAC,mCAAmC,CAAC,CAAC,CAAC,KAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,CAAC;YACtF,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9C,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAED,sDAAqB,GAArB;QAAA,iBASC;QARG,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC;aACvC,eAAe,CAChB,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAC5F,UAAC,KAAK,EAAE,GAAG,EAAE,KAAK;YACd,KAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,KAAK,CAAC;YACzC,KAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,GAAG,CAAC;YACrC,KAAI,CAAC,0BAA0B,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,2DAA0B,GAA1B;QAAA,iBAgBC;QAfG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,qBAAqB;aACrB,0BAA0B,CAC3B,IAAI,CAAC,oCAAoC,EACzC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAChC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAC7B;aACA,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;YAChC,KAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACzD,KAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YACxD,KAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAClD,KAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACtD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACX,CAAC;IAED;;MAEE;IAEF,+DAA8B,GAA9B,UAA+B,IAAI;QAC/B,IAAM,YAAY,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAC7E,IAAM,SAAS,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,GAAQ,CAAC;QACb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnC,GAAG,GAAG;gBACF,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;gBACpB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK;aACtB,CAAC;YAEF,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClB,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC;YAED,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QACvB,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAED,0DAAyB,GAAzB,UAA0B,IAAI;QAA9B,iBAqCC;QApCG,IAAI,CAAC,wBAAwB,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC;QACX,CAAC;QAED,UAAU,CAAC;YACP,IAAM,IAAI,GAAG,KAAI,CAAC;YAClB,IAAM,cAAc,GAAG,KAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC;YAEhE,CAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,EAAE,cAAc,EAAE;gBAC1E,MAAM,EAAE;oBACJ,GAAG,EAAE;wBACD,IAAI,EAAE,IAAI;wBACV,WAAW,EAAE,GAAG;wBAChB,MAAM,EAAE,CAAC;wBACT,KAAK,EAAE;4BACH,IAAI,EAAE,IAAI;4BACV,MAAM,EAAE,CAAC;4BACT,SAAS,YAAC,KAAK,EAAE,MAAM;gCACnB,MAAM,CAAC,iCAAiC,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;4BACtG,CAAC;4BACD,UAAU,EAAE;gCACR,OAAO,EAAE,GAAG;6BACf;yBACJ;qBACJ;iBACJ;gBACD,MAAM,EAAE;oBACJ,IAAI,EAAE,KAAK;iBACd;gBACD,IAAI,EAAE;oBACF,SAAS,EAAE,IAAI;oBACf,SAAS,EAAE,IAAI;iBAClB;aACJ,CAAC,CAAC;QACP,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAED;;OAEG;IAGH,8DAA6B,GAA7B,UAA8B,IAAI;QAC9B,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnC,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAK,CAAC,CAAC,CAAC,GAAG,mCAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC;YAChD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAC1B,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAED,0DAAyB,GAAzB,UAA0B,IAAI;QAA9B,iBA0EC;QAzEG,IAAI,CAAC,uBAAuB,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC;QACX,CAAC;QAED,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,cAAc,GAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC;QAChE,UAAU,CAAC;YACN,CAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,EACvD,CAAC;oBACG,IAAI,EAAE,cAAc;oBACpB,KAAK,EAAE;wBACH,IAAI,EAAE,GAAG;wBACT,SAAS,EAAE,CAAC;qBACf;oBACD,KAAK,EAAE,CAAC,SAAS,CAAC;iBACrB,EAAE;oBACC,IAAI,EAAE,cAAc;oBACpB,MAAM,EAAE;wBACJ,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,CAAC;wBACT,SAAS,EAAE,SAAS;wBACpB,SAAS,EAAE,CAAC;qBACf;oBACD,KAAK,EAAE,SAAS;oBAChB,UAAU,EAAE,CAAC;iBAChB,EAAE;oBACC,IAAI,EAAE,cAAc;oBACpB,KAAK,EAAE;wBACH,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE,KAAK;wBACX,SAAS,EAAE,CAAC;qBACf;oBACD,KAAK,EAAE,SAAS;oBAChB,UAAU,EAAE,CAAC;iBAChB,CAAC,EACF;gBACI,KAAK,EAAE;oBACH,IAAI,EAAE,MAAM;oBACZ,UAAU,EAAE,KAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC;oBACrC,WAAW,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC;oBACvB,IAAI,EAAE;wBACF,UAAU,EAAE,EAAE;wBACd,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE,YAAY;wBACrB,KAAK,EAAE,SAAS;wBAChB,IAAI,EAAE,EAAE;qBACX;iBACJ;gBACD,KAAK,EAAE;oBACH,KAAK,EAAE,CAAC;oBACR,YAAY,EAAE,CAAC;oBACf,SAAS,EAAE,MAAM;oBACjB,IAAI,EAAE;wBACF,UAAU,EAAE,EAAE;wBACd,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE,YAAY;wBACrB,KAAK,EAAE,SAAS;qBACnB;iBACJ;gBACD,IAAI,EAAE;oBACF,SAAS,EAAE,IAAI;oBACf,SAAS,EAAE,KAAK;oBAChB,SAAS,EAAE,MAAM;oBACjB,WAAW,EAAE,MAAM;oBACnB,WAAW,EAAE,CAAC;oBACd,MAAM,EAAE;wBACJ,MAAM,EAAE,EAAE;qBACb;iBACJ;aACJ,CAAC,CAAC;QACX,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC;IAED,mEAAkC,GAAlC,UAAmC,QAAgB;QAC/C,IAAI,CAAC,oCAAoC,GAAG,QAAQ,CAAC;QACrD,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACvC,CAAC;IAED,4DAA2B,GAA3B;QAAA,iBAUC;QATG,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAC1C,IAAI,CAAC,oCAAoC,EACzC,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAChC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC;aAC9B,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YACxD,KAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACzC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,oEAAmC,GAAnC,UAAoC,8BAAmC;QAAvE,iBA4DC;QA3DG,IAAI,qCAAqC,GAAG,IAAI,CAAC;QAEjD,IAAM,0BAA0B,GAAG;YAC/B,IAAM,aAAa,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC;YACzC,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,CAAC;YACX,CAAC;YAED,aAAa,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC,CAAC;QAEF,IAAM,gBAAgB,GAAG,UAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK;YACxC,0BAA0B,EAAE,CAAC;YAC7B,CAAC,CAAC,mDAAmD,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,SAAS,CAAC;iBACvF,GAAG,CAAC;gBACD,QAAQ,EAAE,UAAU;gBACpB,OAAO,EAAE,MAAM;gBACf,GAAG,EAAE,CAAC,GAAG,EAAE;gBACX,IAAI,EAAE,CAAC,GAAG,EAAE;gBACZ,MAAM,EAAE,GAAG;gBACX,OAAO,EAAE,SAAS;gBAClB,OAAO,EAAE,KAAK;aACjB,CAAC;iBACD,QAAQ,CAAC,MAAM,CAAC;iBAChB,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC;QAEF,8BAA8B,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,KAAK,EAAE,GAAG,EAAE,IAAI;YAC9D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,qCAAqC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC3D,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,IAAM,mBAAmB,GAAG,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACxH,EAAE,CAAC,CAAC,KAAI,CAAC,oCAAoC,KAAK,gFAA+B,CAAC,KAAK;oBACnF,mBAAmB,CAAC,CAAC,CAAC;oBACtB,KAAK,GAAG,mCAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;gBACnE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oBAClE,KAAK,IAAI,mCAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBAChD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBACb,KAAK,IAAI,KAAK,GAAG,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBACjE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;wBACtD,KAAK,IAAI,KAAK,GAAG,mCAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBACtD,CAAC;gBACL,CAAC;gBAED,qCAAqC,GAAG,IAAI,CAAC,SAAS,CAAC;gBACvD,IAAM,KAAK,GAAG,KAAI,CAAC,CAAC,CAAC,kBAAkB,EAAE,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC;gBACvG,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YAC3D,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,8BAA8B,CAAC,IAAI,CAAC,YAAY,EAAE;YAC9C,qCAAqC,GAAG,IAAI,CAAC;YAC7C,0BAA0B,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IAEH,uDAAsB,GAAtB,UAAuB,aAAa;QAChC,IAAI,CAAC,iBAAiB,GAAG,aAAa,CAAC;IAC3C,CAAC;IAED,qDAAoB,GAApB;QACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,oBAAoB;YAC1C,oBAAoB,GAAG,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC5G,CAAC;IAED;;OAEG;IAEH,yDAAwB,GAAxB,UAAyB,eAAe;QACpC,IAAI,CAAC,mBAAmB,GAAG,eAAe,CAAC;IAC/C,CAAC;IAED,uDAAsB,GAAtB;QACI,IAAM,GAAG,GAAG,GAAG,CAAC,OAAO;YACnB,oBAAoB;YACpB,2BAA2B;YAC3B,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;YAC5E,GAAG;YACH,yBAAyB;YACzB,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC,CAAC;QAE/E,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IA3VsC;QAAtC,+DAAS,CAAC,0BAA0B,CAAC;kCAAyB,wDAAU;0EAAC;IACrC;QAApC,+DAAS,CAAC,wBAAwB,CAAC;kCAAyB,wDAAU;0EAAC;IACpC;QAAnC,+DAAS,CAAC,uBAAuB,CAAC;kCAAwB,wDAAU;yEAAC;IAErC;QAAhC,+DAAS,CAAC,oBAAoB,CAAC;kCAAqB,oEAAK;sEAAC;IACxB;QAAlC,+DAAS,CAAC,sBAAsB,CAAC;kCAAuB,oEAAK;wEAAC;IANtD,sBAAsB;QANlC,+DAAS,CAAC;;;YAGP,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCA8BgB,sDAAQ;YACQ,2FAAe;YACV,iGAAyB;OA/BnD,sBAAsB,CA6VlC;IAAD,6BAAC;CAAA,CA7V2C,kFAAgB,GA6V3D;AA7VkC;;;;;;;;;;;;ACfnC,sPAAsP,yBAAyB,iSAAiS,8BAA8B,8HAA8H,iDAAiD,qY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzsB;AACqB;AACJ;AAMrE;IAA+C,6CAAgB;IAC3D,mCACI,QAAkB;eAElB,kBAAM,QAAQ,CAAC;IACnB,CAAC;IALQ,yBAAyB;QAJrC,+DAAS,CAAC;;YAEP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAGgB,sDAAQ;OAFb,yBAAyB,CAMrC;IAAD,gCAAC;CAAA,CAN8C,kFAAgB,GAM9D;AANqC;;;;;;;;;;;;ACRtC,mRAAmR,2BAA2B,qqBAAqqB,eAAe,wmBAAwmB,eAAe,i3BAAi3B,eAAe,6F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/3E;AACjB;AACJ;AACkB;AACtD;AAQjC;IAA6C,2CAAgB;IAQzD,iCACI,QAAkB,EACV,uBAAqD;QAFjE,YAII,kBAAM,QAAQ,CAAC,SAGlB;QALW,6BAAuB,GAAvB,uBAAuB,CAA8B;QAG7D,KAAI,CAAC,wBAAwB,GAAG,mCAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtE,KAAI,CAAC,sBAAsB,GAAG,mCAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;IAC1D,CAAC;IAED,iDAAe,GAAf;QAEI,sBAAsB;QACtB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC;YAClD,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI;YAC7C,MAAM,EAAE,GAAG;SACd,CAAC,CAAC;QAEH,2BAA2B;QAC3B,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC;YACtD,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI;YAC7C,MAAM,EAAE,MAAM;SACjB,CAAC,CAAC;IACP,CAAC;IAED,6BAA6B;IAC7B,4CAAU,GAAV;QAAA,iBAQC;QAPG,IAAI,SAAS,GAAG,mCAAM,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAE5H,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,SAAS,CAAC;aACjD,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAC1D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACX,CAAC;IAED,kCAAkC;IAClC,gDAAc,GAAd;QAAA,iBAQC;QAPG,IAAI,SAAS,GAAG,mCAAM,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAEhI,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,SAAS,CAAC;aACrD,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAC1D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mCAAmC;IACnC,iDAAe,GAAf;QAAA,iBAMC;QALG,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,sBAAsB,CAAC;aACvG,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAC1D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACX,CAAC;IA3D8B;QAA9B,+DAAS,CAAC,kBAAkB,CAAC;kCAAmB,wDAAU;qEAAC;IACzB;QAAlC,+DAAS,CAAC,sBAAsB,CAAC;kCAAuB,wDAAU;yEAAC;IAH3D,uBAAuB;QANnC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;;YAE7B,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAWgB,sDAAQ;YACe,oGAA4B;OAVxD,uBAAuB,CA8DnC;IAAD,8BAAC;CAAA,CA9D4C,kFAAgB,GA8D5D;AA9DmC;;;;;;;;;;;;ACZpC,gmBAAgmB,iBAAiB,6PAA6P,eAAe,qE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz0B;AACqB;AACJ;AACkB;AAQvF;IAA2C,yCAAgB;IAIvD,+BACI,QAAkB,EACV,uBAAqD;QAFjE,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,6BAAuB,GAAvB,uBAAuB,CAA8B;;IAGjE,CAAC;IAED,oBAAoB;IACpB,2CAAW,GAAX;QAAA,iBAQC;QANG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC;aAC7D,SAAS,CAAC,cAAI;YACV,GAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACrD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACtD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACX,CAAC;IApBQ,qBAAqB;QANjC,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;;YAE1B,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAOgB,sDAAQ;YACe,oGAA4B;OANxD,qBAAqB,CAqBjC;IAAD,4BAAC;CAAA,CArB0C,kFAAgB,GAqB1D;AArBiC;;;;;;;;;;;;ACXlC,mRAAmR,mBAAmB,g9BAAg9B,WAAW,KAAK,WAAW,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7tC;AACN;AAC2B;AACJ;AACkB;AAQvF;IAA+C,6CAAgB;IAK3D,mCACI,QAAkB,EACV,uBAAqD;QAFjE,YAII,kBAAM,QAAQ,CAAC,SAElB;QAJW,6BAAuB,GAAvB,uBAAuB,CAA8B;QAJjE,mBAAa,GAAU,EAAE,CAAC;QAOtB,KAAI,CAAC,SAAS,GAAG,2DAAS,CAAC,oBAAoB,GAAG,+BAA+B,CAAC;;IACtF,CAAC;IAED,yBAAyB;IACzB,4CAAQ,GAAR,UAAS,KAAK;QACV,GAAG,CAAC,CAAe,UAAW,EAAX,UAAK,CAAC,KAAK,EAAX,cAAW,EAAX,IAAW;YAAzB,IAAM,IAAI;YACX,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;IACL,CAAC;IAED,gDAAY,GAAZ,UAAa,KAAK;QACd,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAE,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjF,CAAC;IAtBQ,yBAAyB;QANrC,+DAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;;YAE/B,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAQgB,sDAAQ;YACe,oGAA4B;OAPxD,yBAAyB,CAuBrC;IAAD,gCAAC;CAAA,CAvB8C,kFAAgB,GAuB9D;AAvBqC;;;;;;;;;;;;ACZtC,+/BAA+/B,eAAe,ooBAAooB,eAAe,wqBAAwqB,eAAe,qoBAAqoB,eAAe,+F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAx7F;AACqB;AACJ;AACkB;AAQvF;IAA8C,4CAAgB;IAO1D,kCACI,QAAkB,EACV,uBAAqD;QAFjE,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,6BAAuB,GAAvB,uBAAuB,CAA8B;QAPjE,eAAS,GAAG,EAAE,CAAC;QACf,gBAAU,GAAG,EAAE,CAAC;QAChB,iBAAW,GAAG,EAAE,CAAC;QACjB,mBAAa,GAAG,EAAE,CAAC;;IAOnB,CAAC;IAED,kDAAe,GAAf;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAED,kDAAe,GAAf;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED,oDAAiB,GAAjB;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAED,sDAAmB,GAAnB;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;IAED,oBAAoB;IACpB,8CAAW,GAAX,UAAY,KAAU;QAAtB,iBAOC;QALG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,KAAK,CAAC;aAC9C,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACtD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACX,CAAC;IAtCQ,wBAAwB;QANpC,+DAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;;YAE9B,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAUgB,sDAAQ;YACe,oGAA4B;OATxD,wBAAwB,CAuCpC;IAAD,+BAAC;CAAA,CAvC6C,kFAAgB,GAuC7D;AAvCoC;;;;;;;;;;;;ACXrC,u/CAAu/C,eAAe,urCAAurC,eAAe,6F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxpF;AACqB;AACJ;AACqC;AAQ1G;IAA8C,4CAAgB;IAM1D,kCACI,QAAkB,EACV,uBAAqD;QAFjE,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,6BAAuB,GAAvB,uBAAuB,CAA8B;QAJjE,eAAS,GAAwB,IAAI,KAAK,EAAqB,CAAC;;IAOhE,CAAC;IAED,gBAAgB;IAChB,kDAAe,GAAf,UAAgB,KAAK;QAArB,iBAIC;QAHG,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,mBAAS;YACtE,KAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uBAAuB;IACvB,wDAAqB,GAArB;QAAA,iBAqBC;QApBG,IAAI,iBAAiB,GAAG,IAAI,KAAK,EAAqB,CAAC;QAEvD,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAErC,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,iBAAiB,CAAC;aACtE,SAAS,CAAC,UAAC,SAA8B;YACtC,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,KAAK,EAAE,IAAI;gBAC1B,OAAO,IAAI,+BAA6B,IAAI,CAAC,KAAK,kCAA6B,IAAI,CAAC,IAAI,WAAQ,CAAC;YACrG,CAAC,CAAC,CAAC;YAEH,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YAExB,GAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACxD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAC7C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC7C,GAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAC1D,CAAC,CAAC,CAAC;IACX,CAAC;IAED,sBAAsB;IACtB,0DAAuB,GAAvB;QAAA,iBAiBC;QAhBG,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC;aACnE,SAAS,CAAC,UAAC,SAA8B;YACtC,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,KAAK,EAAE,IAAI;gBAC1B,OAAO,IAAI,+BAA6B,IAAI,CAAC,KAAK,kCAA6B,IAAI,CAAC,IAAI,WAAQ,CAAC;YACrG,CAAC,CAAC,CAAC;YAEH,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YAExB,GAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACxD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAC7C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC7C,GAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAC1D,CAAC,CAAC,CAAC;IACX,CAAC;IA9DQ,wBAAwB;QANpC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;;YAE7B,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCASgB,sDAAQ;YACe,oGAA4B;OARxD,wBAAwB,CA+DpC;IAAD,+BAAC;CAAA,CA/D6C,kFAAgB,GA+D7D;AA/DoC;;;;;;;;;;;;ACXrC,yNAAyN,mBAAmB,qUAAqU,oBAAoB,IAAI,qBAAqB,+DAA+D,yBAAyB,iNAAiN,yNAAyN,wBAAwB,8JAA8J,oBAAoB,yLAAyL,6BAA6B,2PAA2P,0BAA0B,mYAAmY,aAAa,qXAAqX,aAAa,sYAAsY,qBAAqB,uiBAAuiB,8BAA8B,4iBAA4iB,oBAAoB,oiBAAoiB,6BAA6B,w0BAAw0B,sBAAsB,sTAAsT,sBAAsB,4iBAA4iB,+BAA+B,ijBAAijB,wCAAwC,4UAA4U,8BAA8B,ilBAAilB,uCAAuC,iNAAiN,4CAA4C,+dAA+d,uBAAuB,odAAod,+BAA+B,igBAAigB,mCAAmC,4IAA4I,6BAA6B,+MAA+M,eAAe,mWAAmW,eAAe,yNAAyN,aAAa,oG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9iV;AACzD;AACW;AAC8F;AACpH;AACyB;AAMxE;IAAuD,qDAAgB;IAoBnE,2CACI,QAAkB,EACV,eAAoC,EACpC,oBAA8C;QAH1D,YAKI,kBAAM,QAAQ,CAAC,SAClB;QAJW,qBAAe,GAAf,eAAe,CAAqB;QACpC,0BAAoB,GAApB,oBAAoB,CAA0B;QAjBhD,eAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,YAAM,GAAG,KAAK,CAAC;QACf,YAAM,GAAG,KAAK,CAAC;QAEf,aAAO,GAAmB,IAAI,sFAAc,EAAE,CAAC;QAC/C,sBAAgB,GAAsB,EAAE,CAAC;QAEzC,kBAAY,GAA2B,uEAAsB,CAAC,cAAc,CAAC;QAC7E,sBAAgB,GAAkC,uEAAsB,CAAC;QACzE,YAAM,GAAG,KAAK,CAAC;QACf,mBAAa,GAAG,KAAK,CAAC;QACtB,wBAAkB,GAAG,KAAK,CAAC;;IAQ3B,CAAC;IAED,8DAAkB,GAAlB;QACI,gFAAgF;QAChF,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,6BAA6B,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,gDAAI,GAAJ,UAAK,SAAkB;QAAvB,iBAoBC;QAnBG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,wBAAc;YAC3E,KAAI,CAAC,gBAAgB,GAAG,cAAc,CAAC,KAAK,CAAC;YAC7C,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,uFAAe,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAE1H,KAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,uBAAa;gBACrE,KAAI,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;gBACrC,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,aAAa,CAAC;gBAE1C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC,uEAAsB,CAAC,sBAAsB,CAAC,CAAC,CAAC,uEAAsB,CAAC,cAAc,CAAC;gBAE/I,KAAI,CAAC,MAAM,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC;gBACxF,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC;gBAC7D,KAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC,OAAO,CAAC,qBAAqB,GAAG,CAAC,CAAC;gBAE1E,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAO,GAAP;QACI,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;IACnD,CAAC;IAED,6DAAiB,GAAjB,UAAkB,KAAK;QACnB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;IACrC,CAAC;IAED,8DAAkB,GAAlB,UAAmB,KAAK;QACpB,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC;IACtC,CAAC;IAED,uDAAW,GAAX,UAAY,MAAM;QACd,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,SAAS,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,SAAS,CAAC;IAC1C,CAAC;IAED,iEAAqB,GAArB,UAAsB,kBAAkB;QACpC,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAC1C,CAAC;IAED,gDAAI,GAAJ;QAAA,iBAaC;QAZG,IAAM,KAAK,GAAG,IAAI,gGAAwB,EAAE,CAAC;QAC7C,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;QAE5D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,KAAK,CAAC;aAC5C,OAAO,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC;aAClC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,iDAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IA7F8B;QAA9B,+DAAS,CAAC,kBAAkB,CAAC;kCAAmB,wDAAU;+EAAC;IAC5B;QAA/B,+DAAS,CAAC,mBAAmB,CAAC;kCAAQ,4DAAc;oEAAC;IAC5B;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAc,mFAAoB;0EAAC;IAElD;QAAT,4DAAM,EAAE;kCAAY,0DAAY;wEAAgC;IANxD,iCAAiC;QAJ7C,+DAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;;SAEvC,CAAC;yCAsBgB,sDAAQ;YACO,2FAAmB;YACd,gGAAwB;OAvBjD,iCAAiC,CAgG7C;IAAD,wCAAC;CAAA,CAhGsD,kFAAgB,GAgGtE;AAhG6C;;;;;;;;;;;;ACX9C,8RAA8R,gBAAgB,uGAAuG,2BAA2B,0QAA0Q,yBAAyB,unBAAunB,+CAA+C,qWAAqW,mKAAmK,cAAc,iIAAiI,kBAAkB,iIAAiI,mBAAmB,0TAA0T,2hBAA2hB,gBAAgB,qZAAqZ,WAAW,gUAAgU,aAAa,+RAA+R,oBAAoB,iIAAiI,wCAAwC,2PAA2P,8DAA8D,yT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA99I;AACU;AACJ;AACyB;AAC3B;AACZ;AACsC;AAM7F;IAAuC,qCAAgB;IAMnD,2BACI,QAAkB,EACV,eAAoC;QAFhD,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,qBAAe,GAAf,eAAe,CAAqB;;IAGhD,CAAC;IAED,uCAAW,GAAX;QAAA,iBAOC;QANG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAC/C,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAC/C,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAChE,KAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/C,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAa,GAAb;QACI,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;IACzC,CAAC;IAED,yCAAa,GAAb,UAAc,OAAuB;QAArC,iBAYC;QAXG,IAAI,CAAC,OAAO,CAAC,OAAO,CAChB,IAAI,CAAC,CAAC,CAAC,6BAA6B,EAAE,OAAO,CAAC,WAAW,CAAC,EAC1D,qBAAW;YACP,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;oBACrD,KAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IApCsC;QAAtC,+DAAS,CAAC,0BAA0B,CAAC;kCAA2B,yGAAiC;uEAAC;IAC3E;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,oEAAK;wDAAC;IACjB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,gFAAS;wDAAC;IAJpC,iBAAiB;QAJ7B,+DAAS,CAAC;;YAEP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAQgB,sDAAQ;YACO,2FAAmB;OARvC,iBAAiB,CAuC7B;IAAD,wBAAC;CAAA,CAvCsC,kFAAgB,GAuCtD;AAvC6B;;;;;;;;;;;;ACZ9B,2HAA2H,s7DAAs7D,gCAAgC,6yCAA6yC,0BAA0B,miBAAmiB,yBAAyB,qrBAAqrB,gBAAgB,+CAA+C,eAAe,6kK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3pJ;AACa;AACJ;AACU;AACkG;AAMjL;IAAsC,oCAAgB;IAMlD,0BACI,QAAkB,EACV,sBAA2C,EAC3C,oBAA8C,EAC9C,kBAAqC;QAJjD,YAMI,kBAAM,QAAQ,CAAC,SAClB;QALW,4BAAsB,GAAtB,sBAAsB,CAAqB;QAC3C,0BAAoB,GAApB,oBAAoB,CAA0B;QAC9C,wBAAkB,GAAlB,kBAAkB,CAAmB;QARjD,YAAM,GAAG,KAAK,CAAC;;IAWf,CAAC;IAED,8CAAmB,GAAnB;QAAA,iBAQC;QAPG,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE;aAC3C,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,aAAa,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YAClD,KAAI,CAAC,aAAa,CAAC,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC;YACpD,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,+BAAI,GAAJ;QACI,IAAI,CAAC,sBAAsB,CAAC,aAAa,EAAE;aACtC,SAAS,CAAC,gBAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;YAC/B,CAAC;QACL,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,aAAa,GAAG,IAAI,kFAAU,EAAE,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,4FAAoB,EAAE,CAAC;QAC7D,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,kGAA0B,EAAE,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC;QAC1C,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED,mCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,kCAAO,GAAP;QAAA,iBASC;QARG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;aAChD,OAAO,CAAC;YACL,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACxB,CAAC,CAAC;aACD,SAAS,CAAC;YACP,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;IAtDQ,gBAAgB;QAJ5B,+DAAS,CAAC;;YAEP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAQgB,sDAAQ;YACc,2FAAmB;YACrB,gGAAwB;YAC1B,4FAAiB;OAVxC,gBAAgB,CAuD5B;IAAD,uBAAC;CAAA,CAvDqC,kFAAgB,GAuDrD;AAvD4B;;;;;;;;;;;;ACV7B,iMAAiM,mBAAmB,sUAAsU,qBAAqB,IAAI,eAAe,gEAAgE,0BAA0B,iNAAiN,ulBAAulB,WAAW,6HAA6H,0BAA0B,4mBAA4mB,WAAW,qIAAqI,kBAAkB,yaAAya,kBAAkB,mSAAmS,eAAe,8NAA8N,aAAa,oG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3uG;AAC5B;AACoF;AAC1G;AAM/C;IAAwD,sDAAgB;IAgBpE,4CACI,QAAkB,EACV,gBAAsC;QAFlD,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,sBAAgB,GAAhB,gBAAgB,CAAsB;QAZxC,eAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,YAAM,GAAG,KAAK,CAAC;QACf,YAAM,GAAG,KAAK,CAAC;QAEf,cAAQ,GAA+B,IAAI,kGAA0B,EAAE,CAAC;QAExE,mBAAa,GAAsB,EAAE,CAAC;QACtC,WAAK,GAAsB,EAAE,CAAC;;IAO9B,CAAC;IAED,iDAAI,GAAJ,UAAK,UAAmB;QAAxB,iBAkBC;QAjBG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,gBAAM;YACjE,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;YAC1C,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAE1B,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;YACnC,CAAC;YAED,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,UAAU,CAAC;gBACH,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAC/D,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YACnE,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAI,GAAJ;QAAA,iBAYC;QAXG,IAAI,KAAK,GAAG,IAAI,mGAA2B,EAAE,CAAC;QAC9C,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,KAAK,CAAC;aAC9C,OAAO,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC;aAClC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,kDAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IA1D+B;QAA/B,+DAAS,CAAC,mBAAmB,CAAC;kCAAQ,4DAAc;qEAAC;IACvB;QAA9B,+DAAS,CAAC,kBAAkB,CAAC;kCAAmB,wDAAU;gFAAC;IACjC;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,wDAAU;4EAAC;IAE1C;QAAT,4DAAM,EAAE;kCAAY,0DAAY;yEAAgC;IANxD,kCAAkC;QAJ9C,+DAAS,CAAC;YACP,QAAQ,EAAE,2BAA2B;;SAExC,CAAC;yCAkBgB,sDAAQ;YACQ,4FAAoB;OAlBzC,kCAAkC,CA6D9C;IAAD,yCAAC;CAAA,CA7DuD,kFAAgB,GA6DvE;AA7D8C;;;;;;;;;;;;ACT/C,6MAA6M,mBAAmB,gTAAgT,iBAAiB,iNAAiN,6LAA6L,YAAY,iDAAiD,WAAW,2NAA2N,mBAAmB,UAAU,0BAA0B,gYAAgY,qBAAqB,UAAU,4BAA4B,oIAAoI,qBAAqB,0RAA0R,eAAe,8NAA8N,aAAa,oG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhxE;AAC5B;AACmC;AAC5E;AACmB;AAM/C;IAA4C,0CAAgB;IAgBxD,gCACI,QAAkB,EACV,gBAAsC;QAFlD,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,sBAAgB,GAAhB,gBAAgB,CAAsB;QAbxC,eAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,WAAK,GAA4B,IAAI,+FAAuB,EAAE,CAAC;QAM/D,YAAM,GAAG,KAAK,CAAC;QACf,YAAM,GAAG,KAAK,CAAC;;IAOf,CAAC;IAED,qCAAI,GAAJ,UAAK,gBAAwB,EAAE,kBAA0B,EAAE,UAAkB,EAAE,GAAW,EAAE,QAAgB,EAAE,UAAkB;QAC5H,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;QAE9B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,2CAAM,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,gBAAgB,EAA3B,CAA2B,CAAC,CAAC;QACzF,IAAI,CAAC,cAAc,GAAG,2CAAM,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,kBAAkB,EAA7B,CAA6B,CAAC,CAAC;QAE7F,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,wCAAO,GAAP;QACI,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;IACnD,CAAC;IAED,qCAAI,GAAJ;QAAA,iBASC;QARG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC;aAC/C,OAAO,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC;aAClC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,sCAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAEO,6CAAY,GAApB,UAAqB,IAAY;QAC7B,MAAM,CAAC,2CAAM,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,IAAI,EAAf,CAAe,CAAC,CAAC;IACpE,CAAC;IA1D8B;QAA9B,+DAAS,CAAC,kBAAkB,CAAC;kCAAmB,wDAAU;oEAAC;IACxC;QAAnB,+DAAS,CAAC,OAAO,CAAC;kCAAQ,4DAAc;yDAAC;IAEhC;QAAT,4DAAM,EAAE;kCAAY,0DAAY;6DAAgC;IALxD,sBAAsB;QAJlC,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;;SAE5B,CAAC;yCAkBgB,sDAAQ;YACQ,4FAAoB;OAlBzC,sBAAsB,CA6DlC;IAAD,6BAAC;CAAA,CA7D2C,kFAAgB,GA6D3D;AA7DkC;;;;;;;;;;;;ACVnC,sRAAsR,sBAAsB,uGAAuG,gCAAgC,8nBAA8nB,qBAAqB,mgBAAmgB,kEAAkE,wJAAwJ,sBAAsB,0VAA0V,uBAAuB,ygBAAygB,kEAAkE,wJAAwJ,sBAAsB,kVAAkV,eAAe,2iBAA2iB,YAAY,yVAAyV,oBAAoB,gcAAgc,YAAY,6EAA6E,kBAAkB,yfAAyf,yBAAyB,+OAA+O,gBAAgB,yrBAAyrB,+CAA+C,oZAAoZ,UAAU,gPAAgP,gBAAgB,wPAAwP,kBAAkB,gLAAgL,WAAW,yTAAyT,YAAY,KAAK,4BAA4B,sJAAsJ,kBAAkB,KAAK,kCAAkC,sJAAsJ,oBAAoB,KAAK,qCAAqC,ycAAyc,WAAW,wbAAwb,+CAA+C,sfAAsf,8DAA8D,2U;;;;;;;;;;;ACAviT,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkG;AACjC;AACQ;AACJ;AACU;AACnD;AAEuC;AACZ;AACc;AAOrE;IAA4C,0CAAgB;IAmBxD,gCACI,QAAkB,EACV,gBAAsC,EACtC,OAAe,EACf,eAA+B;QAJ3C,YAMI,kBAAM,QAAQ,CAAC,SAClB;QALW,sBAAgB,GAAhB,gBAAgB,CAAsB;QACtC,aAAO,GAAP,OAAO,CAAQ;QACf,qBAAe,GAAf,eAAe,CAAgB;QAZ3C,iBAAW,GAAa,EAAE,CAAC;QAC3B,eAAS,GAAqC,EAAE,CAAC;;IAcjD,CAAC;IAED,yCAAQ,GAAR;QACI,IAAI,CAAC,WAAW,GAAG,0CAAK,CAAC,6CAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,gBAAM,IAAI,aAAM,CAAC,IAAI,KAAK,+BAA+B,EAA/C,CAA+C,CAAC,EAAE,eAAK,IAAI,YAAK,CAAC,IAAI,EAAV,CAAU,CAAC,CAAC;QAC7I,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC;IAChD,CAAC;IAED,gDAAe,GAAf;QAAA,iBAIC;QAHG,UAAU,CAAC;YACP,KAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAgB,GAAhB,UAAiB,KAAqB;QAAtC,iBAqBC;QApBG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAClC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,EAChE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,EAC3D,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAClD,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,UAAU,CAClB,CAAC,SAAS,CAAC,gBAAM;YACd,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC;YAC9D,KAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/C,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAI,GAAJ;QAAA,iBAiBC;QAhBG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YACjD,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC;YAC5F,KAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YACzC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,MAAM,CAAC;YACjD,KAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,IAAI,KAAK,CAAC;YAC9D,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAE7C,UAAU,CAAC;gBACP,CAAC,CAAC,KAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBACvE,CAAC,CAAC,KAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBACzE,CAAC,CAAC,KAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBACjE,CAAC,CAAC,KAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC5E,CAAC,EAAE,CAAC,CAAC,CAAC;YAEN,KAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAU,GAAV;QACI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,6CAAY,GAAZ;QACI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,qBAAqB,EAAE,IAAI,CAAC,kBAAkB,EAAE,OAAO,EAAE;gBAC5E,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;gBACzC,UAAU,EAAE,IAAI,CAAC,UAAU;aAC9B,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE7B,MAAM,CAAC;QACX,CAAC;IACL,CAAC;IAED,+CAAc,GAAd,UAAe,IAAI;QACf,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,yBAAyB,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAChE,CAAC;IAED,0DAAyB,GAAzB;QACI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1E,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC;gBAChF,MAAM,CAAC;YACX,CAAC;QACL,CAAC;IACL,CAAC;IA7GwC;QAAxC,+DAAS,CAAC,4BAA4B,CAAC;kCAA6B,wDAAU;8EAAC;IACzC;QAAtC,+DAAS,CAAC,0BAA0B,CAAC;kCAA2B,wDAAU;4EAAC;IAC3C;QAAhC,+DAAS,CAAC,oBAAoB,CAAC;kCAAqB,wDAAU;sEAAC;IACxB;QAAvC,+DAAS,CAAC,2BAA2B,CAAC;kCAA4B,wDAAU;6EAAC;IACrD;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,wDAAU;8DAAC;IACpB;QAA3B,+DAAS,CAAC,eAAe,CAAC;kCAAgB,iFAAsB;iEAAC;IAC1C;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,oEAAK;6DAAC;IACjB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,gFAAS;6DAAC;IATpC,sBAAsB;QALlC,+DAAS,CAAC;;;YAGP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAqBgB,sDAAQ;YACQ,4FAAoB;YAC7B,sDAAM;YACE,8DAAc;OAvBlC,sBAAsB,CAgHlC;IAAD,6BAAC;CAAA,CAhH2C,kFAAgB,GAgH3D;AAhHkC;;;;;;;;;;;;AChBnC,+RAA+R,kBAAkB,uGAAuG,4BAA4B,gSAAgS,0BAA0B,0nBAA0nB,+CAA+C,qlBAAqlB,cAAc,iIAAiI,WAAW,iIAAiI,WAAW,8KAA8K,cAAc,mIAAmI,mBAAmB,iIAAiI,gBAAgB,0TAA0T,6hBAA6hB,gBAAgB,idAAid,WAAW,iVAAiV,kBAAkB,mVAAmV,2BAA2B,0XAA0X,aAAa,gTAAgT,kDAAkD,2JAA2J,oBAAoB,wDAAwD,cAAc,0LAA0L,aAAa,0XAA0X,UAAU,uSAAuS,SAAS,kLAAkL,wCAAwC,wTAAwT,UAAU,iRAAiR,SAAS,4SAA4S,8DAA8D,gOAAgO,2CAA2C,wO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/6P;AACrD;AACgC;AACJ;AAC+D;AACjE;AACZ;AACwC;AAO/F;IAAwC,sCAAgB;IAUpD,4BACI,QAAkB,EACV,gBAAsC,EACtC,OAAe;QAH3B,YAKI,kBAAM,QAAQ,CAAC,SAClB;QAJW,sBAAgB,GAAhB,gBAAgB,CAAsB;QACtC,aAAO,GAAP,OAAO,CAAQ;;IAG3B,CAAC;IAED,yCAAY,GAAZ;QAAA,iBASC;QARG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,gBAAM;YACjD,KAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;YACtD,KAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/C,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAChE,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAW,GAAX,UAAY,QAAoC;QAC5C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,qBAAqB,EAAE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,iDAAoB,GAApB,UAAqB,QAAoC;QAAzD,iBAOC;QANG,IAAM,KAAK,GAAG,IAAI,+FAAuB,EAAE,CAAC;QAC5C,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YACtD,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAc,GAAd,UAAe,QAAoC;QAAnD,iBAYC;QAXG,IAAI,CAAC,OAAO,CAAC,OAAO,CAChB,IAAI,CAAC,CAAC,CAAC,8BAA8B,EAAE,QAAQ,CAAC,WAAW,CAAC,EAC5D,qBAAW;YACP,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;oBACxD,KAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IApD4B;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;kCAAiB,wDAAU;8DAAC;IAChB;QAAvC,+DAAS,CAAC,2BAA2B,CAAC;kCAA4B,2GAAkC;yEAAC;IAC9E;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,oEAAK;yDAAC;IACjB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,gFAAS;yDAAC;IALpC,kBAAkB;QAL9B,+DAAS,CAAC;;YAEP,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAYgB,sDAAQ;YACQ,4FAAoB;YAC7B,sDAAM;OAblB,kBAAkB,CAuD9B;IAAD,yBAAC;CAAA,CAvDuC,kFAAgB,GAuDvD;AAvD8B;;;;;;;;;;;;ACd/B,sPAAsP,oBAAoB,uTAAuT,aAAa,2LAA2L,yBAAyB,4OAA4O,iBAAiB,yfAAyf,YAAY,8IAA8I,2DAA2D,cAAc,4XAA4X,kBAAkB,2LAA2L,8BAA8B,4OAA4O,oBAAoB,wIAAwI,gBAAgB,oaAAoa,iBAAiB,mDAAmD,uBAAuB,2Q;;;;;;;;;;;ACAzvG,iCAAiC,iCAAiC,uBAAuB,uBAAuB,iBAAiB,wBAAwB,GAAG,+BAA+B,uBAAuB,mBAAmB,GAAG,0CAA0C,gBAAgB,0BAA0B,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlO;AACpB;AACJ;AACgD;AAC3C;AAC9C;AAO5B;IAA0C,wCAAgB;IAMtD,8BACI,QAAkB,EACV,aAAkC,EAClC,cAAkC,EAClC,oBAAyC;QAJrD,YAKI,kBAAM,QAAQ,CAAC,SAClB;QAJW,mBAAa,GAAb,aAAa,CAAqB;QAClC,oBAAc,GAAd,cAAc,CAAoB;QAClC,0BAAoB,GAApB,oBAAoB,CAAqB;QARrD,aAAO,GAAG,KAAK,CAAC;QAChB,YAAM,GAAQ,IAAI,CAAC;QACnB,UAAI,GAAQ,EAAE,CAAC;QAqDf,qBAAe,GAAG;YACd,IAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;gBACnD,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;;IAlDF,CAAC;IAED,iDAAkB,GAAlB;QACI,gFAAgF;QAChF,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,6BAA6B,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,wCAAS,GAAT;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;aAC5B,OAAO,CAAC;YACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;aACD,SAAS,CAAC,UAAC,MAAM;YACd,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,yCAAU,GAAV,UAAW,SAAS;QAChB,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,KAAK,GAAG,IAAI,yFAAiB,EAAE,CAAC;QACtC,KAAK,CAAC,EAAE,GAAG,SAAS,CAAC;QAErB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAc,GAAd;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAU,GAAV;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;YACpD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,iBAAiB,CAAC;YACrC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IASD,0CAAW,GAAX,UAAY,GAAW;QAEnB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,qBAAqB,CAAC;QACjC,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,kBAAkB,CAAC;QAC9B,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,qBAAqB,CAAC;QACjC,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,oBAAoB,CAAC;QAChC,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,oBAAoB,CAAC;QAChC,CAAC;QAED,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAED,yCAAU,GAAV,UAAW,GAAW;QAClB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QAED,MAAM,CAAC,EAAE,CAAC;IACd,CAAC;IAED,+CAAgB,GAAhB,UAAiB,GAAW;QACxB,MAAM,CAAC,6CAAQ,CAAC,GAAG,CAAC;aACf,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;aACpB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;aACnB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;aACnB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;aACpB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,oDAAqB,GAArB;QACI,IAAM,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;QACxC,IAAM,WAAW,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE,CAAC;QAC/C,IAAM,UAAU,GAAG,YAAY,GAAG,WAAW,CAAC;QAC9C,IAAM,WAAW,GAAG,WAAW,GAAG,UAAU,CAAC;QAC7C,CAAC,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,8CAAe,GAAf;QAAA,iBAIC;QAHG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAQ,GAAR;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IA5IQ,oBAAoB;QALhC,+DAAS,CAAC;;;YAGP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAQgB,sDAAQ;YACK,2FAAmB;YAClB,0FAAkB;YACZ,uFAAmB;OAV5C,oBAAoB,CA6IhC;IAAD,2BAAC;CAAA,CA7IyC,kFAAgB,GA6IzD;AA7IgC;;;;;;;;;;;;ACZjC,qMAAqM,mBAAmB,2MAA2M,kBAAkB,qMAAqM,yXAAyX,yBAAyB,yrBAAyrB,+CAA+C,gsBAAgsB,WAAW,wjBAAwjB,aAAa,wRAAwR,+CAA+C,ufAAuf,8DAA8D,mWAAmW,eAAe,0MAA0M,aAAa,6E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp3I;AAChB;AAC8F;AACvI;AACmB;AAEoB;AACZ;AAOvD;IAA6C,2CAAgB;IAgBzD,iCACI,QAAkB,EACV,wBAAsD;QAFlE,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,8BAAwB,GAAxB,wBAAwB,CAA8B;QAdxD,kBAAY,GAA6C,IAAI,0DAAY,EAA8B,CAAC;QAMlH,aAAO,GAAG,KAAK,CAAC;QAChB,gBAAU,GAAG,EAAE,CAAC;QAEhB,YAAM,GAAG,KAAK,CAAC;;IAQf,CAAC;IAED,sCAAI,GAAJ;QACI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,8CAAY,GAAZ;QACI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,uCAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,uCAAK,GAAL;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,mDAAiB,GAAjB,UAAkB,KAAoB;QAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,4CAAU,GAAV,UAAW,KAAqB;QAAhC,iBAuBC;QArBG,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE7B,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,IAAM,KAAK,GAAG,IAAI,sGAA8B,EAAE,CAAC;QACnD,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACnD,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QAC/B,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC9E,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAExF,IAAI,CAAC,wBAAwB;aACxB,SAAS,CAAC,KAAK,CAAC;aAChB,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC;YAC9D,KAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/C,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACX,CAAC;IAED,4DAA0B,GAA1B;QAAA,iBAiBC;QAhBG,IAAM,KAAK,GAAG,IAAI,oGAA4B,EAAE,CAAC;QACjD,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACnD,KAAK,CAAC,OAAO,GAAG,0CAAK,CAAC,IAAI,CAAC,eAAe,EAAE,wBAAc,IAAI,aAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAA5B,CAA4B,CAAC,CAAC;QAC5F,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,wBAAwB;aACxB,0BAA0B,CAAC,KAAK,CAAC;aACjC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACjD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,IAAI,EAAE,KAAK,CAAC,kBAAkB;aACjC,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;IAtFS;QAAT,4DAAM,EAAE;kCAAe,0DAAY;iEAA8E;IAE9F;QAAnB,+DAAS,CAAC,OAAO,CAAC;kCAAQ,4DAAc;0DAAC;IAClB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,oEAAK;8DAAC;IACjB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,gFAAS;8DAAC;IARpC,uBAAuB;QAJnC,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;;SAE7B,CAAC;yCAkBgB,sDAAQ;YACgB,oGAA4B;OAlBzD,uBAAuB,CA2FnC;IAAD,8BAAC;CAAA,CA3F4C,kFAAgB,GA2F5D;AA3FmC;;;;;;;;;;;;ACdpC,yNAAyN,mBAAmB,oVAAoV,aAAa,IAAI,8BAA8B,wEAAwE,4BAA4B,iNAAiN,uRAAuR,aAAa,8LAA8L,uCAAuC,qZAAqZ,eAAe,8NAA8N,aAAa,wG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAx8D;AAC/C;AACiG;AACvH;AAY/C;IAAoD,kDAAgB;IAahE,wCACI,QAAkB,EACV,wBAAsD,EACtD,eAAkC;QAH9C,YAKI,kBAAM,QAAQ,CAAC,SAClB;QAJW,8BAAwB,GAAxB,wBAAwB,CAA8B;QACtD,qBAAe,GAAf,eAAe,CAAmB;QAXpC,iBAAW,GAAsC,IAAI,0DAAY,EAAuB,CAAC;QACzF,iBAAW,GAAsC,IAAI,0DAAY,EAAuB,CAAC;QAEnG,YAAM,GAAG,KAAK,CAAC;QACf,YAAM,GAAG,KAAK,CAAC;QAEf,sBAAgB,GAA4B,EAAE,CAAC;;IAQ/C,CAAC;IAED,gDAAO,GAAP;QACI,CAAC,CAAC,IAAI,CAAC,gCAAgC,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;IACnE,CAAC;IAED,6CAAI,GAAJ,UAAK,gBAAyC;QAC1C,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;IACzC,CAAC;IAED,6CAAI,GAAJ;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;IACL,CAAC;IAED,mDAAU,GAAV;QAAA,iBAcC;QAbG,IAAM,WAAW,GAAG,IAAI,mGAA2B,EAAE,CAAC;QACtD,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QACtD,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;QAE5D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,wBAAwB;aACxB,sBAAsB,CAAC,WAAW,CAAC;aACnC,OAAO,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC;aAClC,SAAS,CAAC,UAAC,MAA2B;YACnC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mDAAU,GAAV;QAAA,iBAcC;QAbG,IAAM,WAAW,GAAG,IAAI,mGAA2B,EAAE,CAAC;QACtD,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC;QAC1C,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;QAE5D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,wBAAwB;aACxB,sBAAsB,CAAC,WAAW,CAAC;aACnC,OAAO,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC;aAClC,SAAS,CAAC,UAAC,MAA2B;YACnC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,8CAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAzE+B;QAA/B,+DAAS,CAAC,mBAAmB,CAAC;kCAAQ,4DAAc;iEAAC;IACZ;QAAzC,+DAAS,CAAC,6BAA6B,CAAC;kCAAmC,wDAAU;4FAAC;IAE7E;QAAT,4DAAM,EAAE;kCAAc,0DAAY;uEAAgE;IACzF;QAAT,4DAAM,EAAE;kCAAc,0DAAY;uEAAgE;IAN1F,8BAA8B;QAJ1C,+DAAS,CAAC;YACP,QAAQ,EAAE,mCAAmC;;SAEhD,CAAC;yCAegB,sDAAQ;YACgB,oGAA4B;YACrC,+DAAiB;OAhBrC,8BAA8B,CA4E1C;IAAD,qCAAC;CAAA,CA5EmD,kFAAgB,GA4EnE;AA5E0C;;;;;;;;;;;;ACf3C,mRAAmR,yBAAyB,0TAA0T,oBAAoB,iMAAiM,qCAAqC,iO;;;;;;;;;;;ACAh2B,4BAA4B,gBAAgB,GAAG,gCAAgC,gBAAgB,GAAG,sDAAsD,sBAAsB,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjE;AAC3C;AACb;AACmH;AAC/I;AACiB;AAE0C;AAmBvF;IAA+C,6CAAgB;IAU3D,mCACI,QAAkB,EACV,wBAAsD;QAFlE,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,8BAAwB,GAAxB,wBAAwB,CAA8B;QAVxD,gBAAU,GAAG,IAAI,0DAAY,EAA8B,CAAC;QAetE,oBAAc,GAAG,CAAC,CAAC;;IAFnB,CAAC;IAID,sBAAI,iDAAU;aAAd,UAAe,EAA2B;YACtC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC7B,CAAC;;;OAAA;IAID,mDAAe,GAAf;QAAA,iBA6FC;QA5FG,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,CAAC,qBAAqB,CAAC,kBAAQ;YAC/B,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;YAEtC,IAAM,aAAa,GAAG;gBAClB,OAAO;gBACP,aAAa;gBACb,UAAU;gBACV,MAAM;aACT,CAAC;YAEF,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,+DAA+D,CAAC,CAAC,CAAC,CAAC;gBAClF,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;YAED,KAAI,CAAC,MAAM;iBACN,EAAE,CAAC,gBAAgB,EAAE,UAAC,CAAC,EAAE,IAAI;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACxE,CAAC;YACL,CAAC,CAAC;iBACD,EAAE,CAAC,kBAAkB,EAAE,UAAC,CAAC,EAAE,IAAI;gBAC5B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,+DAA+D,CAAC,CAAC,CAAC,CAAC;oBACnF,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU;oBACzC,MAAM,CAAC;gBACX,CAAC;gBAED,IAAM,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC;oBACxD,CAAC,CAAC,KAAI,CAAC,CAAC,CAAC,MAAM,CAAC;oBAChB,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC;gBAEvE,KAAI,CAAC,OAAO,CAAC,OAAO,CAChB,KAAI,CAAC,CAAC,CAAC,oCAAoC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,cAAc,CAAC,EAC5F,qBAAW;oBACP,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACd,IAAM,KAAK,GAAG,IAAI,iGAAyB,EAAE,CAAC;wBAC9C,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;wBACxB,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;wBACpF,KAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,KAAK,CAAC;6BACpD,KAAK,CAAC,eAAK;4BACR,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU;4BACzC,MAAM,CAAC,0DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACnC,CAAC,CAAC;6BACD,SAAS,CAAC;4BACP,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;4BACjD,KAAI,CAAC,MAAM,EAAE,CAAC;wBAClB,CAAC,CAAC,CAAC;oBACX,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU;oBAC7C,CAAC;gBACL,CAAC,CACJ,CAAC;YACN,CAAC,CAAC;iBACD,MAAM,CAAC;gBACJ,MAAM,EAAE;oBACJ,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,KAAK;oBACf,cAAc,EAAE,cAAM,WAAI,EAAJ,CAAI;iBAC7B;gBACD,KAAK,EAAE;oBACH,SAAS,EAAE;wBACP,MAAM,EAAE,8BAA8B;qBACzC;oBACD,MAAM,EAAE;wBACJ,MAAM,EAAE,4BAA4B;qBACvC;iBACJ;gBACD,WAAW,EAAE;oBACT,KAAK,EAAE,UAAU,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;iBAClE;gBACD,IAAI,EAAE,UAAU,KAAK,EAAE,KAAK;oBACxB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;wBACxF,MAAM,CAAC,CAAC,CAAC;oBACb,CAAC;oBAED,MAAM,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC;gBACD,OAAO,EAAE,aAAa;aACzB,CAAC,CAAC;YAEP,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,yBAAyB,EAAE,UAAU,CAAC;gBAC1D,CAAC,CAAC,cAAc,EAAE,CAAC;gBAEnB,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC5D,UAAU,CAAC;oBACP,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;gBACjD,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAM,GAAN;QAAA,iBAMC;QALG,IAAI,CAAC,qBAAqB,CAAC,kBAAQ;YAC/B,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC;YAChC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;YAC9D,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,yDAAqB,GAA7B,UAA8B,QAAkD;QAAhF,iBAiBC;QAhBG,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,UAAC,MAA0C;YACtG,IAAM,QAAQ,GAAG,0CAAK,CAAC,MAAM,CAAC,KAAK,EAAE,cAAI,IAAI,QAA0B;gBACnE,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;gBAC3C,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,IAAI,EAAE,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;gBACnC,GAAG,EAAE,IAAI;gBACT,KAAK,EAAE;oBACH,MAAM,EAAE,IAAI;iBACf;aACH,GAX2C,CAW3C,CAAC,CAAC;YAEJ,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,sDAAkB,GAA1B,UAA2B,EAAiD;QACxE,IAAM,SAAS,GAAG,EAAE,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,qBAAqB,CAAC;QACtF,MAAM,CAAC,eAAe,GAAG,EAAE,CAAC,IAAI,GAAG,kBAAkB,GAAG,SAAS,GAAG,gBAAgB,GAAG,EAAE,CAAC,EAAE,GAAG,IAAI,GAAG,qEAAU,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,uCAAuC,GAAG,EAAE,CAAC,WAAW,GAAG,6DAA6D,CAAC;IAC3Q,CAAC;IAEO,+CAAW,GAAnB,UAAoB,IAAS,EAAE,IAA+B;QAA9D,iBA+CC;QA9CG,IAAM,yBAAyB,GAAG,IAAI,CAAC,SAAS,CAAC,+DAA+D,CAAC,CAAC;QAElH,IAAM,KAAK,GAAG;YACV,QAAQ,EAAE;gBACN,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;gBACrB,SAAS,EAAE,CAAC,yBAAyB;gBACrC,MAAM,EAAE;oBACJ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC;wBACxC,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;qBACzC,CAAC,CAAC;gBACP,CAAC;aACJ;YAED,UAAU,EAAE;gBACR,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC;gBAC3B,SAAS,EAAE,CAAC,yBAAyB;gBACrC,MAAM,EAAE;oBACJ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC1B,CAAC;aACJ;YAED,QAAQ,EAAE;gBACN,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACvB,SAAS,EAAE,CAAC,yBAAyB;gBACrC,MAAM,EAAE,cAAI;oBACR,IAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAEpD,KAAI,CAAC,OAAO,CAAC,OAAO,CAChB,KAAI,CAAC,CAAC,CAAC,sCAAsC,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EACzE,qBAAW;wBACP,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;4BACd,KAAI,CAAC,wBAAwB,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;gCACpE,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gCACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;gCACnD,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;4BAC/B,CAAC,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC,CACJ,CAAC;gBACN,CAAC;aACJ;SACJ,CAAC;QAEF,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,2CAAO,GAAP,UAAQ,QAAiB;QACrB,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC;YACxC,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC;IACP,CAAC;IAED,+CAAW,GAAX,UAAY,EAAuB;QAC/B,IAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,QAAQ,CAAC,WAAW,CAChB,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAClD;YACI,EAAE,EAAE,EAAE,CAAC,EAAE;YACT,MAAM,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;YACvC,IAAI,EAAE,EAAE,CAAC,IAAI;YACb,WAAW,EAAE,EAAE,CAAC,WAAW;YAC3B,WAAW,EAAE,CAAC;YACd,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;YACjC,KAAK,EAAE;gBACH,MAAM,EAAE,IAAI;aACf;SACJ,CAAC,CAAC;QAEP,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,+CAAW,GAAX,UAAY,EAAuB;QAC/B,IAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC;QACzD,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,gDAAY,GAAZ,UAAa,IAAgC;QACzC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC;IAED,iDAAa,GAAb,UAAc,IAA+B;QACzC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,wDAAoB,GAApB,UAAqB,IAAY,EAAE,eAAuB;QACtD,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACtD,QAAQ,CAAC,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,WAAW,GAAG,eAAe,CAAC;QAChF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5F,CAAC;IAnPS;QAAT,4DAAM,EAAE;;iEAA6D;IAEnD;QAAlB,+DAAS,CAAC,MAAM,CAAC;kCAAO,wDAAU;2DAAC;IACY;QAA/C,+DAAS,CAAC,mCAAmC,CAAC;kCAAoC,mGAA8B;wFAAC;IALzG,yBAAyB;QALrC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;;;SAGhC,CAAC;yCAYgB,sDAAQ;YACgB,oGAA4B;OAZzD,yBAAyB,CAsPrC;IAAD,gCAAC;CAAA,CAtP8C,kFAAgB,GAsP9D;AAtPqC;;;;;;;;;;;;AC1BtC,oTAAoT,8BAA8B,iEAAiE,gBAAgB,oVAAoV,kBAAkB,ghBAAghB,+CAA+C,8bAA8b,aAAa,wGAAwG,eAAe,qNAAqN,gBAAgB,spBAAspB,aAAa,6PAA6P,iBAAiB,0GAA0G,qCAAqC,wOAAwO,+CAA+C,scAAsc,8DAA8D,wNAAwN,6CAA6C,oI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/lI;AACb;AAC9B;AAC+C;AAEjD;AACZ;AASvD;IAAsD,oDAAgB;IAWlE,0CACI,QAAkB,EACV,eAAkC,EAClC,wBAAsD;QAHlE,YAKI,kBAAM,QAAQ,CAAC,SAClB;QAJW,qBAAe,GAAf,eAAe,CAAmB;QAClC,8BAAwB,GAAxB,wBAAwB,CAA8B;QAZxD,mBAAa,GAAG,IAAI,0DAAY,EAA6B,CAAC;QAC9D,kBAAY,GAAG,IAAI,0DAAY,EAA8B,CAAC;QAMhE,uBAAiB,GAA+B,IAAI,CAAC;;IAQ7D,CAAC;IAED,sBAAI,8DAAgB;aAApB;YACI,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAClC,CAAC;aAED,UAAqB,EAA8B;YAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,KAAK,EAAE,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC;YACX,CAAC;YAED,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,cAAc,CAAC,kBAAkB,GAAG,EAAE,CAAC,EAAE,CAAC;YAC/C,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACL,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC;QACL,CAAC;;;OAZA;IAcD,mDAAQ,GAAR;IAEA,CAAC;IAED,mEAAwB,GAAxB,UAAyB,KAAqB;QAA9C,iBAsBC;QArBG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE7B,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAC/C,IAAI,CAAC,wBAAwB,CAAC,wBAAwB,CAClD,IAAI,CAAC,iBAAiB,CAAC,EAAE,EACzB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAClD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,EAChE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAC9D,CAAC,SAAS,CAAC,gBAAM;YACd,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC;YAC9D,KAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/C,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qDAAU,GAAV;QACI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,yDAAc,GAAd;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,uDAAY,GAAZ;QACI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,uDAAY,GAAZ,UAAa,IAAiC;QAA9C,iBAmBC;QAlBG,IAAI,CAAC,OAAO,CAAC,OAAO,CAChB,IAAI,CAAC,CAAC,CAAC,gCAAgC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAC1F,qBAAW;YACP,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,wBAAwB;qBACxB,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,KAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC;qBACjE,SAAS,CAAC;oBACP,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;oBACnD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC;wBACpB,MAAM,EAAE,IAAI,CAAC,EAAE;wBACf,IAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,EAAE;qBACjC,CAAC,CAAC;oBAEH,KAAI,CAAC,cAAc,EAAE,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IAED,qDAAU,GAAV,UAAW,IAAS;QAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IArGS;QAAT,4DAAM,EAAE;;2EAA+D;IAC9D;QAAT,4DAAM,EAAE;;0EAA+D;IAE3C;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;kCAAiB,gHAAuB;4EAAC;IAC7C;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,oEAAK;uEAAC;IACjB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,gFAAS;uEAAC;IAPpC,gCAAgC;QAJ5C,+DAAS,CAAC;YACP,QAAQ,EAAE,2BAA2B;;SAExC,CAAC;yCAagB,sDAAQ;YACO,+DAAiB;YACR,oGAA4B;OAdzD,gCAAgC,CAwG5C;IAAD,uCAAC;CAAA,CAxGqD,kFAAgB,GAwGrE;AAxG4C;;;;;;;;;;;;ACf7C,mRAAmR,0BAA0B,uGAAuG,oCAAoC,4kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzX;AACU;AACJ;AACK;AACe;AAMzF;IAAgD,8CAAgB;IAK5D,oCACI,QAAkB;eAElB,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAPuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,qGAAgC;iEAAC;IAC/C;QAApB,+DAAS,CAAC,QAAQ,CAAC;kCAAS,sFAAyB;8DAAC;IAH9C,0BAA0B;QAJtC,+DAAS,CAAC;;YAEP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAOgB,sDAAQ;OANb,0BAA0B,CAUtC;IAAD,iCAAC;CAAA,CAV+C,kFAAgB,GAU/D;AAVsC;;;;;;;;;;;;ACVvC,yNAAyN,mBAAmB,uVAAuV,iBAAiB,IAAI,kBAAkB,4DAA4D,sBAAsB,iNAAiN,yNAAyN,eAAe,mIAAmI,iBAAiB,ioBAAioB,gBAAgB,4JAA4J,gCAAgC,sHAAsH,kBAAkB,kQAAkQ,mCAAmC,2CAA2C,6NAA6N,eAAe,yNAAyN,aAAa,wG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA74F;AAC9C;AAC4C;AAClE;AAC+B;AAM9E;IAAoD,kDAAgB;IAYhE,wCACI,QAAkB,EACV,YAA8B;QAF1C,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,kBAAY,GAAZ,YAAY,CAAkB;QARhC,eAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,YAAM,GAAG,KAAK,CAAC;QACf,YAAM,GAAG,KAAK,CAAC;QAEf,UAAI,GAAgB,IAAI,mFAAW,EAAE,CAAC;;IAMtC,CAAC;IAED,2DAAkB,GAAlB;QACI,gFAAgF;QAChF,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,6BAA6B,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,6CAAI,GAAJ,UAAK,MAAe;QAApB,iBAUC;QATG,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;YACrD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACxB,KAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,MAAM,CAAC;YAEtC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAO,GAAP;QACI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;IAChD,CAAC;IAED,6CAAI,GAAJ;QAAA,iBAeC;QAdG,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAM,KAAK,GAAG,IAAI,+FAAuB,EAAE,CAAC;QAC5C,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC,cAAc,CAAC,yBAAyB,EAAE,CAAC;QAE/E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC;aACtC,OAAO,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC;aAClC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,8CAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IA3D2B;QAA3B,+DAAS,CAAC,eAAe,CAAC;kCAAgB,wDAAU;yEAAC;IACtB;QAA/B,+DAAS,CAAC,mBAAmB,CAAC;kCAAQ,4DAAc;iEAAC;IACzB;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;kCAAiB,yFAAuB;0EAAC;IAE3D;QAAT,4DAAM,EAAE;kCAAY,0DAAY;qEAAgC;IANxD,8BAA8B;QAJ1C,+DAAS,CAAC;YACP,QAAQ,EAAE,uBAAuB;;SAEpC,CAAC;yCAcgB,sDAAQ;YACI,wFAAgB;OAdjC,8BAA8B,CA8D1C;IAAD,qCAAC;CAAA,CA9DmD,kFAAgB,GA8DnE;AA9D0C;;;;;;;;;;;;ACV3C,+RAA+R,cAAc,uGAAuG,wBAAwB,wQAAwQ,sBAAsB,yyBAAyyB,cAAc,uhBAAuhB,+CAA+C,8cAA8c,cAAc,iDAAiD,eAAe,iDAAiD,mBAAmB,q4BAAq4B,gBAAgB,8ZAA8Z,WAAW,2VAA2V,aAAa,mVAAmV,oBAAoB,wTAAwT,yBAAyB,iIAAiI,aAAa,8WAA8W,8BAA8B,iIAAiI,cAAc,uOAAuO,wCAAwC,2PAA2P,8DAA8D,6S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3rM;AACI;AACU;AACJ;AACmB;AACd;AACnB;AACgC;AAMvF;IAAoC,kCAAgB;IAShD,wBACI,QAAkB,EACV,YAA8B,EAC9B,cAA6B,EAC7B,oBAAyC;QAJrD,YAMI,kBAAM,QAAQ,CAAC,SAClB;QALW,kBAAY,GAAZ,YAAY,CAAkB;QAC9B,oBAAc,GAAd,cAAc,CAAe;QAC7B,0BAAoB,GAApB,oBAAoB,CAAqB;QAPrD,SAAS;QACT,wBAAkB,GAAG,EAAE,CAAC;;IASxB,CAAC;IAED,iCAAQ,GAAR;QAAA,iBASC;QARG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAC/C,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC;QAEvE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,gBAAM;YACnD,KAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/C,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAChE,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAU,GAAV;QACI,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;IAED,mCAAU,GAAV,UAAW,IAAiB;QAA5B,iBAaC;QAZG,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,OAAO,CAChB,IAAI,CAAC,CAAC,CAAC,0BAA0B,EAAE,IAAI,CAAC,WAAW,CAAC,EACpD,qBAAW;YACP,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;oBAC5C,KAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBACtD,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IA5CmC;QAAnC,+DAAS,CAAC,uBAAuB,CAAC;kCAAwB,mGAA8B;iEAAC;IAClE;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,oEAAK;qDAAC;IAHhC,cAAc;QAJ1B,+DAAS,CAAC;;YAEP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAWgB,sDAAQ;YACI,wFAAgB;YACd,wEAAa;YACP,uFAAmB;OAb5C,cAAc,CA+C1B;IAAD,qBAAC;CAAA,CA/CmC,kFAAgB,GA+CnD;AA/C0B;;;;;;;;;;;;ACb3B,sSAAsS,iBAAiB,uGAAuG,2BAA2B,qNAAqN,gBAAgB,wTAAwT,cAAc,4KAA4K,iBAAiB,sJAAsJ,sBAAsB,uHAAuH,uBAAuB,4JAA4J,8BAA8B,6dAA6d,yCAAyC,0KAA0K,8CAA8C,wnBAAwnB,8CAA8C,0KAA0K,mDAAmD,gdAAgd,iCAAiC,6PAA6P,gBAAgB,2NAA2N,WAAW,sHAAsH,qBAAqB,2LAA2L,qBAAqB,siBAAsiB,0CAA0C,2dAA2d,+BAA+B,wLAAwL,eAAe,mIAAmI,2BAA2B,mbAAmb,2BAA2B,ihCAAihC,wCAAwC,w/BAAw/B,4CAA4C,kiCAAkiC,kDAAkD,w/BAAw/B,4CAA4C,oOAAoO,0CAA0C,6HAA6H,iEAAiE,8SAA8S,wEAAwE,uXAAuX,oBAAoB,gZAAgZ,qDAAqD,uUAAuU,6CAA6C,+LAA+L,gFAAgF,8WAA8W,+CAA+C,yLAAyL,wEAAwE,iQAAiQ,uBAAuB,iaAAia,6BAA6B,qlBAAqlB,mCAAmC,6kBAA6kB,iCAAiC,6mBAA6mB,qCAAqC,6lBAA6lB,gDAAgD,oOAAoO,gBAAgB,mLAAmL,2BAA2B,sJAAsJ,+CAA+C,yQAAyQ,+BAA+B,6JAA6J,mDAAmD,+PAA+P,iBAAiB,iIAAiI,qCAAqC,gPAAgP,iBAAiB,mIAAmI,qCAAqC,0dAA0d,eAAe,maAAma,8BAA8B,iSAAiS,mBAAmB,6IAA6I,uCAAuC,iTAAiT,iBAAiB,yIAAyI,yCAAyC,mTAAmT,iBAAiB,6IAA6I,yCAAyC,yMAAyM,gCAAgC,ocAAoc,sBAAsB,+JAA+J,cAAc,gMAAgM,2BAA2B,kHAAkH,kBAAkB,mIAAmI,wCAAwC,8MAA8M,gBAAgB,+HAA+H,sCAAsC,+N;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlytB;AAC1B;AACqB;AACJ;AACU;AAC8G;AAM7L;IAA2C,yCAAgB;IAYvD,+BACI,QAAkB,EACV,mBAA6C,EAC7C,oBAA8C,EAC9C,kBAAqC;QAJjD,YAMI,kBAAM,QAAQ,CAAC,SAClB;QALW,yBAAmB,GAAnB,mBAAmB,CAA0B;QAC7C,0BAAoB,GAApB,oBAAoB,CAA0B;QAC9C,wBAAkB,GAAlB,kBAAkB,CAAmB;QAdjD,aAAO,GAAG,KAAK,CAAC;QAEhB,cAAQ,GAAsB,SAAS,CAAC;QACxC,sBAAgB,GAAW,SAAS,CAAC;QACrC,2BAAqB,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,wBAAwB,CAAC;QACpE,0BAAoB,GAAyB,iEAAgB,CAAC,WAAW,CAAC;QAE1E,0BAAoB,GAAG,KAAK,CAAC;QAC7B,qBAAe,GAAW,SAAS,CAAC;;IASpC,CAAC;IAED,gDAAgB,GAAhB;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE;aACpC,SAAS,CAAC,iBAAO;YACd,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;YAC5B,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;YAChD,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,OAAO,CAAC,qBAAqB,KAAK,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAClH,CAAC,CAAC,CAAC;IACX,CAAC;IAED,4CAAY,GAAZ;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YACrE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;YAE7B,IAAM,kBAAkB,GAAG,IAAI,uFAAe,EAAE,CAAC;YACjD,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC;YAChC,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;YAEvD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAI,GAAJ;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC;QAClE,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,wBAAwB,CAAC;QACzE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,wCAAQ,GAAR;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,kDAAkB,GAAlB;QACI,gFAAgF;QAChF,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,6BAA6B,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,6CAAa,GAAb;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,KAAK,GAAG,IAAI,0FAAkB,EAAE,CAAC;QACvC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC3C,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAO,GAAP;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC1E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAE9C,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,wBAAwB,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC1I,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC5E,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAnFQ,qBAAqB;QAJjC,+DAAS,CAAC;;YAEP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAcgB,sDAAQ;YACW,gGAAwB;YACvB,gGAAwB;YAC1B,4FAAiB;OAhBxC,qBAAqB,CAoFjC;IAAD,4BAAC;CAAA,CApF0C,kFAAgB,GAoF1D;AApFiC;;;;;;;;;;;;ACXlC,sSAAsS,iBAAiB,uGAAuG,2BAA2B,qNAAqN,gBAAgB,wSAAwS,cAAc,6OAA6O,iBAAiB,kJAAkJ,sBAAsB,sIAAsI,iBAAiB,mNAAmN,wBAAwB,wVAAwV,wBAAwB,sKAAsK,eAAe,2HAA2H,cAAc,oLAAoL,kBAAkB,mNAAmN,eAAe,+VAA+V,uBAAuB,2KAA2K,eAAe,gIAAgI,cAAc,wMAAwM,qBAAqB,oHAAoH,8BAA8B,ufAAuf,uCAAuC,0KAA0K,4CAA4C,sgBAAsgB,4CAA4C,0KAA0K,iDAAiD,ocAAoc,iCAAiC,8TAA8T,qBAAqB,wRAAwR,iCAAiC,qPAAqP,mBAAmB,6XAA6X,iBAAiB,2XAA2X,iBAAiB,4VAA4V,sBAAsB,8XAA8X,0CAA0C,uMAAuM,eAAe,mOAAmO,2BAA2B,uYAAuY,2BAA2B,igCAAigC,wCAAwC,w+BAAw+B,4CAA4C,khCAAkhC,kDAAkD,w+BAAw+B,4CAA4C,oOAAoO,0CAA0C,6HAA6H,6DAA6D,sSAAsS,oEAAoE,+WAA+W,oBAAoB,qcAAqc,qDAAqD,mXAAmX,6CAA6C,+LAA+L,4EAA4E,oTAAoT,+CAA+C,+KAA+K,oEAAoE,kTAAkT,uBAAuB,6ZAA6Z,6BAA6B,2jBAA2jB,mCAAmC,mjBAAmjB,iCAAiC,+nBAA+nB,qCAAqC,yiBAAyiB,gDAAgD,oOAAoO,gBAAgB,uLAAuL,2BAA2B,sJAAsJ,2CAA2C,iOAAiO,+BAA+B,6JAA6J,+CAA+C,uNAAuN,iBAAiB,iIAAiI,iCAAiC,wMAAwM,iBAAiB,mIAAmI,iCAAiC,8aAA8a,eAAe,+ZAA+Z,8BAA8B,6RAA6R,mBAAmB,6IAA6I,mCAAmC,qQAAqQ,iBAAiB,yIAAyI,qCAAqC,oSAAoS,iBAAiB,6IAA6I,qCAAqC,iKAAiK,gCAAgC,ocAAoc,sBAAsB,+JAA+J,cAAc,gMAAgM,2BAA2B,kHAAkH,kBAAkB,mIAAmI,oCAAoC,0MAA0M,gBAAgB,+HAA+H,kCAAkC,qNAAqN,kBAAkB,iIAAiI,mCAAmC,gN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCthzB;AACuB;AAChC;AACM;AACqB;AACJ;AACU;AACuE;AAClF;AAMpE;IAA6C,2CAAgB;IAmBzD,iCACI,QAAkB,EACV,sBAAkD,EAClD,kBAAqC,EACrC,aAA2B;QAJvC,YAMI,kBAAM,QAAQ,CAAC,SAClB;QALW,4BAAsB,GAAtB,sBAAsB,CAA4B;QAClD,wBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,mBAAa,GAAb,aAAa,CAAc;QArBvC,0BAAoB,GAAG,KAAK,CAAC;QAC7B,qBAAe,GAAW,IAAI,CAAC;QAC/B,sBAAgB,GAAW,SAAS,CAAC;QAErC,2BAAqB,GAAY,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QAC7D,2BAAqB,GAAY,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,wBAAwB,CAAC;QAC7E,oBAAc,GAAW,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,aAAO,GAAG,KAAK,CAAC;QAChB,cAAQ,GAA0B,SAAS,CAAC;QAK5C,0BAAoB,GAAG,2DAAS,CAAC,oBAAoB,CAAC;QAEtD,0BAAoB,GAAyB,iEAAgB,CAAC,MAAM,CAAC;;IASrE,CAAC;IAED,0CAAQ,GAAR;QACI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC;QAClE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,oDAAkB,GAAlB;QACI,gFAAgF;QAChF,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,6BAA6B,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,6CAAW,GAAX;QAAA,iBAaC;QAZG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE;aACvC,OAAO,CAAC;YACL,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC;aACD,SAAS,CAAC,UAAC,MAA6B;YACrC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACtD,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,qBAAqB,KAAK,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;YAC1H,CAAC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,+CAAa,GAAb;QAAA,iBAiBC;QAhBG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CACnC,iCAAiC,EACjC,gBAAM;YACF,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC;YAC9D,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC;QACtD,CAAC,CACJ,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CACxC,sCAAsC,EACtC,gBAAM;YACF,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,EAAE,CAAC;YAC/C,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC;YAC/B,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,mCAAmC,GAAG,2DAAS,CAAC,oBAAoB,GAAG,uCAAuC,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,GAAG,sBAAsB,CAAC,CAAC;QACnM,CAAC,CACJ,CAAC;IACN,CAAC;IAED,gDAAc,GAAd,UAAe,GAAW,EAAE,OAA+B;QAA3D,iBAwBC;QAvBG,IAAM,QAAQ,GAAG,IAAI,4DAAY,CAAC,EAAE,GAAG,EAAE,2DAAS,CAAC,oBAAoB,GAAG,GAAG,EAAE,CAAC,CAAC;QAEjF,QAAQ,CAAC,iBAAiB,GAAG,UAAC,IAAI;YAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC;QAEF,QAAQ,CAAC,aAAa,GAAG,UAAC,IAAI,EAAE,QAAQ,EAAE,MAAM;YAC5C,IAAM,YAAY,GAAkB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACzD,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC9C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACV,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBACjC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnD,CAAC;QACL,CAAC,CAAC;QAEF,IAAM,eAAe,GAAwB,EAAE,CAAC;QAChD,eAAe,CAAC,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QACtE,eAAe,CAAC,iBAAiB,GAAG,IAAI,CAAC;QACzC,QAAQ,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QACrC,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED,4CAAU,GAAV;QACI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;IAClC,CAAC;IAED,iDAAe,GAAf;QACI,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;IACvC,CAAC;IAED,2CAAS,GAAT;QAAA,iBAMC;QALG,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;YAC9C,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;YACnD,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;YAC7C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAc,GAAd;QAAA,iBAMC;QALG,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;YACnD,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1C,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC;YAC/B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAO,GAAP;QAAA,iBAUC;QATG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YACnE,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAE9C,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,wBAAwB,IAAI,KAAI,CAAC,oBAAoB,IAAI,KAAI,CAAC,eAAe,KAAK,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACtI,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC5E,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAa,GAAb;QAAA,iBAMC;QALG,IAAM,KAAK,GAAG,IAAI,0FAAkB,EAAE,CAAC;QACvC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC3C,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC7D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACP,CAAC;IA9IQ,uBAAuB;QAJnC,+DAAS,CAAC;;YAEP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAqBgB,sDAAQ;YACc,kGAA0B;YAC9B,4FAAiB;YACtB,oEAAY;OAvB9B,uBAAuB,CA+InC;IAAD,8BAAC;CAAA,CA/I4C,kFAAgB,GA+I5D;AA/ImC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACf2F;AAC1D;AAC0B;AAa/F;IAA2C,yCAAgB;IASvD,+BACY,eAAoC,EAC5C,QAAkB;QAFtB,YAGI,kBAAM,QAAQ,CAAC,SAClB;QAHW,qBAAe,GAAf,eAAe,CAAqB;QANhD,cAAQ,GAAsB,EAAE,CAAC;QAExB,qBAAe,GAAW,SAAS,CAAC;QACnC,2BAAqB,GAAyB,IAAI,0DAAY,EAAU,CAAC;;IAMnF,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAQC;QAPG,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC3E,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,UAAU,CAAC;gBACP,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YACzE,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAe,GAAf;QACI,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC;YACtD,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,aAAa;SAC1B,CAAC,CAAC;IACP,CAAC;IA5B6B;QAA7B,+DAAS,CAAC,iBAAiB,CAAC;kCAAyB,wDAAU;yEAAC;IAIxD;QAAR,2DAAK,EAAE;;kEAAqC;IACnC;QAAT,4DAAM,EAAE;kCAAwB,0DAAY;wEAAsC;IAP1E,qBAAqB;QAXjC,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,QAAQ,EACR,gVAMU;SACb,CAAC;yCAW+B,2FAAmB;YAClC,sDAAQ;OAXb,qBAAqB,CA+BjC;IAAD,4BAAC;CAAA,CA/B0C,kFAAgB,GA+B1D;AA/BiC;;;;;;;;;;;;ACflC,yCAAyC,qBAAqB,gBAAgB,qBAAqB,GAAG,sDAAsD,qBAAqB,iBAAiB,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5F;AAEpC;AACkB;AAC3D;AAO5B;IAA0C,wCAAgB;IAWtD,8BAAoB,QAAoB,EACpC,QAAkB;QADtB,YAGI,kBAAM,QAAQ,CAAC,SAClB;QAJmB,cAAQ,GAAR,QAAQ,CAAY;;IAIxC,CAAC;IAbD,sBAAI,0CAAQ;aAAZ,UAAa,GAAyB;YAClC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;;;OAAA;IAYD,uCAAQ,GAAR;IAEA,CAAC;IAED,8CAAe,GAAf;QACI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAE7C,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,iDAAkB,GAAlB;IAEA,CAAC;IAED,iDAAkB,GAAlB;QAAA,iBAoBC;QAnBG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,IAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAElE,MAAM,CAAC,0CAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,cAAI;YACtC,IAAM,OAAO,GAAG,IAAI,oFAAY,EAAE,CAAC;YAEnC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAEzB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;gBACxD,OAAO,CAAC,KAAK,GAAG,2CAAM,CAAC,gBAAgB,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;YACjG,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,OAAO,CAAC,KAAK,GAAG,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1D,CAAC;YAED,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAW,GAAX;QAAA,iBAiIC;QAhIG,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC;QACX,CAAC;QAED,IAAM,QAAQ,GAAG,0CAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,cAAI,IAAI,QAAC;YACrD,EAAE,EAAE,IAAI,CAAC,IAAI;YACb,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;YAC/C,IAAI,EAAE,IAAI,CAAC,WAAW;YACtB,KAAK,EAAE;gBACH,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,2CAAM,CAAC,KAAI,CAAC,SAAS,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;aACrF;SACJ,CAAC,EARsD,CAQtD,CAAC,CAAC;QAEJ,IAAI,CAAC,MAAM;aACN,EAAE,CAAC,cAAc,EAAE;YAChB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC,CAAC;aACD,EAAE,CAAC,eAAe,EAAE;YACjB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC,CAAC;aACD,EAAE,CAAC,mBAAmB,EAAE;YACrB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC,CAAC;aACD,EAAE,CAAC,oBAAoB,EAAE;YACtB,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC,CAAC;aACD,EAAE,CAAC,gBAAgB,EAAE,UAAC,CAAC,EAAE,IAAI;YAC1B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC;YACX,CAAC;YAED,IAAM,oBAAoB,GAAG,iBAAiB,CAAC;YAC/C,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxB,iBAAiB,GAAG,IAAI,CAAC;YAC7B,CAAC;YAED,IAAI,aAAa,CAAC;YAElB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC3B,uBAAuB,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAErE,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAErD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;YACvD,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxB,IAAM,OAAO,GAAG,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC1D,IAAM,OAAO,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACrD,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC3E,IAAM,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;oBAC3E,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;gBACpD,CAAC;gBAED,iBAAiB,GAAG,KAAK,CAAC;YAC9B,CAAC;QACL,CAAC,CAAC;aACD,MAAM,CAAC;YACJ,MAAM,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACjB;YACD,OAAO,EAAE;gBACL,SAAS,EAAE;oBACP,MAAM,EAAE,8BAA8B;iBACzC;gBACD,MAAM,EAAE;oBACJ,MAAM,EAAE,4BAA4B;iBACvC;aACJ;YACD,UAAU,EAAE;gBACR,mBAAmB,EAAE,KAAK;gBAC1B,WAAW,EAAE,KAAK;gBAClB,OAAO,EAAE,EAAE;aACd;YACD,OAAO,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;SACjC,CAAC,CAAC;QAEP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,iCAAiC,IAAI;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9C,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,uBAAuB,CAAC,MAAM,CAAC,CAAC;YACpC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,CAAC,EAAE,IAAI;YACrC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC;YACX,CAAC;YAED,IAAM,oBAAoB,GAAG,iBAAiB,CAAC;YAC/C,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxB,iBAAiB,GAAG,IAAI,CAAC;YAC7B,CAAC;YAED,IAAI,aAAa,CAAC;YAElB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC3B,uBAAuB,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAErE,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAErD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;YACvD,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxB,iBAAiB,GAAG,KAAK,CAAC;YAC9B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAkB,GAAlB;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;YAClC,IAAM,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;YACxB,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAE9C,IAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvC,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;YACpD,IAAM,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAEpE,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;gBACxC,wBAAwB;YAC5B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,KAAK,oBAAoB,CAAC,CAAC,CAAC;gBACzD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBAChD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,CAAC;oBAEvC,IAAI,SAAS,GAAG,MAAM,CAAC;oBACvB,IAAM,SAAS,GAAI,OAAO,CAAC,SAAS,CAAC,SAAiB,CAAC;oBACvD,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;4BACjD,SAAS,GAAG,QAAQ,CAAC;wBACzB,CAAC;oBACL,CAAC;oBAED,IAAM,UAAQ,GAAG,CAAC,CAAC,4CAA4C,GAAG,SAAS,GAAG,MAAM,CAAC;yBAChF,GAAG,CAAC,YAAY,CAAC,CAAC;oBAEvB,EAAE,CAAC,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACzB,UAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;wBACzC,UAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;oBAC7C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC/E,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;gCAC1B,UAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;4BACpD,CAAC;4BACD,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;gCAC1B,UAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;4BAC1C,CAAC;4BACD,EAAE,CAAC,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;gCAC9B,UAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,iBAAiB,CAAC,CAAC;4BAC1D,CAAC;wBACL,CAAC;oBACL,CAAC;oBAED,UAAQ,CAAC,EAAE,CAAC,4BAA4B,EAAE;wBACtC,IAAM,KAAK,GAAG,UAAQ,CAAC,GAAG,EAAY,CAAC;wBACvC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC/C,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;4BAC/C,UAAQ,CAAC,WAAW,CAAC,8BAA8B,CAAC,CAAC;wBACzD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,UAAQ,CAAC,QAAQ,CAAC,8BAA8B,CAAC,CAAC;wBACtD,CAAC;oBACL,CAAC,CAAC,CAAC;oBAEH,UAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC/B,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC/C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACjD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,CAAC;oBAEvC,IAAM,WAAS,GAAG,CAAC,CAAC,0CAA0C,CAAC,CAAC;oBAChE,IAAM,SAAS,GAAI,OAAO,CAAC,SAAiB,CAAC;oBAC7C,2CAAM,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,UAAC,GAAQ;wBACxC,CAAC,CAAC,mBAAmB,CAAC;6BACjB,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC;6BACxB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;6BACrB,QAAQ,CAAC,WAAS,CAAC,CAAC;oBAC7B,CAAC,CAAC,CAAC;oBAEH,WAAS;yBACJ,GAAG,CAAC,YAAY,CAAC;yBACjB,EAAE,CAAC,QAAQ,EAAE;wBACV,IAAM,KAAK,GAAG,WAAS,CAAC,GAAG,EAAY,CAAC;wBACxC,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;oBACnD,CAAC,CAAC;yBACD,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC3B,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qDAAsB,GAAtB,UAAuB,WAAmB;QACtC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,sDAAuB,GAAvB,UAAwB,IAAS;QAC7B,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9C,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACtD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACzC,CAAC;IACL,CAAC;IAED,gDAAiB,GAAjB,UAAkB,WAAmB;QACjC,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAM,OAAO,GAAG,2CAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,WAAW,EAAtB,CAAsB,CAAC,CAAC;QAE7E,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,oCAAoC,GAAG,WAAW,CAAC,CAAC;QACrE,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAED,qDAAsB,GAAtB,UAAuB,WAAmB;QACtC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACpD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,IAAM,YAAY,GAAG,2CAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,WAAW,EAAtB,CAAsB,CAAC,CAAC;QACvF,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC;QAChC,CAAC;QAED,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;IAC9B,CAAC;IAED,kDAAmB,GAAnB,UAAoB,WAAmB,EAAE,KAAa;QAClD,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QACpD,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YACjE,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,IAAM,SAAS,GAAI,OAAO,CAAC,SAAS,CAAC,SAAiB,CAAC;QACvD,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;YAC/B,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YAED,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChE,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YAED,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChE,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YAED,EAAE,CAAC,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjE,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,IAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAEjC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YAED,IAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;YACpC,EAAE,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YAED,IAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;YACpC,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACtC,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,gDAAiB,GAAjB;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;YAClC,IAAM,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;YACxB,IAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvC,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAEpD,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3E,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC3E,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YACnD,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;IACzE,CAAC;IAED,oDAAqB,GAArB,UAAsB,WAAmB,EAAE,KAAa;QACpD,IAAM,YAAY,GAAG,2CAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,WAAW,EAAtB,CAAsB,CAAC,CAAC;QACvF,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;QACX,CAAC;QAED,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,oDAAqB,GAArB,UAAsB,WAAmB;QACrC,IAAM,YAAY,GAAG,2CAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,WAAW,EAAtB,CAAsB,CAAC,CAAC;QACvF,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;IAC9B,CAAC;IAED,+CAAgB,GAAhB,UAAiB,WAAmB;QAChC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC;IAC1C,CAAC;IA5YQ,oBAAoB;QALhC,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,oCAAkC;;SAE/C,CAAC;yCAYgC,wDAAU;YAC1B,sDAAQ;OAZb,oBAAoB,CA6YhC;IAAD,2BAAC;CAAA,CA7YyC,kFAAgB,GA6YzD;AA7YgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX8C;AACV;AACb;AAE5B;AAgB5B;IAAoD,kDAAgB;IAgBhE,wCAAoB,QAAoB,EACpC,QAAkB;QADtB,YAGI,kBAAM,QAAQ,CAAC,SAClB;QAJmB,cAAQ,GAAR,QAAQ,CAAY;QAFhC,YAAM,GAAG,EAAE,CAAC;;IAMpB,CAAC;IAlBD,sBAAI,gDAAI;aAAR,UAAS,IAAyC;YAC9C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC;YACvD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,yBAAyB,CAAC;YACjE,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;;;OAAA;IAgBD,wDAAe,GAAf;QACI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC7E,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,iEAAwB,GAAxB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,IAAI,eAAe,GAAG,EAAE,CAAC;QAEzB,IAAI,qBAAqB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACrE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpD,eAAe,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/D,CAAC;QAED,MAAM,CAAC,eAAe,CAAC;IAC3B,CAAC;IAED,oDAAW,GAAX;QAAA,iBAyFC;QAxFG,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC;QACX,CAAC;QAED,IAAI,QAAQ,GAAG,0CAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,cAAI,IAAI,QAAM;YAC3D,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;YAC3C,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,IAAI,EAAE,qEAAU,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;YAC7C,GAAG,EAAE,IAAI;YACT,KAAK,EAAE;gBACH,MAAM,EAAE,IAAI;gBACZ,QAAQ,EAAE,+CAAU,CAAC,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,IAAI,CAAC;aACnE;SACH,GAZuD,CAYvD,CAAC,CAAC;QAEJ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACf,MAAM,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACjB;YACD,OAAO,EAAE;gBACL,SAAS,EAAE;oBACP,MAAM,EAAE,8BAA8B;iBACzC;gBACD,MAAM,EAAE;oBACJ,MAAM,EAAE,4BAA4B;iBACvC;aACJ;YACD,UAAU,EAAE;gBACR,mBAAmB,EAAE,KAAK;gBAC1B,WAAW,EAAE,KAAK;gBAClB,OAAO,EAAE,EAAE;aACd;YACD,QAAQ,EAAE;gBACN,mBAAmB,EAAE,IAAI;aAC5B;YACD,OAAO,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;SAC3C,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,iCAAiC,IAAI;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9C,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACpD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,uBAAuB,CAAC,MAAM,CAAC,CAAC;YACpC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAC,CAAC,EAAE,IAAI;YACrC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC;YACX,CAAC;YAED,IAAI,oBAAoB,GAAG,iBAAiB,CAAC;YAC7C,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxB,iBAAiB,GAAG,IAAI,CAAC;YAC7B,CAAC;YAED,IAAI,aAAa,CAAC;YAElB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC3B,uBAAuB,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAErE,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAErD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;YACvD,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxB,iBAAiB,GAAG,KAAK,CAAC;YAC9B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAAa,GAAb;QACI,IAAI,EAAE,GAAG,KAAK,CAAC;QACf,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,CAAC,CAAC,8BAA8B,CAAC,CAAC,KAAK,CAAC;YACpC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAAE,MAAc,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAAC,CAAC;YAC7C,EAAE,GAAI,MAAc,CAAC,UAAU,CAAC;gBAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,8BAA8B,CAAC,CAAC,GAAG,EAAY,CAAC;gBAC1D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvC,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;IACP,CAAC;IAjJQ,8BAA8B;QAT1C,+DAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,QAAQ,EACR,8NAIC;SACJ,CAAC;yCAiBgC,wDAAU;YAC1B,sDAAQ;OAjBb,8BAA8B,CAkJ1C;IAAD,qCAAC;CAAA,CAlJmD,kFAAgB,GAkJnE;AAlJ0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBoF;AAC1D;AACwC;AAc7G;IAA8C,4CAAgB;IAS1D,kCACY,kBAA0C,EAClD,QAAkB;QAFtB,YAGI,kBAAM,QAAQ,CAAC,SAClB;QAHW,wBAAkB,GAAlB,kBAAkB,CAAwB;QANtD,iBAAW,GAAiC,EAAE,CAAC;QAEtC,wBAAkB,GAAW,SAAS,CAAC;QACtC,8BAAwB,GAAyB,IAAI,0DAAY,EAAU,CAAC;;IAMtF,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAYC;QAXG,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,gBAAM;YACxD,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,UAAC,KAAK,EAAE,IAAI;gBAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;YAClF,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;YAChC,UAAU,CAAC;gBACP,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC5E,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAe,GAAf;QACI,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC;YACzD,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,aAAa;SAC1B,CAAC,CAAC;IACP,CAAC;IAhCgC;QAAhC,+DAAS,CAAC,oBAAoB,CAAC;kCAA4B,wDAAU;+EAAC;IAI9D;QAAR,2DAAK,EAAE;;wEAAwC;IACtC;QAAT,4DAAM,EAAE;kCAA2B,0DAAY;8EAAsC;IAP7E,wBAAwB;QAZpC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EACR,yaAOU;SACb,CAAC;yCAWkC,8FAAsB;YACxC,sDAAQ;OAXb,wBAAwB,CAmCpC;IAAD,+BAAC;CAAA,CAnC6C,kFAAgB,GAmC7D;AAnCoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBoE;AAEpC;AACzC;AAO5B;IAA6C,2CAAgB;IAWzD,iCAAoB,QAAoB,EACpC,QAAkB;QADtB,YAGI,kBAAM,QAAQ,CAAC,SAClB;QAJmB,cAAQ,GAAR,QAAQ,CAAY;;IAIxC,CAAC;IAbD,sBAAI,6CAAQ;aAAZ,UAAa,GAA4B;YACrC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;;;OAAA;IAYD,0CAAQ,GAAR;IACA,CAAC;IAED,iDAAe,GAAf;QACI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAE7C,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,oDAAkB,GAAlB;IAEA,CAAC;IAED,2DAAyB,GAAzB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,IAAI,eAAe,GAAG,EAAE,CAAC;QAEzB,IAAI,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACnE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAClD,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7D,CAAC;QAED,MAAM,CAAC,eAAe,CAAC;IAC3B,CAAC;IAED,6CAAW,GAAX;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC;QACX,CAAC;QAED,IAAI,QAAQ,GAAG,0CAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,UAAU,IAAI;YAC3D,MAAM,CAAC;gBACH,EAAE,EAAE,IAAI,CAAC,IAAI;gBACb,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG;gBAC/C,IAAI,EAAE,IAAI,CAAC,WAAW;gBACtB,KAAK,EAAE;oBACH,MAAM,EAAE,IAAI;oBACZ,QAAQ,EAAE,+CAAU,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,IAAI,CAAC,IAAI,CAAC;iBACzE;aACJ,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACf,MAAM,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACjB;YACD,OAAO,EAAE;gBACL,SAAS,EAAE;oBACP,MAAM,EAAE,8BAA8B;iBACzC;gBACD,MAAM,EAAE;oBACJ,MAAM,EAAE,4BAA4B;iBACvC;aACJ;YACD,UAAU,EAAE;gBACR,mBAAmB,EAAE,KAAK;gBAC1B,WAAW,EAAE,KAAK;gBAClB,OAAO,EAAE,EAAE;aACd;YACD,OAAO,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;SACjC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,iCAAiC,IAAI;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9C,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACpD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,uBAAuB,CAAC,MAAM,CAAC,CAAC;YACpC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAU,CAAC,EAAE,IAAI;YAC9C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC;YACX,CAAC;YAED,IAAI,oBAAoB,GAAG,iBAAiB,CAAC;YAC7C,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxB,iBAAiB,GAAG,IAAI,CAAC;YAC7B,CAAC;YAED,IAAI,aAAa,CAAC;YAElB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC3B,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAErE,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;YAErD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;YACvD,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBACxB,iBAAiB,GAAG,KAAK,CAAC;YAC9B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAjIQ,uBAAuB;QALnC,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EACR,uCAAqC;SACxC,CAAC;yCAYgC,wDAAU;YAC1B,sDAAQ;OAZb,uBAAuB,CAkInC;IAAD,8BAAC;CAAA,CAlI4C,kFAAgB,GAkI5D;AAlImC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV4E;AAC3C;AACmB;AAexF;IAAwC,sCAAgB;IAWpD,4BACY,YAA8B,EACtC,QAAkB;QAFtB,YAGI,kBAAM,QAAQ,CAAC,SAClB;QAHW,kBAAY,GAAZ,YAAY,CAAkB;QAR1C,WAAK,GAAkB,EAAE,CAAC;QAEjB,kBAAY,GAAW,SAAS,CAAC;QAChC,wBAAkB,GAAyB,IAAI,0DAAY,EAAU,CAAC;QAEvE,eAAS,GAAG,EAAE,CAAC;;IAMxB,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAQC;QAPG,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,gBAAM;YAClD,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC1B,UAAU,CAAC;gBACP,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YACtE,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACP,CAAC;IAvB0B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAsB,wDAAU;mEAAC;IAIlD;QAAR,2DAAK,EAAE;;4DAAkC;IAChC;QAAT,4DAAM,EAAE;kCAAqB,0DAAY;kEAAsC;IAEvE;QAAR,2DAAK,EAAE;;yDAAgB;IATf,kBAAkB;QAb9B,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,QAAQ,EACR,mZAQU;SACb,CAAC;yCAa4B,wFAAgB;YAC5B,sDAAQ;OAbb,kBAAkB,CA0B9B;IAAD,yBAAC;CAAA,CA1BuC,kFAAgB,GA0BvD;AA1B8B;;;;;;;;;;;;ACjB/B,qWAAqW,oGAAoG,+FAA+F,yQAAyQ,cAAc,oWAAoW,2BAA2B,oJAAoJ,aAAa,6SAA6S,WAAW,mFAAmF,qDAAqD,wMAAwM,cAAc,oFAAoF,uBAAuB,wMAAwM,gBAAgB,iIAAiI,6BAA6B,sKAAsK,aAAa,2GAA2G,kBAAkB,IAAI,yBAAyB,4iBAA4iB,yDAAyD,gBAAgB,wEAAwE,KAAK,eAAe,yRAAyR,gCAAgC,sDAAsD,sCAAsC,+jBAA+jB,KAAK,aAAa,mKAAmK,cAAc,iFAAiF,sCAAsC,qR;;;;;;;;;;;ACAlwJ,iGAAiG,2BAA2B,uBAAuB,GAAG,+BAA+B,sBAAsB,0BAA0B,GAAG,oCAAoC,wBAAwB,GAAG,wDAAwD,0BAA0B,GAAG,uDAAuD,gBAAgB,oBAAoB,qBAAqB,mBAAmB,qBAAqB,GAAG,qDAAqD,sBAAsB,oBAAoB,mBAAmB,GAAG,qCAAqC,oBAAoB,qBAAqB,wBAAwB,mBAAmB,GAAG,oCAAoC,oBAAoB,mBAAmB,qBAAqB,GAAG,gDAAgD,oBAAoB,mBAAmB,qBAAqB,GAAG,gDAAgD,oBAAoB,qBAAqB,GAAG,wCAAwC,wBAAwB,GAAG,oCAAoC,uBAAuB,GAAG,iDAAiD,uBAAuB,GAAG,kDAAkD,qCAAqC,GAAG,6EAA6E,2BAA2B,uBAAuB,wBAAwB,GAAG,qGAAqG,oBAAoB,GAAG,mGAAmG,qBAAqB,GAAG,uCAAuC,oBAAoB,qBAAqB,mBAAmB,qBAAqB,GAAG,sCAAsC,oBAAoB,mBAAmB,GAAG,iCAAiC,iBAAiB,oBAAoB,qBAAqB,wBAAwB,GAAG,8BAA8B,0DAA0D,mBAAmB,uBAAuB,KAAK,GAAG,6BAA6B,wBAAwB,yBAAyB,KAAK,GAAG,6BAA6B,yDAAyD,uBAAuB,KAAK,uDAAuD,sBAAsB,KAAK,GAAG,8DAA8D,wBAAwB,GAAG,qBAAqB,sBAAsB,GAAG,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhiF;AACH;AACX;AAC2B;AACJ;AACqB;AAQ1F;IAAsC,oCAAgB;IAMlD,0BACI,QAAkB,EACV,oBAAyC,EACzC,cAA8B;QAH1C,YAKI,kBAAM,QAAQ,CAAC,SAClB;QAJW,0BAAoB,GAApB,oBAAoB,CAAqB;QACzC,oBAAc,GAAd,cAAc,CAAgB;QAP1C,eAAS,GAAG,CAAC,CAAC;QACd,iBAAW,GAAe,IAAI,kFAAU,EAAE,CAAC;QAC3C,iBAAW,GAAG,2DAAS,CAAC,UAAU,GAAG,gCAAgC,CAAC;;IAQtE,CAAC;IAED,mCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,qCAAU,GAAV;QAAA,iBASC;QAPG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAc;YAChD,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,gBAAM;YACrE,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IA3BQ,gBAAgB;QAN5B,+DAAS,CAAC;;;YAGP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCASgB,sDAAQ;YACY,2FAAmB;YACzB,8DAAc;OATjC,gBAAgB,CA4B5B;IAAD,uBAAC;CAAA,CA5BqC,kFAAgB,GA4BrD;AA5B4B;;;;;;;;;;;;ACb7B,sPAAsP,qBAAqB,sTAAsT,8BAA8B,+fAA+f,gBAAgB,gLAAgL,4BAA4B,mIAAmI,aAAa,2IAA2I,cAAc,sPAAsP,8BAA8B,6GAA6G,6BAA6B,mPAAmP,4BAA4B,sLAAsL,+BAA+B,wiBAAwiB,+CAA+C,sEAAsE,eAAe,+MAA+M,6EAA6E,8GAA8G,eAAe,iWAAiW,gBAAgB,0NAA0N,qBAAqB,wbAAwb,+CAA+C,sXAAsX,cAAc,oIAAoI,kBAAkB,kRAAkR,cAAc,6QAA6Q,cAAc,iQAAiQ,aAAa,gQAAgQ,aAAa,2QAA2Q,aAAa,kMAAkM,eAAe,wEAAwE,KAAK,gBAAgB,iIAAiI,gBAAgB,mkBAAmkB,kBAAkB,0LAA0L,wCAAwC,iMAAiM,2BAA2B,mGAAmG,uDAAuD,6IAA6I,eAAe,6IAA6I,iDAAiD,6IAA6I,oDAAoD,6IAA6I,iBAAiB,kHAAkH,mDAAmD,kBAAkB,6IAA6I,kBAAkB,gTAAgT,+CAA+C,mhBAAmhB,8DAA8D,+N;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA38T;AACxC;AAC4B;AACJ;AACJ;AACU;AACqH;AAEjI;AACZ;AAOvD;IAAqD,mDAAgB;IAcjE,yCACI,QAAkB,EACV,eAAoC,EACpC,oBAAyC,EACzC,kBAAqC,EACrC,oBAAyC,EACzC,eAA+B;QAN3C,YAQI,kBAAM,QAAQ,CAAC,SAElB;QARW,qBAAe,GAAf,eAAe,CAAqB;QACpC,0BAAoB,GAApB,oBAAoB,CAAqB;QACzC,wBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,0BAAoB,GAApB,oBAAoB,CAAqB;QACzC,qBAAe,GAAf,eAAe,CAAgB;QAd3C,UAAI,GAAqB,IAAI,wFAAgB,EAAE,CAAC;QAChD,YAAM,GAAuB,IAAI,0FAAkB,EAAE,CAAC;QACtD,iBAAW,GAAuB,IAAI,0FAAkB,EAAE,CAAC;QAC3D,2BAAqB,GAAiC,sEAAqB,CAAC;QAC5E,wBAAkB,GAAuB,mEAAkB,CAAC;QAE5D,gBAAU,GAAG,EAAE,CAAC;QAWZ,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;;IACpF,CAAC;IAED,4DAAkB,GAAlB;QACI,gFAAgF;QAChF,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,6BAA6B,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,kDAAQ,GAAR;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,6DAAmB,GAAnB,UAAoB,SAAiB,EAAE,SAAiB;QAAxD,iBASC;QARG,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACZ,MAAM,CAAC,IAAI,CAAC,qBAAqB,GAAG,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC7D,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,wFAAgB,CAAC,EAAE,qBAAqB,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC1G,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC,qBAAqB,GAAG,SAAS,EAAE,QAAQ,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,qDAAW,GAAX;QAAA,iBAQC;QAPG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;YAChC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;YACzC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;YAC7C,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC;QAC3D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2DAAiB,GAAjB,UAAkB,KAAqB;QAAvC,iBAkBC;QAjBG,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE7B,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CACvC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAClD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,EAChE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAC9D,CAAC,SAAS,CAAC,gBAAM;YACd,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC;YAC9D,KAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/C,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAzEuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,oEAAK;sEAAC;IACjB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,gFAAS;sEAAC;IAHpC,+BAA+B;QAL3C,+DAAS,CAAC;;YAEP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAiBgB,sDAAQ;YACO,2FAAmB;YACd,2FAAmB;YACrB,4FAAiB;YACf,2FAAmB;YACxB,8DAAc;OApBlC,+BAA+B,CA4E3C;IAAD,sCAAC;CAAA,CA5EoD,kFAAgB,GA4EpE;AA5E2C;;;;;;;;;;;;AChB5C,6MAA6M,mBAAmB,kWAAkW,wBAAwB,iNAAiN,qNAAqN,oBAAoB,8IAA8I,4BAA4B,+IAA+I,GAAG,yRAAyR,qCAAqC,qIAAqI,aAAa,8IAA8I,qBAAqB,mcAAmc,wBAAwB,oPAAoP,iCAAiC,kOAAkO,iCAAiC,oRAAoR,0BAA0B,+NAA+N,kCAAkC,oEAAoE,GAAG,6HAA6H,kCAAkC,6VAA6V,0BAA0B,iPAAiP,sBAAsB,qOAAqO,8BAA8B,g7BAAg7B,6CAA6C,0HAA0H,iDAAiD,0HAA0H,iDAAiD,gIAAgI,uDAAuD,wHAAwH,yFAAyF,8MAA8M,4BAA4B,kOAAkO,oCAAoC,i/BAAi/B,6CAA6C,gIAAgI,iDAAiD,gIAAgI,iDAAiD,sIAAsI,uDAAuD,8HAA8H,yFAAyF,6GAA6G,2BAA2B,qKAAqK,gBAAgB,4QAA4Q,qBAAqB,0aAA0a,kCAAkC,iOAAiO,2CAA2C,kEAAkE,4BAA4B,ylBAAylB,wBAAwB,sfAAsf,wCAAwC,mXAAmX,4BAA4B,uUAAuU,eAAe,qSAAqS,eAAe,4QAA4Q,aAAa,oG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/vY;AAC5B;AAK3B;AACd;AACK;AACc;AAM/C;IAAgD,8CAAgB;IAmB5D,oCACI,QAAkB,EACV,cAAkC,EAClC,oBAA8C,EAC9C,eAAoC;QAJhD,YAMI,kBAAM,QAAQ,CAAC,SAClB;QALW,oBAAc,GAAd,cAAc,CAAoB;QAClC,0BAAoB,GAApB,oBAAoB,CAA0B;QAC9C,qBAAe,GAAf,eAAe,CAAqB;QAjBtC,eAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,YAAM,GAAG,KAAK,CAAC;QACf,YAAM,GAAG,KAAK,CAAC;QACf,uBAAiB,GAAG,IAAI,CAAC;QACzB,eAAS,GAAG,IAAI,CAAC;QACjB,cAAQ,GAAyC,EAAE,CAAC;QAEpD,+BAAyB,GAA8B,IAAI,iGAAyB,EAAE,CAAC;QACvF,iBAAW,GAAG,KAAK,CAAC;QACpB,iCAA2B,GAAG,KAAK,CAAC;QACpC,2BAAqB,GAAG,KAAK,CAAC;;IAS9B,CAAC;IAED,yCAAI,GAAJ;QAAA,iBAQC;QAPG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,IAAI,CAAC,eAAe,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAAC,gBAAM;YAChE,KAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,OAAO,CAAC;YAChD,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAO,GAAP;QACI,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;QAC/C,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC;YACxD,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI;YAC7C,MAAM,EAAE,GAAG;SACd,CAAC,CAAC;IACP,CAAC;IAED,yCAAI,GAAJ;QAAA,iBA0BC;QAzBG,IAAI,CAAC,MAAM,GAAG,IAAI,yFAAiB,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,+BAA+B,GAAG,IAAI,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,mBAAmB,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;QAEpC,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,KAAK,CAAC;aAClD,SAAS,CAAC,UAAC,MAAM;YACd,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC;YAE7B,IAAI,eAAe,GAAG,IAAI,0GAAkC,EAAE,CAAC;YAC/D,eAAe,CAAC,KAAK,GAAG,GAAG,CAAC;YAC5B,eAAe,CAAC,WAAW,GAAG,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;YAEpD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YAEvC,KAAI,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,UAAC,uBAAuB;gBAChF,IAAI,cAAc,GAAG,6CAAQ,CAAC,KAAI,CAAC,QAAQ,EAAE,EAAE,aAAa,EAAE,uBAAuB,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC9F,EAAE,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtC,KAAI,CAAC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC1D,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBACpC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACX,CAAC;IAED,oDAAe,GAAf,UAAgB,IAAI;QAChB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,0DAAqB,GAArB;QACI,IAAI,gBAAgB,GAAG,6CAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;aACjF,GAAG,CAAC,WAAC,IAAI,aAAM,CAAC,MAAM,CAAC,IAAI,0GAAkC,EAAE,EAAC,CAAC,CAAC,EAAzD,CAAyD,CAAC,CAAC;QAErE,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QACtC,CAAC;QAED,IAAI,eAAe,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,qBAAqB,GAAG,eAAe,CAAC,MAAM,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;IACtC,CAAC;IAED,+DAA0B,GAA1B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,IAAI,sBAAsB,GAAG,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;QAChF,MAAM,CAAC,sBAAsB,KAAK,SAAS,IAAI,sBAAsB,KAAK,EAAE,CAAC;IACjF,CAAC;IAED,yCAAI,GAAJ;QAAA,iBAyBC;QAxBG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;QACrC,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;QACjC,CAAC;QAED,2BAA2B;QAC3B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,mCAAM,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAC,CAAC;QAChK,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;aACxC,OAAO,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC;aAClC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,0CAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,oDAAe,GAAf;QACI,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACzF,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;IAED,6DAAwB,GAAxB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QAC7C,CAAC;IACL,CAAC;IArJ8B;QAA9B,+DAAS,CAAC,kBAAkB,CAAC;kCAAmB,wDAAU;wEAAC;IAClC;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAQ,4DAAc;6DAAC;IACX;QAApC,+DAAS,CAAC,wBAAwB,CAAC;kCAAyB,wDAAU;8EAAC;IAE9D;QAAT,4DAAM,EAAE;kCAAY,0DAAY;iEAAgC;IANxD,0BAA0B;QAJtC,+DAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;;SAEhC,CAAC;yCAqBgB,sDAAQ;YACM,0FAAkB;YACZ,gGAAwB;YAC7B,2FAAmB;OAvBvC,0BAA0B,CAwJtC;IAAD,iCAAC;CAAA,CAxJ+C,kFAAgB,GAwJ/D;AAxJsC;;;;;;;;;;;;ACfvC,yMAAyM,mBAAmB,4WAA4W,mBAAmB,IAAI,oBAAoB,iNAAiN,8MAA8M,aAAa,8IAA8I,qBAAqB,4UAA4U,iCAAiC,0fAA0f,2DAA2D,wIAAwI,gBAAgB,4QAA4Q,qBAAqB,gbAAgb,kCAAkC,iOAAiO,6CAA6C,qEAAqE,+BAA+B,qNAAqN,uCAAuC,yjBAAyjB,wBAAwB,0XAA0X,eAAe,uSAAuS,eAAe,2QAA2Q,aAAa,oG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApiK;AAC5B;AACqF;AAC9H;AACK;AACc;AAM/C;IAA8C,4CAAgB;IAkB1D,kCACI,QAAkB,EACV,cAAkC,EAClC,oBAA8C;QAH1D,YAKI,kBAAM,QAAQ,CAAC,SAClB;QAJW,oBAAc,GAAd,cAAc,CAAoB;QAClC,0BAAoB,GAApB,oBAAoB,CAA0B;QAfhD,eAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,YAAM,GAAG,KAAK,CAAC;QACf,YAAM,GAAG,KAAK,CAAC;QACf,iBAAW,GAAG,KAAK,CAAC;QACpB,mCAA6B,GAAG,KAAK,CAAC;QAEtC,YAAM,GAAkB,SAAS,CAAC;QAElC,cAAQ,GAAyC,EAAE,CAAC;QACpD,iCAA2B,GAAG,KAAK,CAAC;;IAQpC,CAAC;IAED,uCAAI,GAAJ,UAAK,QAAgB;QAArB,iBAoBC;QAnBG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,wBAAc;YAC5E,KAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC;YACrC,IAAI,kBAAkB,GAAG,IAAI,0GAAkC,EAAE,CAAC;YAClE,kBAAkB,CAAC,WAAW,GAAG,KAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;YACvD,kBAAkB,CAAC,KAAK,GAAG,GAAG,CAAC;YAC/B,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAE1C,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,YAAY;gBAClE,KAAI,CAAC,MAAM,GAAG,YAAY,CAAC;gBAC3B,KAAI,CAAC,uBAAuB,GAAG,YAAY,CAAC,gBAAgB,CAAC;gBAC7D,KAAI,CAAC,MAAM,CAAC,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC;gBACnD,KAAI,CAAC,WAAW,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC;gBACvD,KAAI,CAAC,6BAA6B,GAAG,KAAI,CAAC,WAAW,IAAI,KAAI,CAAC,MAAM,CAAC,sBAAsB,KAAK,SAAS,CAAC;gBAC1G,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBAClB,KAAI,CAAC,wBAAwB,EAAE,CAAC;YACpC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAO,GAAP;QAAA,iBASC;QARG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;QACxC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC;YACxD,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI;YAC7C,MAAM,EAAE,GAAG;YACX,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,sBAAsB;SAClD,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,UAAC,CAAC;YACjB,KAAI,CAAC,6BAA6B,GAAG,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC;QAC1D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4DAAyB,GAAzB,UAA0B,IAAS;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,MAAM,CAAC,mCAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,wDAAqB,GAArB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,gBAAgB,GAAG,6CAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,EAAE,EAAE,CAAC,CAAC;QACtF,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,eAAe,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC1C,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC;IAClC,CAAC;IAED,uCAAI,GAAJ;QAAA,iBAyBC;QAxBG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;QACjC,CAAC;QAED,2BAA2B;QAC3B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7C,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC;YACtF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC;YAC9C,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,mCAAM,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAC,CAAC;QAC1F,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;aACxC,OAAO,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC;aAClC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,wCAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,kDAAe,GAAf;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;QACxC,CAAC;QAED,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;IAED,oDAAiB,GAAjB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,CAAC;YAC5E,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC;YAC1C,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC;YACtF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;YAC/C,CAAC;QACL,CAAC;IACL,CAAC;IAED,2DAAwB,GAAxB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QAC7C,CAAC;IACL,CAAC;IAlJuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,wDAAU;+DAAC;IACtB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAQ,4DAAc;2DAAC;IACT;QAApC,+DAAS,CAAC,wBAAwB,CAAC;kCAAyB,wDAAU;4EAAC;IAE9D;QAAT,4DAAM,EAAE;kCAAY,0DAAY;+DAAgC;IANxD,wBAAwB;QAJpC,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;;SAE9B,CAAC;yCAoBgB,sDAAQ;YACM,0FAAkB;YACZ,gGAAwB;OArBjD,wBAAwB,CAqJpC;IAAD,+BAAC;CAAA,CArJ6C,kFAAgB,GAqJ7D;AArJoC;;;;;;;;;;;;ACXrC,qMAAqM,mBAAmB,wYAAwY,iBAAiB,KAAK,YAAY,ggBAAggB,6BAA6B,yJAAyJ,eAAe,sNAAsN,aAAa,sG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3+C;AACM;AAC8C;AACpE;AACyB;AAMxE;IAAkD,gDAAgB;IAa9D,sCACI,QAAkB,EACV,cAAkC;QAF9C,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,oBAAc,GAAd,cAAc,CAAoB;QAV9C,YAAM,GAAG,KAAK,CAAC;QACf,YAAM,GAAG,KAAK,CAAC;QAEf,uBAAiB,GAAG,KAAK,CAAC;QAG1B,qBAAe,GAAQ,IAAI,CAAC;;IAO5B,CAAC;IAED,2CAAI,GAAJ,UAAK,QAAgB,EAAE,UAAkB;QACrC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,mDAAY,GAAZ;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YACzE,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAI,GAAJ;QAAA,iBAkBC;QAjBG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC;QACX,CAAC;QAGD,IAAM,KAAK,GAAG,IAAI,iGAAyB,EAAE,CAAC;QAC9C,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzB,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;QAE5D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC;aAC1C,OAAO,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,CAAC;aAClC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,oDAAa,GAAb;QAAA,iBAWC;QAVG,IAAM,KAAK,GAAG,IAAI,iFAAS,EAAE,CAAC;QAC9B,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,KAAK,CAAC;aACjD,OAAO,CAAC,cAAM,YAAI,CAAC,iBAAiB,GAAG,KAAK,EAA9B,CAA8B,CAAC;aAC7C,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,4CAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IArEiC;QAAjC,+DAAS,CAAC,qBAAqB,CAAC;kCAAQ,4DAAc;+DAAC;IAC9B;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAc,mFAAoB;qEAAC;IAHnD,4BAA4B;QAJxC,+DAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;;SAElC,CAAC;yCAegB,sDAAQ;YACM,0FAAkB;OAfrC,4BAA4B,CAwExC;IAAD,mCAAC;CAAA,CAxEiD,kFAAgB,GAwEjE;AAxEwC;;;;;;;;;;;;ACVzC,6RAA6R,gBAAgB,uGAAuG,0BAA0B,gPAAgP,wBAAwB,0kBAA0kB,8BAA8B,uPAAuP,yBAAyB,+gBAA+gB,cAAc,67BAA67B,0BAA0B,o4CAAo4C,mBAAmB,+/BAA+/B,cAAc,4mBAA4mB,+CAA+C,wWAAwW,cAAc,2HAA2H,sBAAsB,mPAAmP,WAAW,yKAAyK,cAAc,sIAAsI,6BAA6B,kQAAkQ,aAAa,wPAAwP,mBAAmB,65BAA65B,gBAAgB,odAAod,wBAAwB,qUAAqU,WAAW,gWAAgW,eAAe,4TAA4T,aAAa,2MAA2M,aAAa,qWAAqW,qBAAqB,mDAAmD,oBAAoB,uFAAuF,aAAa,iDAAiD,2BAA2B,2FAA2F,2FAA2F,+LAA+L,UAAU,kHAAkH,SAAS,wIAAwI,wCAAwC,wRAAwR,+CAA+C,gfAAgf,8DAA8D,ylB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz4Y;AACzC;AAC6B;AACuB;AAC5B;AACJ;AACiG;AACrI;AAEkC;AACZ;AACsB;AACJ;AACQ;AAOjF;IAAsC,oCAAgB;IAqBlD,0BACI,QAAkB,EACV,cAAkC,EAClC,eAA+B,EAC/B,oBAA8C,EAC9C,qBAA2C;QALvD,YAOI,kBAAM,QAAQ,CAAC,SAElB;QAPW,oBAAc,GAAd,cAAc,CAAoB;QAClC,qBAAe,GAAf,eAAe,CAAgB;QAC/B,0BAAoB,GAApB,oBAAoB,CAA0B;QAC9C,2BAAqB,GAArB,qBAAqB,CAAsB;QAhBvD,aAAO,GASE,EAAE,CAAC;QAUR,KAAI,CAAC,mBAAmB,EAAE,CAAC;;IAC/B,CAAC;IAED,8CAAmB,GAAnB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,0BAA0B,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YAChF,IAAI,CAAC,OAAO,CAAC,8BAA8B,GAAG,IAAI,CAAC;YACnD,IAAI,CAAC,OAAO,CAAC,wBAAwB,GAAG,mCAAM,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC1H,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,wBAAwB,GAAG,mCAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpE,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,wBAAwB,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YAC9E,IAAI,CAAC,OAAO,CAAC,8BAA8B,GAAG,IAAI,CAAC;YACnD,IAAI,CAAC,OAAO,CAAC,sBAAsB,GAAG,mCAAM,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC,CAAC;QACtH,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,sBAAsB,GAAG,mCAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAChF,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,OAAO,CAAC,uBAAuB,GAAG,IAAI,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,mCAAM,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC5G,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,mCAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7E,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,OAAO,CAAC,uBAAuB,GAAG,IAAI,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,mCAAM,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACxG,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,mCAAM,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzD,CAAC;IACL,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAcC;QAbG,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAExF,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC;YACtC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC;YAC5B,UAAU,EAAE,UAAC,SAAiB,EAAE,cAAsB,EAAE,MAAc,EAAE,QAAiB;gBACrF,IAAI,KAAK,GAAG,IAAI,sFAAc,EAAE,CAAC;gBACjC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBACtB,KAAK,CAAC,cAAc,GAAG,cAAc,CAAC;gBACtC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC5B,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAC1B,MAAM,CAAC,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtD,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAED,qCAAU,GAAV,UAAW,KAAqB;QAAhC,iBAyBC;QAxBG,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE7B,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,IAAI,CAAC,cAAc,CAAC,UAAU,CAC1B,IAAI,CAAC,OAAO,CAAC,UAAU,EACvB,IAAI,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,SAAS,EAC/F,IAAI,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,SAAS,EAC7F,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,EACjF,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,EAC/E,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAC9B,IAAI,CAAC,OAAO,CAAC,iBAAiB,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,EAAE,CAAC,KAAK,IAAI,EAC9F,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAClD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,EAChE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAC9D,CAAC,SAAS,CAAC,gBAAM;YACd,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC;YAC9D,KAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/C,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yDAA8B,GAA9B,UAA+B,MAAW;QACtC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC;QACrD,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;IAC3C,CAAC;IAED,qCAAU,GAAV,UAAW,MAAW;QAAtB,iBAIC;QAHG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,wFAAgB,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YACrF,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAU,GAAV;QACI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,uCAAY,GAAZ;QACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAED,uCAAY,GAAZ,UAAa,MAAqB;QAAlC,iBAYC;QAXG,IAAI,CAAC,OAAO,CAAC,OAAO,CAChB,IAAI,CAAC,CAAC,CAAC,4BAA4B,EAAE,MAAM,CAAC,WAAW,CAAC,EACxD,qBAAW;YACP,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;oBAClD,KAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IAED,0CAAe,GAAf,UAAgB,IAAkB;QAC9B,IAAI,CAAC,qBAAqB;aACrB,WAAW,CACZ,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EACpB,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CACvC,CAAC;IACV,CAAC;IA9IwC;QAAxC,+DAAS,CAAC,4BAA4B,CAAC;kCAA6B,kHAA0B;wEAAC;IAChE;QAA/B,+DAAS,CAAC,mBAAmB,CAAC;kCAAoB,0FAA0B;+DAAC;IAChD;QAA7B,+DAAS,CAAC,iBAAiB,CAAC;kCAAkB,sFAAwB;6DAAC;IACtC;QAAjC,+DAAS,CAAC,qBAAqB,CAAC;kCAAsB,8FAA4B;iEAAC;IAC5D;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,oEAAK;uDAAC;IACjB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,gFAAS;uDAAC;IAPpC,gBAAgB;QAL5B,+DAAS,CAAC;;YAEP,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAuBgB,sDAAQ;YACM,0FAAkB;YACjB,8DAAc;YACT,gGAAwB;YACvB,2FAAoB;OA1B9C,gBAAgB,CAiJ5B;IAAD,uBAAC;CAAA,CAjJqC,kFAAgB,GAiJrD;AAjJ4B;;;;;;;;;;;;ACpB7B,oSAAoS,uBAAuB,uGAAuG,kCAAkC,gTAAgT,4BAA4B,2MAA2M,aAAa,uKAAuK,0BAA0B,oTAAoT,6BAA6B,mNAAmN,8BAA8B,2UAA2U,gBAAgB,ubAAub,aAAa,8bAA8b,cAAc,ybAAyb,aAAa,kcAAkc,eAAe,uQAAuQ,mCAAmC,0NAA0N,8BAA8B,yEAAyE,8BAA8B,6NAA6N,oCAAoC,8NAA8N,kCAAkC,yEAAyE,8BAA8B,4LAA4L,6BAA6B,gOAAgO,qCAAqC,gOAAgO,8BAA8B,wEAAwE,6BAA6B,4HAA4H,8BAA8B,yUAAyU,2CAA2C,8QAA8Q,4CAA4C,gPAAgP,6BAA6B,wEAAwE,6BAA6B,qOAAqO,4CAA4C,qPAAqP,8BAA8B,wEAAwE,6BAA6B,4aAA4a,mDAAmD,uKAAuK,6BAA6B,uUAAuU,0CAA0C,qOAAqO,2BAA2B,0NAA0N,qCAAqC,iNAAiN,6BAA6B,uEAAuE,4BAA4B,2NAA2N,iCAAiC,qNAAqN,8BAA8B,wEAAwE,6BAA6B,+aAA+a,kCAAkC,miBAAmiB,6CAA6C,miBAAmiB,8CAA8C,2kBAA2kB,yCAAyC,yhBAAyhB,2CAA2C,6SAA6S,sCAAsC,oOAAoO,iCAAiC,6EAA6E,kCAAkC,0QAA0Q,4CAA4C,qPAAqP,gCAAgC,yEAAyE,8BAA8B,wEAAwE,6BAA6B,mcAAmc,6CAA6C,qOAAqO,6BAA6B,gZAAgZ,oCAAoC,oR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1/e;AACL;AACJ;AACyD;AAM9H;IAA8C,4CAAgB;IAI1D,kCACI,QAAkB,EACV,uBAA4D;QAFxE,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,6BAAuB,GAAvB,uBAAuB,CAAqC;;IAGxE,CAAC;IAED,qDAAkB,GAAlB;QACI,gFAAgF;QAChF,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,6BAA6B,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAIC;QAHG,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,UAAC,cAAc;YAC5E,KAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2DAAwB,GAAxB;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC;IAClD,CAAC;IAED,oEAAiC,GAAjC;QACI,IAAI,CAAC,uBAAuB,CAAC,iCAAiC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YACpF,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6DAA0B,GAA1B;QACI,IAAI,CAAC,uBAAuB,CAAC,0BAA0B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YAC7E,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2DAAwB,GAAxB;QACI,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC;YAC9D,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6DAA0B,GAA1B,UAA2B,GAAG;QAC1B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAClD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACrD,CAAC;IACL,CAAC;IAED,yDAAsB,GAAtB,UAAuB,GAAG;QACtB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAClD,CAAC;IACL,CAAC;IA1DQ,wBAAwB;QAJpC,+DAAS,CAAC;;YAEP,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAMgB,sDAAQ;YACe,2GAAmC;OAN/D,wBAAwB,CA2DpC;IAAD,+BAAC;CAAA,CA3D6C,kFAAgB,GA2D7D;AA3DoC;;;;;;;;;;;;ACTrC,mNAAmN,mBAAmB,uVAAuV,iBAAiB,IAAI,eAAe,4DAA4D,sBAAsB,iNAAiN,yNAAyN,uBAAuB,yOAAyO,gBAAgB,wSAAwS,aAAa,oeAAoe,gBAAgB,kjBAAkjB,qBAAqB,6UAA6U,gCAAgC,uLAAuL,oBAAoB,0UAA0U,iBAAiB,2UAA2U,kCAAkC,2fAA2f,0BAA0B,6UAA6U,iBAAiB,qsCAAqsC,6CAA6C,qHAAqH,iDAAiD,qHAAqH,iDAAiD,2HAA2H,uDAAuD,mHAAmH,yFAAyF,kSAAkS,uBAAuB,0tCAA0tC,6CAA6C,2HAA2H,iDAAiD,2HAA2H,iDAAiD,iIAAiI,uDAAuD,yHAAyH,yFAAyF,wGAAwG,2BAA2B,ifAAif,wCAAwC,8YAA8Y,4BAA4B,uWAAuW,eAAe,4aAA4a,2BAA2B,kaAAka,yBAAyB,4MAA4M,YAAY,8JAA8J,wBAAwB,+KAA+K,eAAe,kHAAkH,eAAe,8BAA8B,eAAe,2EAA2E,sBAAsB,4MAA4M,wBAAwB,8XAA8X,eAAe,8NAA8N,aAAa,oG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh7Z;AACrE;AACuB;AAC8H;AACvK;AACmB;AACkF;AAUjI;IAAoD,kDAAgB;IAyBhE,wCACI,QAAkB,EACV,YAA8B,EAC9B,eAAoC;QAHhD,YAKI,kBAAM,QAAQ,CAAC,SAClB;QAJW,kBAAY,GAAZ,YAAY,CAAkB;QAC9B,qBAAe,GAAf,eAAe,CAAqB;QAtBtC,eAAS,GAAsB,IAAI,0DAAY,EAAO,CAAC;QAEjE,YAAM,GAAG,KAAK,CAAC;QACf,YAAM,GAAG,KAAK,CAAC;QACf,uBAAiB,GAAG,IAAI,CAAC;QACzB,wBAAkB,GAAY,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,kDAAkD,CAAC,CAAC;QAC1G,sBAAgB,GAAY,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,+CAA+C,CAAC,CAAC;QACrG,+BAAyB,GAA8B,IAAI,iGAAyB,EAAE,CAAC;QAEvF,UAAI,GAAgB,IAAI,mFAAW,EAAE,CAAC;QAEtC,yBAAmB,GAAG,IAAI,CAAC;QAC3B,uBAAiB,GAAG,IAAI,CAAC;QACzB,4BAAsB,GAAG,EAAE,CAAC;;IAY5B,CAAC;IAED,2DAAkB,GAAlB;QACI,gFAAgF;QAChF,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,6BAA6B,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,6CAAI,GAAJ,UAAK,MAAe;QAApB,iBAiCC;QAhCG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QACpC,CAAC;QAED,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,oBAAU;YACzD,KAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;YAC5B,KAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;YAC9B,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,2DAAS,CAAC,cAAc,CAAC,oBAAoB,CAAC;YAE9F,KAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC,oBAAoB,CAAC;YAC5D,KAAI,CAAC,yBAAyB,GAAG,UAAU,CAAC,yBAAyB,CAAC;YAEtE,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;YAEpD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEnB,UAAU,CAAC;oBACP,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBACnC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEN,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACrC,CAAC;YAED,KAAI,CAAC,eAAe,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAAC,kCAAwB;gBAClF,KAAI,CAAC,yBAAyB,GAAG,wBAAwB,CAAC,OAAO,CAAC;gBAClE,KAAI,CAAC,yBAAyB,EAAE,CAAC;gBACjC,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kEAAyB,GAAzB;QAEI,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC;QAErC,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,sBAAsB,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,sCAAsC,CAAC,GAAG,OAAO,CAAC;QACrG,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,sBAAsB,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,0CAA0C,CAAC,GAAG,OAAO,CAAC;QACzG,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,sBAAsB,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,0CAA0C,CAAC,GAAG,OAAO,CAAC;QACzG,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,sBAAsB,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,sBAAsB,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,gDAAgD,CAAC,GAAG,OAAO,CAAC;QAC/G,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,sBAAsB,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,wCAAwC,EAAE,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,GAAG,OAAO,CAAC;QACtJ,CAAC;QAED,IAAI,CAAC,sBAAsB,IAAI,OAAO,CAAC;IAC3C,CAAC;IAED,0DAAiB,GAAjB,UAAkB,gBAAwB;QAA1C,iBAaC;QAZG,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,kDAAkD,CAAC;QACjG,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAEzE,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;oBAClC,KAAI,CAAC,cAAc,GAAG,yBAAyB,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5E,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,UAAU,EAAE,GAAG,kDAAkD,CAAC;gBACjG,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,gDAAO,GAAP;QACI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAC;QAExC,IAAI,CAAC,oBAAoB,CAAC,IAAI,GAAwC;YAClE,oBAAoB,EAAE,IAAI,CAAC,oBAAoB;YAC/C,yBAAyB,EAAE,IAAI,CAAC,yBAAyB;SAC5D,CAAC;IACN,CAAC;IAED,6CAAI,GAAJ;QAAA,iBAqBC;QApBG,IAAI,KAAK,GAAG,IAAI,+FAAuB,EAAE,CAAC;QAE1C,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACjD,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACrD,KAAK,CAAC,iBAAiB;YACnB,0CAAK,CACD,6CAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,EAAE,cAAI,IAAI,WAAI,CAAC,QAAQ,EAAb,CAAa,CACpE,CAAC;QAEN,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,EAAE,CAAC;QAE/E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC;aACtC,OAAO,CAAC,cAAQ,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACvC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,8CAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,6DAAoB,GAApB;QACI,MAAM,CAAC,6CAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;IAC7D,CAAC;IAzJuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,wDAAU;qEAAC;IACd;QAA/B,+DAAS,CAAC,mBAAmB,CAAC;kCAAQ,4DAAc;iEAAC;IACnB;QAAlC,+DAAS,CAAC,sBAAsB,CAAC;kCAAuB,uGAA8B;gFAAC;IAE9E;QAAT,4DAAM,EAAE;kCAAY,0DAAY;qEAAgC;IANxD,8BAA8B;QAR1C,+DAAS,CAAC;YACP,QAAQ,EAAE,uBAAuB;;YAEjC,MAAM,EAAE,CAAC,iFAEH;aACL;SACJ,CAAC;yCA2BgB,sDAAQ;YACI,wFAAgB;YACb,2FAAmB;OA5BvC,8BAA8B,CA4J1C;IAAD,qCAAC;CAAA,CA5JmD,kFAAgB,GA4JnE;AA5J0C;;;;;;;;;;;;AChB3C,2KAA2K,mBAAmB,+RAA+R,oBAAoB,8BAA8B,UAAU,wNAAwN,qQAAqQ,oDAAoD,2CAA2C,gYAAgY,gCAAgC,4JAA4J,eAAe,sPAAsP,aAAa,oG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp2D;AACM;AACoD;AAC1E;AAC+B;AAM9E;IAAuD,qDAAgB;IAWnE,2CACI,QAAkB,EACV,YAA8B;QAF1C,YAII,kBAAM,QAAQ,CAAC,SAClB;QAHW,kBAAY,GAAZ,YAAY,CAAkB;QAR1C,YAAM,GAAG,KAAK,CAAC;QACf,0BAAoB,GAAG,KAAK,CAAC;;IAU7B,CAAC;IAED,gDAAI,GAAJ,UAAK,MAAc,EAAE,QAAiB;QAAtC,iBAQC;QAPG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;YAChE,KAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,MAAM,CAAC;YACtC,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAI,GAAJ;QAAA,iBAaC;QAZG,IAAI,KAAK,GAAG,IAAI,kGAA0B,EAAE,CAAC;QAE7C,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACvB,KAAK,CAAC,sBAAsB,GAAG,IAAI,CAAC,cAAc,CAAC,yBAAyB,EAAE,CAAC;QAE/E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,KAAK,CAAC;aACzC,OAAO,CAAC,cAAQ,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;aACvC,SAAS,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,4DAAgB,GAAhB;QAAA,iBAeC;QAbG,IAAI,KAAK,GAAG,IAAI,wFAAgB,EAAE,CAAC;QAEnC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAEvB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YAC5D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9C,KAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACrE,KAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,MAAM,CAAC;YAC1C,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,SAAS,EAAE;YACV,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAK,GAAL;QACI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IA5DuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAQ,4DAAc;oEAAC;IACjB;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;kCAAiB,yFAAuB;6EAAC;IAH5D,iCAAiC;QAJ7C,+DAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;;SAEvC,CAAC;yCAagB,sDAAQ;YACI,wFAAgB;OAbjC,iCAAiC,CA+D7C;IAAD,wCAAC;CAAA,CA/DsD,kFAAgB,GA+DtE;AA/D6C;;;;;;;;;;;;ACV9C,4RAA4R,cAAc,uGAAuG,wBAAwB,6NAA6N,sBAAsB,mLAAmL,sBAAsB,k6CAAk6C,0GAA0G,kgBAAkgB,mBAAmB,2ZAA2Z,gBAAgB,mZAAmZ,4BAA4B,qNAAqN,4BAA4B,4lBAA4lB,+CAA+C,ovBAAovB,cAAc,+IAA+I,eAAe,uQAAuQ,WAAW,sQAAsQ,cAAc,uQAAuQ,YAAY,4QAA4Q,mBAAmB,uRAAuR,mBAAmB,mRAAmR,aAAa,gRAAgR,oBAAoB,oRAAoR,mBAAmB,upCAAupC,gBAAgB,seAAse,sBAAsB,wVAAwV,WAAW,yXAAyX,kBAAkB,kVAAkV,aAAa,uUAAuU,aAAa,2QAA2Q,iBAAiB,uEAAuE,aAAa,uEAAuE,gBAAgB,iHAAiH,gCAAgC,6GAA6G,qBAAqB,uLAAuL,UAAU,0HAA0H,SAAS,4NAA4N,UAAU,kHAAkH,SAAS,mMAAmM,yCAAyC,sPAAsP,wCAAwC,wRAAwR,+CAA+C,8eAA8e,8DAA8D,ya;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9+a;AACuB;AAC7C;AACY;AACH;AAC2B;AACJ;AAC4D;AACvD;AAEP;AACZ;AACgC;AACK;AAC7B;AAO/D;IAAoC,kCAAgB;IAahD,wBACI,QAAkB,EACX,qBAA2C,EAC1C,KAAW,EACX,iBAAmC,EACnC,cAA6B,EAC7B,oBAAyC,EACzC,UAAiC,EACjC,eAA+B;QAR3C,YAUI,kBAAM,QAAQ,CAAC,SAElB;QAVU,2BAAqB,GAArB,qBAAqB,CAAsB;QAC1C,WAAK,GAAL,KAAK,CAAM;QACX,uBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,oBAAc,GAAd,cAAc,CAAe;QAC7B,0BAAoB,GAApB,oBAAoB,CAAqB;QACzC,gBAAU,GAAV,UAAU,CAAuB;QACjC,qBAAe,GAAf,eAAe,CAAgB;QAd3C,SAAS;QACT,6BAAuB,GAAG,KAAK,CAAC;QAChC,gBAAU,GAAG,EAAE,CAAC;QAChB,wBAAkB,GAAG,EAAE,CAAC;QACxB,UAAI,GAAW,SAAS,CAAC;QAarB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;;IACpF,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAqB;QAA9B,iBAqBC;QApBG,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE7B,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QAE/C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAC3B,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS,EACrD,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAClD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,EAChE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAC9D,CAAC,SAAS,CAAC,gBAAM;YACd,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC;YAC9D,KAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/C,KAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAU,GAAV,UAAW,MAAM;QAAjB,iBAIC;QAHG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,wFAAgB,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;YACjF,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,iBAAiB,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAgB,GAAhB,UAAiB,KAAK;QAClB,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;gBACnB,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC;YACjC,CAAC;YAED,SAAS,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC9C,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAED,mCAAU,GAAV;QACI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,sCAAa,GAAb;QAAA,iBAKC;QAJG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE;aACnC,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mCAAU,GAAV;QACI,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;IAED,mCAAU,GAAV,UAAW,IAAiB;QAA5B,iBAkBC;QAjBG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,2DAAS,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,wBAAwB,EAAE,2DAAS,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,CAAC;YACnG,MAAM,CAAC;QACX,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAChB,IAAI,CAAC,CAAC,CAAC,0BAA0B,EAAE,IAAI,CAAC,QAAQ,CAAC,EACjD,UAAC,WAAW;YACR,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;qBACrC,SAAS,CAAC;oBACP,KAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IArGmC;QAAnC,+DAAS,CAAC,uBAAuB,CAAC;kCAAwB,oGAA8B;iEAAC;IACnD;QAAtC,+DAAS,CAAC,0BAA0B,CAAC;kCAA2B,yGAAiC;oEAAC;IAC3E;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,qEAAK;qDAAC;IACjB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,gFAAS;qDAAC;IALpC,cAAc;QAL1B,+DAAS,CAAC;;YAEP,aAAa,EAAE,+DAAiB,CAAC,IAAI;YACrC,UAAU,EAAE,CAAC,8FAAkB,EAAE,CAAC;SACrC,CAAC;yCAegB,sDAAQ;YACY,4EAAoB;YACnC,kDAAI;YACQ,wFAAgB;YACnB,wEAAa;YACP,uFAAmB;YAC7B,6FAAqB;YAChB,8DAAc;OArBlC,cAAc,CAwG1B;IAAD,qBAAC;CAAA,CAxGmC,kFAAgB,GAwGnD;AAxG0B;;;;;;;;;;;;;;ACrB3B;AAAA;IAAA;IAgCA,CAAC;IA/BU,qBAAU,GAAjB,UAAkB,KAAa;QAC3B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IAC1C,CAAC;IAEM,qBAAU,GAAjB,UAAkB,KAAa;QAC3B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IAC1C,CAAC;IAEM,qBAAU,GAAjB,UAAkB,UAAkB;QAChC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IAEM,qBAAU,GAAjB,UAAkB,UAAkB;QAChC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IACL,iBAAC;AAAD,CAAC","file":"app-admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { AuditLogsComponent } from './audit-logs/audit-logs.component';\nimport { HostDashboardComponent } from './dashboard/host-dashboard.component';\nimport { DemoUiComponentsComponent } from './demo-ui-components/demo-ui-components.component';\nimport { EditionsComponent } from './editions/editions.component';\nimport { InstallComponent } from './install/install.component';\nimport { LanguageTextsComponent } from './languages/language-texts.component';\nimport { LanguagesComponent } from './languages/languages.component';\nimport { MaintenanceComponent } from './maintenance/maintenance.component';\nimport { OrganizationUnitsComponent } from './organization-units/organization-units.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { HostSettingsComponent } from './settings/host-settings.component';\nimport { TenantSettingsComponent } from './settings/tenant-settings.component';\nimport { InvoiceComponent } from './subscription-management/invoice/invoice.component';\nimport { SubscriptionManagementComponent } from './subscription-management/subscription-management.component';\nimport { TenantsComponent } from './tenants/tenants.component';\nimport { UiCustomizationComponent } from './ui-customization/ui-customization.component';\nimport { UsersComponent } from './users/users.component';\n\n@NgModule({\n    imports: [\n        RouterModule.forChild([\n            {\n                path: '',\n                children: [\n                    { path: 'users', component: UsersComponent, data: { permission: 'Pages.Administration.Users' } },\n                    { path: 'roles', component: RolesComponent, data: { permission: 'Pages.Administration.Roles' } },\n                    { path: 'auditLogs', component: AuditLogsComponent, data: { permission: 'Pages.Administration.AuditLogs' } },\n                    { path: 'maintenance', component: MaintenanceComponent, data: { permission: 'Pages.Administration.Host.Maintenance' } },\n                    { path: 'hostSettings', component: HostSettingsComponent, data: { permission: 'Pages.Administration.Host.Settings' } },\n                    { path: 'editions', component: EditionsComponent, data: { permission: 'Pages.Editions' } },\n                    { path: 'languages', component: LanguagesComponent, data: { permission: 'Pages.Administration.Languages' } },\n                    { path: 'languages/:name/texts', component: LanguageTextsComponent, data: { permission: 'Pages.Administration.Languages.ChangeTexts' } },\n                    { path: 'tenants', component: TenantsComponent, data: { permission: 'Pages.Tenants' } },\n                    { path: 'organization-units', component: OrganizationUnitsComponent, data: { permission: 'Pages.Administration.OrganizationUnits' } },\n                    { path: 'subscription-management', component: SubscriptionManagementComponent, data: { permission: 'Pages.Administration.Tenant.SubscriptionManagement' } },\n                    { path: 'invoice/:paymentId', component: InvoiceComponent, data: { permission: 'Pages.Administration.Tenant.SubscriptionManagement' } },\n                    { path: 'tenantSettings', component: TenantSettingsComponent, data: { permission: 'Pages.Administration.Tenant.Settings' } },\n                    { path: 'hostDashboard', component: HostDashboardComponent, data: { permission: 'Pages.Administration.Host.Dashboard' } },\n                    { path: 'demo-ui-components', component: DemoUiComponentsComponent, data: { permission: 'Pages.DemoUiComponents' } },\n                    { path: 'install', component: InstallComponent },\n                    { path: 'ui-customization', component: UiCustomizationComponent }\n                ]\n            }\n        ])\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AdminRoutingModule {\n\n    constructor(\n        private router: Router\n    ) {\n        router.events.subscribe((event) => {\n            this.hideOpenDataTableDropdownMenus();\n\n            if (event instanceof NavigationEnd) {\n                window.scroll(0, 0);\n            }\n        });\n    }\n\n    hideOpenDataTableDropdownMenus(): void {\n        let $dropdownMenus = $('.dropdown-menu.tether-element');\n        $dropdownMenus.css({\n            'display': 'none'\n        });\n    }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppCommonModule } from '@app/shared/common/app-common.module';\nimport { UtilsModule } from '@shared/utils/utils.module';\nimport { AddMemberModalComponent } from 'app/admin/organization-units/add-member-modal.component';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { ModalModule, PopoverModule, TabsModule, TooltipModule } from 'ngx-bootstrap';\nimport { AutoCompleteModule, EditorModule, FileUploadModule as PrimeNgFileUploadModule, InputMaskModule, PaginatorModule } from 'primeng/primeng';\nimport { TableModule } from 'primeng/table';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AuditLogDetailModalComponent } from './audit-logs/audit-log-detail-modal.component';\nimport { AuditLogsComponent } from './audit-logs/audit-logs.component';\nimport { EntityChangeDetailModalComponent } from './audit-logs/entity-change-detail-modal.component';\nimport { HostDashboardComponent } from './dashboard/host-dashboard.component';\nimport { DemoUiComponentsComponent } from './demo-ui-components/demo-ui-components.component';\nimport { DemoUiDateTimeComponent } from './demo-ui-components/demo-ui-date-time.component';\nimport { DemoUiEditorComponent } from './demo-ui-components/demo-ui-editor.component';\nimport { DemoUiFileUploadComponent } from './demo-ui-components/demo-ui-file-upload.component';\nimport { DemoUiInputMaskComponent } from './demo-ui-components/demo-ui-input-mask.component';\nimport { DemoUiSelectionComponent } from './demo-ui-components/demo-ui-selection.component';\nimport { CreateOrEditEditionModalComponent } from './editions/create-or-edit-edition-modal.component';\nimport { EditionsComponent } from './editions/editions.component';\nimport { InstallComponent } from './install/install.component';\nimport { CreateOrEditLanguageModalComponent } from './languages/create-or-edit-language-modal.component';\nimport { EditTextModalComponent } from './languages/edit-text-modal.component';\nimport { LanguageTextsComponent } from './languages/language-texts.component';\nimport { LanguagesComponent } from './languages/languages.component';\nimport { MaintenanceComponent } from './maintenance/maintenance.component';\nimport { CreateOrEditUnitModalComponent } from './organization-units/create-or-edit-unit-modal.component';\nimport { OrganizationTreeComponent } from './organization-units/organization-tree.component';\nimport { OrganizationUnitMembersComponent } from './organization-units/organization-unit-members.component';\nimport { OrganizationUnitsComponent } from './organization-units/organization-units.component';\nimport { CreateOrEditRoleModalComponent } from './roles/create-or-edit-role-modal.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { HostSettingsComponent } from './settings/host-settings.component';\nimport { TenantSettingsComponent } from './settings/tenant-settings.component';\nimport { EditionComboComponent } from './shared/edition-combo.component';\nimport { FeatureTreeComponent } from './shared/feature-tree.component';\nimport { OrganizationUnitsTreeComponent } from './shared/organization-unit-tree.component';\nimport { PermissionComboComponent } from './shared/permission-combo.component';\nimport { PermissionTreeComponent } from './shared/permission-tree.component';\nimport { RoleComboComponent } from './shared/role-combo.component';\nimport { InvoiceComponent } from './subscription-management/invoice/invoice.component';\nimport { SubscriptionManagementComponent } from './subscription-management/subscription-management.component';\nimport { CreateTenantModalComponent } from './tenants/create-tenant-modal.component';\nimport { EditTenantModalComponent } from './tenants/edit-tenant-modal.component';\nimport { TenantFeaturesModalComponent } from './tenants/tenant-features-modal.component';\nimport { TenantsComponent } from './tenants/tenants.component';\nimport { UiCustomizationComponent } from './ui-customization/ui-customization.component';\nimport { CreateOrEditUserModalComponent } from './users/create-or-edit-user-modal.component';\nimport { EditUserPermissionsModalComponent } from './users/edit-user-permissions-modal.component';\nimport { ImpersonationService } from './users/impersonation.service';\nimport { UsersComponent } from './users/users.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        FileUploadModule,\n        ModalModule.forRoot(),\n        TabsModule.forRoot(),\n        TooltipModule.forRoot(),\n        PopoverModule.forRoot(),\n        AdminRoutingModule,\n        UtilsModule,\n        AppCommonModule,\n        TableModule,\n        PaginatorModule,\n        PrimeNgFileUploadModule,\n        AutoCompleteModule,\n        EditorModule,\n        InputMaskModule\n    ],\n    declarations: [\n        UsersComponent,\n        PermissionComboComponent,\n        RoleComboComponent,\n        CreateOrEditUserModalComponent,\n        EditUserPermissionsModalComponent,\n        PermissionTreeComponent,\n        FeatureTreeComponent,\n        OrganizationUnitsTreeComponent,\n        RolesComponent,\n        CreateOrEditRoleModalComponent,\n        AuditLogsComponent,\n        AuditLogDetailModalComponent,\n        EntityChangeDetailModalComponent,\n        HostSettingsComponent,\n        InstallComponent,\n        MaintenanceComponent,\n        EditionsComponent,\n        CreateOrEditEditionModalComponent,\n        LanguagesComponent,\n        LanguageTextsComponent,\n        CreateOrEditLanguageModalComponent,\n        TenantsComponent,\n        CreateTenantModalComponent,\n        EditTenantModalComponent,\n        TenantFeaturesModalComponent,\n        CreateOrEditLanguageModalComponent,\n        EditTextModalComponent,\n        OrganizationUnitsComponent,\n        OrganizationTreeComponent,\n        OrganizationUnitMembersComponent,\n        CreateOrEditUnitModalComponent,\n        TenantSettingsComponent,\n        HostDashboardComponent,\n        EditionComboComponent,\n        InvoiceComponent,\n        SubscriptionManagementComponent,\n        AddMemberModalComponent,\n        DemoUiComponentsComponent,\n        DemoUiDateTimeComponent,\n        DemoUiSelectionComponent,\n        DemoUiFileUploadComponent,\n        DemoUiInputMaskComponent,\n        DemoUiEditorComponent,\n        UiCustomizationComponent\n    ],\n    exports: [\n        AddMemberModalComponent\n    ],\n    providers: [\n        ImpersonationService\n    ]\n})\nexport class AdminModule { }\n","module.exports = \"<div bsModal #auditLogDetailModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"auditLogDetailModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <form *ngIf=\\\"active\\\" #roleForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">\\n                        <span *ngIf=\\\"auditLog.userId\\\">{{l(\\\"AuditLogDetail\\\")}}</span>\\n                    </h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <h3 class=\\\"form-section\\\">{{l(\\\"UserInformations\\\")}}</h3>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"UserName\\\")}}:\\n                                </label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <span>{{auditLog.userName}}</span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"IpAddress\\\")}}:\\n                                </label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <span>{{auditLog.ipAddress}}</span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"Client\\\")}}:\\n                                </label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <span>{{auditLog.clientName}}</span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"Browser\\\")}}:\\n                                </label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <span>{{auditLog.browserInfo}}</span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group m-form__group row\\\" *ngIf=\\\"auditLog.impersonatorUserId\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                </label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <span>{{AuditLogImpersonatedOperationInfo}}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <h3 class=\\\"form-section\\\">{{l(\\\"ActionInformations\\\")}}</h3>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"Service\\\")}}:\\n                                </label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <span>{{auditLog.serviceName}}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"Action\\\")}}:\\n                                </label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <span>{{auditLog.methodName}}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"Time\\\")}}:\\n                                </label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <span>{{getExecutionTime()}}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"Duration\\\")}}:\\n                                </label>\\n                                <div class=\\\"col-lg-9\\\">\\n                                    <span>{{getDurationAsMs()}}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"Parameters\\\")}}:\\n                                </label>\\n                                <div class=\\\"col-lg-9 alert m-alert m-alert--default\\\">\\n                                    <pre lang=\\\"js\\\">{{getFormattedParameters()}}</pre>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <h3 class=\\\"form-section\\\">{{l(\\\"CustomData\\\")}}</h3>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-lg-3 col-form-label\\\">\\n                                    {{l(\\\"None\\\")}}:\\n                                </label>\\n                                <div *ngIf=\\\"auditLog.customData\\\" class=\\\"col-lg-9 alert m-alert m-alert--default\\\">\\n                                    <pre>{{auditLog.customData}}</pre>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <h3 class=\\\"form-section\\\">{{l(\\\"ErrorState\\\")}}</h3>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label *ngIf=\\\"!auditLog.exception\\\" class=\\\"col-lg-12 col-form-label\\\">\\n                                    <i class=\\\"fa fa-check-circle m--font-success\\\"></i> {{l(\\\"Success\\\")}}\\n                                </label>\\n                                <div *ngIf=\\\"auditLog.exception\\\" class=\\\"col-lg-12 alert m-alert m-alert--default\\\">\\n                                    <pre>{{auditLog.exception}}</pre>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { AuditLogListDto } from '@shared/service-proxies/service-proxies';\nimport * as moment from 'moment';\nimport { ModalDirective } from 'ngx-bootstrap';\n\n@Component({\n    selector: 'auditLogDetailModal',\n    templateUrl: './audit-log-detail-modal.component.html'\n})\nexport class AuditLogDetailModalComponent extends AppComponentBase {\n\n    @ViewChild('auditLogDetailModal') modal: ModalDirective;\n\n    active = false;\n    auditLog: AuditLogListDto;\n\n    constructor(\n        injector: Injector\n    ) {\n        super(injector);\n    }\n\n    getExecutionTime(): string {\n        const self = this;\n        return moment(self.auditLog.executionTime).fromNow() + ' (' + moment(self.auditLog.executionTime).format('YYYY-MM-DD HH:mm:ss') + ')';\n    }\n\n    getDurationAsMs(): string {\n        const self = this;\n        return self.l('Xms', self.auditLog.executionDuration);\n    }\n\n    getFormattedParameters(): string {\n        const self = this;\n        try {\n            const json = JSON.parse(self.auditLog.parameters);\n            return JSON.stringify(json, null, 4);\n        } catch (e) {\n            return self.auditLog.parameters;\n        }\n    }\n\n    show(record: AuditLogListDto): void {\n        const self = this;\n        self.active = true;\n        self.auditLog = record;\n\n        self.modal.show();\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n\\n\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto col-sm-6\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"AuditLogs\\\")}}</span>\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n\\n                <div id=\\\"SettingsTabPanel\\\" class=\\\"tabbable-line\\\">\\n\\n                    <ul class=\\\"nav nav-tabs  m-tabs-line\\\" role=\\\"tablist\\\">\\n                        <li class=\\\"nav-item m-tabs__item\\\">\\n                            <a href=\\\"#AuditLogsTab\\\" class=\\\"nav-link m-tabs__link active\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\">\\n                                {{l(\\\"OperationLogs\\\")}}\\n                            </a>\\n                        </li>\\n                        <li class=\\\"nav-item m-tabs__item\\\">\\n                            <a href=\\\"#EntityChangesTab\\\" class=\\\"nav-link m-tabs__link\\\" data-toggle=\\\"tab\\\" role=\\\"tab\\\">\\n                                {{l(\\\"ChangeLogs\\\")}}\\n                            </a>\\n                        </li>\\n                    </ul>\\n\\n                    <div class=\\\"tab-content\\\">\\n                        <div class=\\\"tab-content\\\">\\n                            <div class=\\\"tab-pane active\\\" id=\\\"AuditLogsTab\\\" role=\\\"tabpanel\\\">\\n\\n                                <div class=\\\"row margin-bottom-10\\\">\\n                                    <div class=\\\"col-sm-12 text-right\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"exportToExcelAuditLogs()\\\"><i class=\\\"fa fa-file-excel-o\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-metal\\\" (click)=\\\"getAuditLogs()\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"m-form m-form--label-align-right\\\">\\n                                    <form class=\\\"horizontal-form\\\" #auditFilterForm=\\\"ngForm\\\" (ngSubmit)=\\\"getAuditLogs()\\\">\\n                                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"StartEndRange\\\" class=\\\"control-label\\\">{{l(\\\"DateRange\\\")}}</label>\\n                                                    <date-range-picker id=\\\"StartEndRange\\\" [(startDate)]=\\\"startDate\\\" [(endDate)]=\\\"endDate\\\"></date-range-picker>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"UsernameAuditLog\\\" class=\\\"control-label\\\">{{l(\\\"UserName\\\")}}</label>\\n                                                    <input id=\\\"UsernameAuditLog\\\" type=\\\"text\\\" name=\\\"UsernameAuditLog\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"usernameAuditLog\\\">\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div *ngIf=\\\"advancedFiltersAreShown\\\" class=\\\"row\\\">\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"ServiceName\\\" class=\\\"control-label\\\">{{l(\\\"Service\\\")}}</label>\\n                                                    <input id=\\\"ServiceName\\\" name=\\\"ServiceName\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"serviceName\\\">\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <label class=\\\"control-label\\\" style=\\\"display: block\\\">{{l(\\\"Duration\\\")}}</label>\\n                                                <div class=\\\"input-group\\\" style=\\\"width: 250px !important;\\\">\\n                                                    <input type=\\\"text\\\" name=\\\"MinExecutionDuration\\\" only-number=\\\"\\\" class=\\\"form-control\\\" min=\\\"0\\\" max=\\\"86400000\\\" ng-minlength=\\\"0\\\" ng-maxlength=\\\"8\\\" [(ngModel)]=\\\"minExecutionDuration\\\">\\n                                                    <span class=\\\"input-group-addon\\\">\\n                                                        ---\\n                                                    </span>\\n                                                    <input type=\\\"text\\\" name=\\\"MaxExecutionDuration\\\" only-number=\\\"\\\" class=\\\"form-control\\\" min=\\\"0\\\" max=\\\"86400000\\\" ng-minlength=\\\"0\\\" ng-maxlength=\\\"8\\\" [(ngModel)]=\\\"maxExecutionDuration\\\">\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"MethodName\\\" class=\\\"control-label\\\">{{l(\\\"Action\\\")}}</label>\\n                                                    <input id=\\\"MethodName\\\" type=\\\"text\\\" name=\\\"MethodName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"methodName\\\">\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"HasException\\\" class=\\\"control-label\\\">{{l(\\\"ErrorState\\\")}}</label>\\n                                                    <select id=\\\"HasException\\\" name=\\\"HasException\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"hasException\\\">\\n                                                        <option value=\\\"\\\">{{l(\\\"All\\\")}}</option>\\n                                                        <option value=\\\"false\\\">{{l(\\\"Success\\\")}}</option>\\n                                                        <option value=\\\"true\\\">{{l(\\\"HasError\\\")}}</option>\\n                                                    </select>\\n                                                </div>\\n                                            </div>\\n\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"BrowserInfo\\\" class=\\\"control-label\\\">{{l(\\\"Browser\\\")}}</label>\\n                                                    <input id=\\\"BrowserInfo\\\" type=\\\"text\\\" name=\\\"BrowserInfo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"browserInfo\\\">\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row m--margin-bottom-10\\\">\\n                                            <div class=\\\"col-sm-6\\\">\\n                                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\n                                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\n                                            </div>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"row align-items-center\\\">\\n                                    <!--<Primeng-TurboTable-Start>-->\\n                                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelperAuditLogs.isLoading\\\">\\n                                        <p-table #dataTableAuditLogs\\n                                                     (onLazyLoad)=\\\"getAuditLogs($event)\\\"\\n                                                     [value]=\\\"primengTableHelperAuditLogs.records\\\"\\n                                                     rows=\\\"{{primengTableHelperAuditLogs.defaultRecordsCountPerPage}}\\\"\\n                                                     [paginator]=\\\"false\\\"\\n                                                     [lazy]=\\\"true\\\"\\n                                                     scrollable=\\\"true\\\"\\n                                                     ScrollWidth=\\\"100%\\\"\\n                                                     responsive=\\\"primengTableHelperAuditLogs.isResponsive\\\"\\n                                                     resizableColumns=\\\"primengTableHelperAuditLogs.resizableColumns\\\">\\n                                            <ng-template pTemplate=\\\"header\\\">\\n                                                <tr>\\n                                                    <th style=\\\"width:75px\\\"></th>\\n                                                    <th style=\\\"width:75px\\\"></th>\\n                                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"executionTime\\\">\\n                                                        {{l('Time')}}\\n                                                        <p-sortIcon field=\\\"executionTime\\\"></p-sortIcon>\\n                                                    </th>\\n                                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"userName\\\">\\n                                                        {{l('UserName')}}\\n                                                        <p-sortIcon field=\\\"userName\\\"></p-sortIcon>\\n                                                    </th>\\n                                                    <th style=\\\"width: 250px\\\">\\n                                                        {{l('Service')}}\\n                                                    </th>\\n                                                    <th style=\\\"width: 250px\\\">\\n                                                        {{l('Action')}}\\n                                                    </th>\\n                                                    <th style=\\\"width: 100px\\\" pSortableColumn=\\\"executionDuration\\\">\\n                                                        {{l('Duration')}}\\n                                                        <p-sortIcon field=\\\"executionDuration\\\"></p-sortIcon>\\n                                                    </th>\\n                                                    <th style=\\\"width: 150px\\\">\\n                                                        {{l('IpAddress')}}\\n                                                    </th>\\n                                                    <th style=\\\"width: 150px\\\">\\n                                                        {{l('Client')}}\\n                                                    </th>\\n                                                    <th style=\\\"width: 150px\\\">\\n                                                        {{l('Browser')}}\\n                                                    </th>\\n                                                </tr>\\n                                            </ng-template>\\n                                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                                <tr>\\n                                                    <td style=\\\"width: 75px\\\">\\n                                                        <div class=\\\"text-center\\\">\\n                                                            <button class=\\\"btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill\\\" (click)=\\\"showAuditLogDetails(record)\\\"><i class=\\\"la la-search\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\n                                                        </div>\\n                                                    </td>\\n                                                    <td style=\\\"width: 75px\\\">\\n                                                        <div class=\\\"text-center\\\">\\n                                                            <i *ngIf=\\\"record.exception\\\" class=\\\"fa fa-warning m--font-warning\\\"></i>\\n                                                            <i *ngIf=\\\"!record.exception\\\" class=\\\"fa fa-check-circle m--font-success\\\"></i>\\n                                                        </div>\\n                                                    </td>\\n                                                    <td style=\\\"width: 150px\\\">\\n                                                        {{ record.executionTime | momentFormat:'YYYY-MM-DD HH:mm:ss'}}\\n                                                    </td>\\n                                                    <td style=\\\"width: 150px\\\">\\n                                                        {{record.userName}}\\n                                                    </td>\\n                                                    <td style=\\\"width: 250px\\\">\\n                                                        {{record.serviceName}}\\n                                                    </td>\\n                                                    <td style=\\\"width: 250px\\\">\\n                                                        {{record.methodName}}\\n                                                    </td>\\n                                                    <td style=\\\"width: 100px\\\">\\n                                                        {{l('Xms', record.executionDuration)}}\\n                                                    </td>\\n                                                    <td style=\\\"width: 150px\\\">\\n                                                        {{record.clientIpAddress}}\\n                                                    </td>\\n                                                    <td style=\\\"width: 150px\\\">\\n                                                        {{record.clientName}}\\n                                                    </td>\\n                                                    <td style=\\\"width: 150px\\\">\\n                                                        <span title=\\\"{{record.browserInfo}}\\\">{{truncateStringWithPostfix(record.browserInfo, 20)}}</span>\\n                                                    </td>\\n                                                </tr>\\n                                            </ng-template>\\n                                        </p-table>\\n                                        <div class=\\\"primeng-paging-container\\\">\\n                                            <p-paginator rows=\\\"{{primengTableHelperAuditLogs.defaultRecordsCountPerPage}}\\\"\\n                                                         #paginatorAuditLogs\\n                                                         (onPageChange)=\\\"getAuditLogs($event)\\\"\\n                                                         [totalRecords]=\\\"primengTableHelperAuditLogs.totalRecordsCount\\\"\\n                                                         [rowsPerPageOptions]=\\\"primengTableHelperAuditLogs.predefinedRecordsCountPerPage\\\">\\n                                            </p-paginator>\\n                                            <span class=\\\"total-records-count\\\">\\n                                                {{l('TotalRecordsCount', primengTableHelperAuditLogs.totalRecordsCount)}}\\n                                            </span>\\n                                        </div>\\n                                    </div>\\n                                    <!--<Primeng-TurboTable-End>-->\\n                                </div>\\n                            </div>\\n                            <div class=\\\"tab-pane\\\" id=\\\"EntityChangesTab\\\" role=\\\"tabpanel\\\">\\n                                <div class=\\\"row margin-bottom-10\\\">\\n                                    <div class=\\\"col-sm-12 text-right\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"exportToExcelEntityChanges()\\\"><i class=\\\"fa fa-file-excel-o\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-metal\\\" (click)=\\\"getEntityChanges()\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"m-form m-form--label-align-right\\\">\\n                                    <form class=\\\"horizontal-form\\\" #entityChangeFilterForm=\\\"ngForm\\\" (ngSubmit)=\\\"getEntityChanges()\\\">\\n                                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"StartEndRangeEntityChange\\\" class=\\\"control-label\\\">{{l(\\\"DateRange\\\")}}</label>\\n                                                    <date-range-picker id=\\\"StartEndRangeEntityChange\\\" [(startDate)]=\\\"startDate\\\" [(endDate)]=\\\"endDate\\\"></date-range-picker>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"UserNameEntityChange\\\" class=\\\"control-label\\\">{{l(\\\"UserName\\\")}}</label>\\n                                                    <input id=\\\"UserNameEntityChange\\\" type=\\\"text\\\" name=\\\"UserNameEntityChange\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"usernameEntityChange\\\">\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label for=\\\"EntityTypeFullName\\\" class=\\\"control-label\\\">{{l(\\\"Object\\\")}}</label>\\n\\n                                                    <select id=\\\"EntityTypeFullName\\\" name=\\\"EntityTypeFullName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"entityTypeFullName\\\">\\n                                                        <option value=\\\"\\\" selected=\\\"selected\\\">{{l(\\\"All\\\")}}</option>\\n                                                        <option *ngFor=\\\"let objectType of objectTypes\\\" [value]=\\\"objectType.value\\\">{{objectType.name}}</option>\\n                                                    </select>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </form>\\n                                </div>\\n\\n                                <div class=\\\"row align-items-center\\\">\\n                                    <!--<Primeng-TurboTable-Start>-->\\n                                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelperEntityChanges.isLoading\\\">\\n                                        <p-table #dataTableEntityChanges\\n                                                     (onLazyLoad)=\\\"getEntityChanges($event)\\\"\\n                                                     [value]=\\\"primengTableHelperEntityChanges.records\\\"\\n                                                     rows=\\\"{{primengTableHelperEntityChanges.defaultRecordsCountPerPage}}\\\"\\n                                                     [paginator]=\\\"false\\\"\\n                                                     [lazy]=\\\"true\\\"\\n                                                     scrollable=\\\"true\\\"\\n                                                     ScrollWidth=\\\"100%\\\"\\n                                                     responsive=\\\"primengTableHelperEntityChanges.isResponsive\\\"\\n                                                     resizableColumns=\\\"primengTableHelperEntityChanges.resizableColumns\\\">\\n                                            <ng-template pTemplate=\\\"header\\\">\\n                                                <tr>\\n                                                    <th style=\\\"width: 40px\\\">\\n                                                        \\n                                                    </th>\\n                                                    <th style=\\\"width: 150px\\\">\\n                                                        {{l('Action')}}\\n                                                    </th>\\n                                                    <th style=\\\"width: 250px\\\">\\n                                                        {{l('Object')}}\\n                                                    </th>\\n                                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"userName\\\">\\n                                                        {{l('UserName')}}\\n                                                        <p-sortIcon field=\\\"userName\\\"></p-sortIcon>\\n                                                    </th>\\n                                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"changeTime\\\">\\n                                                        {{l('Time')}}\\n                                                        <p-sortIcon field=\\\"changeTime\\\"></p-sortIcon>\\n                                                    </th>\\n                                                </tr>\\n                                            </ng-template>\\n                                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                                <tr>\\n                                                    <td style=\\\"width: 40px\\\">\\n                                                        <div class=\\\"text-center\\\">\\n                                                            <button class=\\\"btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill\\\" (click)=\\\"showEntityChangeDetails(record)\\\"><i class=\\\"la la-search\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\n                                                        </div>\\n                                                    </td>\\n                                                    <td style=\\\"width: 150px\\\">\\n                                                        <span title=\\\"{{record.changeTypeName}}\\\">{{l(record.changeTypeName)}}</span>\\n                                                    </td>\\n                                                    <td style=\\\"width: 250px\\\">\\n                                                        {{record.entityTypeFullName}}\\n                                                    </td>\\n                                                    <td style=\\\"width: 150px\\\">\\n                                                        {{record.userName}}\\n                                                    </td>\\n                                                    <td style=\\\"width: 150px\\\">\\n                                                        {{ record.changeTime | momentFormat:'YYYY-MM-DD HH:mm:ss'}}\\n                                                    </td>\\n                                                </tr>\\n                                            </ng-template>\\n                                        </p-table>\\n                                        <div class=\\\"primeng-paging-container\\\">\\n                                            <p-paginator rows=\\\"{{primengTableHelperEntityChanges.defaultRecordsCountPerPage}}\\\"\\n                                                         #paginatorEntityChanges\\n                                                         (onPageChange)=\\\"getEntityChanges($event)\\\"\\n                                                         [totalRecords]=\\\"primengTableHelperEntityChanges.totalRecordsCount\\\"\\n                                                         [rowsPerPageOptions]=\\\"primengTableHelperEntityChanges.predefinedRecordsCountPerPage\\\">\\n                                            </p-paginator>\\n                                            <span class=\\\"total-records-count\\\">\\n                                                {{l('TotalRecordsCount', primengTableHelperEntityChanges.totalRecordsCount)}}\\n                                            </span>\\n                                        </div>\\n                                    </div>\\n                                    <!--<Primeng-TurboTable-End>-->\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <auditLogDetailModal #auditLogDetailModal></auditLogDetailModal>\\n    <entityChangeDetailModal #entityChangeDetailModal></entityChangeDetailModal>\\n</div>\\n\"","module.exports = \".audit-log-detail-view h3.form-section {\\n  margin-top: 5px;\\n}\\n.audit-log-detail-view .form-group {\\n  margin-bottom: 0;\\n}\\n.audit-log-detail-view .form-group p.form-control-static {\\n  margin: 0;\\n}\\n.audit-log-detail-view .form-group .control-label {\\n  font-weight: bold;\\n}\\n\"","import { NotifyService } from '@abp/notify/notify.service';\nimport { Component, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { AuditLogDetailModalComponent } from '@app/admin/audit-logs/audit-log-detail-modal.component';\nimport { EntityChangeDetailModalComponent } from '@app/admin/audit-logs/entity-change-detail-modal.component';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { AuditLogListDto, AuditLogServiceProxy, EntityChangeListDto, NameValueDto } from '@shared/service-proxies/service-proxies';\nimport { FileDownloadService } from '@shared/utils/file-download.service';\nimport * as moment from 'moment';\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\nimport { Paginator } from 'primeng/components/paginator/paginator';\nimport { Table } from 'primeng/components/table/table';\nimport { PrimengTableHelper } from 'shared/helpers/PrimengTableHelper';\n\n@Component({\n    templateUrl: './audit-logs.component.html',\n    styleUrls: ['./audit-logs.component.less'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [appModuleAnimation()]\n})\nexport class AuditLogsComponent extends AppComponentBase {\n\n    @ViewChild('auditLogDetailModal') auditLogDetailModal: AuditLogDetailModalComponent;\n    @ViewChild('entityChangeDetailModal') entityChangeDetailModal: EntityChangeDetailModalComponent;\n    @ViewChild('dataTableAuditLogs') dataTableAuditLogs: Table;\n    @ViewChild('dataTableEntityChanges') dataTableEntityChanges: Table;\n    @ViewChild('paginatorAuditLogs') paginatorAuditLogs: Paginator;\n    @ViewChild('paginatorEntityChanges') paginatorEntityChanges: Paginator;\n\n    //Filters\n    public startDate: moment.Moment = moment().startOf('day');\n    public endDate: moment.Moment = moment().endOf('day');\n    public usernameAuditLog: string;\n    public usernameEntityChange: string;\n    public serviceName: string;\n    public methodName: string;\n    public browserInfo: string;\n    public hasException: boolean = undefined;\n    public minExecutionDuration: number;\n    public maxExecutionDuration: number;\n    public entityTypeFullName: string;\n    public objectTypes: NameValueDto[];\n\n    primengTableHelperAuditLogs = new PrimengTableHelper();\n    primengTableHelperEntityChanges = new PrimengTableHelper();\n    advancedFiltersAreShown = false;\n\n    constructor(\n        injector: Injector,\n        private _auditLogService: AuditLogServiceProxy,\n        private _notifyService: NotifyService,\n        private _fileDownloadService: FileDownloadService\n    ) {\n        super(injector);\n    }\n\n    showAuditLogDetails(record: AuditLogListDto): void {\n        this.auditLogDetailModal.show(record);\n    }\n\n    showEntityChangeDetails(record: EntityChangeListDto): void {\n        this.entityChangeDetailModal.show(record);\n    }\n\n    getAuditLogs(event?: LazyLoadEvent) {\n        if (this.primengTableHelperAuditLogs.shouldResetPaging(event)) {\n            this.paginatorAuditLogs.changePage(0);\n\n            return;\n        }\n\n        this.primengTableHelperAuditLogs.showLoadingIndicator();\n\n        this._auditLogService.getAuditLogs(\n            this.startDate,\n            this.endDate,\n            this.usernameAuditLog,\n            this.serviceName,\n            this.methodName,\n            this.browserInfo,\n            this.hasException,\n            this.minExecutionDuration,\n            this.maxExecutionDuration,\n            this.primengTableHelperAuditLogs.getSorting(this.dataTableAuditLogs),\n            this.primengTableHelperAuditLogs.getMaxResultCount(this.paginatorAuditLogs, event),\n            this.primengTableHelperAuditLogs.getSkipCount(this.paginatorAuditLogs, event)\n        ).subscribe((result) => {\n            this.primengTableHelperAuditLogs.totalRecordsCount = result.totalCount;\n            this.primengTableHelperAuditLogs.records = result.items;\n            this.primengTableHelperAuditLogs.hideLoadingIndicator();\n        });\n    }\n\n    getEntityChanges(event?: LazyLoadEvent) {\n        this._auditLogService.getEntityHistoryObjectTypes()\n            .subscribe((result) => {\n                this.objectTypes = result;\n            });\n\n        if (this.primengTableHelperEntityChanges.shouldResetPaging(event)) {\n            this.paginatorEntityChanges.changePage(0);\n\n            return;\n        }\n\n        this.primengTableHelperEntityChanges.showLoadingIndicator();\n\n        this._auditLogService.getEntityChanges(\n            this.startDate,\n            this.endDate,\n            this.usernameEntityChange,\n            this.entityTypeFullName,\n            this.primengTableHelperEntityChanges.getSorting(this.dataTableEntityChanges),\n            this.primengTableHelperEntityChanges.getMaxResultCount(this.paginatorEntityChanges, event),\n            this.primengTableHelperEntityChanges.getSkipCount(this.paginatorEntityChanges, event)\n        ).subscribe((result) => {\n            this.primengTableHelperEntityChanges.totalRecordsCount = result.totalCount;\n            this.primengTableHelperEntityChanges.records = result.items;\n            this.primengTableHelperEntityChanges.hideLoadingIndicator();\n        });\n    }\n\n    exportToExcelAuditLogs(): void {\n        const self = this;\n        self._auditLogService.getAuditLogsToExcel(\n            self.startDate,\n            self.endDate,\n            self.usernameAuditLog,\n            self.serviceName,\n            self.methodName,\n            self.browserInfo,\n            self.hasException,\n            self.minExecutionDuration,\n            self.maxExecutionDuration,\n            undefined,\n            1,\n            0)\n            .subscribe(result => {\n                self._fileDownloadService.downloadTempFile(result);\n            });\n    }\n\n    exportToExcelEntityChanges(): void {\n        const self = this;\n        self._auditLogService.getEntityChangesToExcel(\n            self.startDate,\n            self.endDate,\n            self.usernameEntityChange,\n            self.entityTypeFullName,\n            undefined,\n            1,\n            0)\n            .subscribe(result => {\n                self._fileDownloadService.downloadTempFile(result);\n            });\n    }\n\n    truncateStringWithPostfix(text: string, length: number): string {\n        return abp.utils.truncateStringWithPostfix(text, length);\n    }\n}\n","module.exports = \"<div bsModal #entityChangeDetailModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"entityChangeDetailModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <div *ngIf=\\\"entityChange\\\" class=\\\"modal-header\\\">\\n                <h4 class=\\\"modal-title\\\">\\n                    <span>{{l(\\\"Detail\\\")}} - {{l(entityChange.entityTypeFullName)}}</span> <br />\\n                    <small [innerHTML]=\\\"l('CreatedAtByUser', entityChange.changeTime, entityChange.userName)\\\"></small>\\n                </h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <table id=\\\"EntityPropertyChangesTable\\\" class=\\\"display table table-striped table-bordered table-hover dt-responsive\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>{{l(\\\"Property\\\")}}</th>\\n                            <th>{{l(\\\"OriginalValue\\\")}}</th>\\n                            <th>{{l(\\\"NewValue\\\")}}</th>\\n                        </tr>\\n                        <tr *ngFor=\\\"let propertyChange of entityPropertyChanges\\\">\\n                            <td><strong>{{propertyChange.propertyName}}</strong></td>\\n\\n                            <td>{{getPropertyChangeValue(propertyChange.originalValue, propertyChange.propertyTypeFullName)}}</td>\\n                            <td>{{getPropertyChangeValue(propertyChange.newValue, propertyChange.propertyTypeFullName)}}</td>\\n                        </tr>\\n                    </thead>\\n                </table>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Close\\\")}}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { AuditLogServiceProxy, EntityChangeListDto, EntityPropertyChangeDto } from '@shared/service-proxies/service-proxies';\nimport * as moment from 'moment';\nimport { ModalDirective } from 'ngx-bootstrap';\n\n@Component({\n    selector: 'entityChangeDetailModal',\n    templateUrl: './entity-change-detail-modal.component.html'\n})\nexport class EntityChangeDetailModalComponent extends AppComponentBase {\n\n    @ViewChild('entityChangeDetailModal')\n    modal: ModalDirective;\n\n    active = false;\n    entityPropertyChanges: EntityPropertyChangeDto[];\n    entityChange: EntityChangeListDto;\n\n    constructor(\n        injector: Injector,\n        private _auditLogService: AuditLogServiceProxy\n    ) {\n        super(injector);\n    }\n\n    getPropertyChangeValue(propertyChangeValue, propertyTypeFullName) {\n        if (!propertyChangeValue) {\n            return propertyChangeValue;\n        }\n        propertyChangeValue = propertyChangeValue.replace(/^['\"]+/g, '').replace(/['\"]+$/g, '');\n        if (this.isDate(propertyChangeValue, propertyTypeFullName)) {\n            return moment(propertyChangeValue).format('YYYY-MM-DD HH:mm:ss');\n        }\n\n        if (propertyChangeValue === 'null') {\n            return '';\n        }\n\n        return propertyChangeValue;\n    }\n\n    isDate(date, propertyTypeFullName): boolean {\n        return propertyTypeFullName.includes(\"DateTime\") && !isNaN(Date.parse(date).valueOf());\n    }\n\n    show(record: EntityChangeListDto): void {\n        const self = this;\n        self.active = true;\n        self.entityChange = record;\n\n        this._auditLogService.getEntityPropertyChanges(record.id).subscribe((result) => {\n            self.entityPropertyChanges = result;\n        });\n\n        self.modal.show();\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div id=\\\"HostDashboard\\\">\\n        <div class=\\\"m-subheader\\\">\\n            <div class=\\\"d-flex align-items-center\\\">\\n                <div class=\\\"mr-auto\\\">\\n                    <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                        <span>{{l(\\\"Dashboard\\\")}}</span>\\n                    </h3>\\n                    <span class=\\\"m-section__sub\\\">\\n                        {{l(\\\"HostDashboardHeaderInfo\\\")}}\\n                    </span>\\n                </div>\\n                <div>\\n                    <button name=\\\"RefreshButton\\\" class=\\\"btn btn-primary\\\" (click)=\\\"getDashboardStatisticsData()\\\"><i class=\\\"la la-refresh\\\"></i>{{l(\\\"Refresh\\\")}}</button>\\n                    <span #DashboardDateRangePicker class=\\\"m-subheader__daterange dashboard-report-range\\\">\\n                        <span class=\\\"m-subheader__daterange-label\\\">\\n                            <span class=\\\"m-subheader__daterange-title\\\"></span>\\n                            <span class=\\\"m-subheader__daterange-date m--font-brand\\\">\\n                                {{selectedDateRange.startDate.format('LL')}} - {{selectedDateRange.endDate.format('LL')}}\\n                            </span>\\n                        </span>\\n                        <a href=\\\"javascript:;\\\" class=\\\"btn btn-sm btn-brand m-btn m-btn--icon m-btn--icon-only m-btn--custom m-btn--pill\\\">\\n                            <i class=\\\"la la-angle-down\\\" [attr.aria-label]=\\\"l('Expand')\\\"></i>\\n                        </a>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"m-content\\\">\\n            <div class=\\\"m-portlet\\\">\\n                <div class=\\\"m-portlet__body  m-portlet__body--no-padding\\\">\\n                    <div class=\\\"row m-row--no-padding m-row--col-separator-xl\\\">\\n                        <div class=\\\"col-md-12 col-lg-6 col-xl-3\\\">\\n                            <div class=\\\"m-widget24 new-subscription-statistics\\\">\\n                                <div class=\\\"m-widget24__item\\\">\\n                                    <h4 class=\\\"m-widget24__title\\\">\\n                                        {{l(\\\"NewSubscriptionAmount\\\")}}\\n                                    </h4>\\n                                    <br>\\n                                    <span class=\\\"m-widget24__desc\\\">\\n                                        {{(\\\"Subscriptions\\\")}}\\n                                    </span>\\n                                    <span class=\\\"m-widget24__stats m--font-brand\\\">\\n                                        $<span class=\\\"new-subscription-amount counterup\\\">\\n                                            {{hostDashboardData != null ? hostDashboardData.newSubscriptionAmount : \\\"...\\\"}}\\n                                        </span>\\n                                    </span>\\n                                    <div class=\\\"m--space-10\\\"></div>\\n                                    <div class=\\\"progress m-progress--sm\\\">\\n                                        <div class=\\\"progress-bar m--bg-brand\\\" role=\\\"progressbar\\\" style=\\\"width: 100%;\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n                                    </div>\\n                                    <span class=\\\"m-widget24__change\\\">\\n                                        <div class=\\\"status-title\\\">\\n                                            {{selectedDateRange.startDate.format('L')}} - {{selectedDateRange.endDate.format('L')}}\\n                                        </div>\\n                                    </span>\\n                                    <span class=\\\"m-widget24__number\\\">\\n                                    </span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-12 col-lg-6 col-xl-3\\\">\\n                            <div class=\\\"m-widget24 new-tenants-statistics\\\">\\n                                <div class=\\\"m-widget24__item\\\">\\n                                    <h4 class=\\\"m-widget24__title\\\">\\n                                        {{l(\\\"NewTenants\\\")}}\\n                                    </h4>\\n                                    <br>\\n                                    <span class=\\\"m-widget24__desc\\\">\\n                                        {{l(\\\"Tenants\\\")}}\\n                                    </span>\\n                                    <span class=\\\"m-widget24__stats m--font-info new-tenants-count counterup\\\">\\n                                        {{hostDashboardData != null ? hostDashboardData.newTenantsCount : \\\"...\\\"}}\\n                                    </span>\\n                                    <div class=\\\"m--space-10\\\"></div>\\n                                    <div class=\\\"progress m-progress--sm\\\">\\n                                        <div class=\\\"progress-bar m--bg-info\\\" role=\\\"progressbar\\\" style=\\\"width: 100%;\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n                                    </div>\\n                                    <span class=\\\"m-widget24__change\\\">\\n                                        <div class=\\\"status-title\\\">\\n                                            {{selectedDateRange.startDate.format('L')}} - {{selectedDateRange.endDate.format('L')}}\\n                                        </div>\\n                                    </span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-12 col-lg-6 col-xl-3\\\">\\n                            <div class=\\\"m-widget24 dashboard-statistics1\\\">\\n                                <div class=\\\"m-widget24__item\\\">\\n                                    <h4 class=\\\"m-widget24__title\\\">\\n                                        {{l(\\\"DashboardSampleStatistics\\\")}} 1\\n                                    </h4>\\n                                    <br>\\n                                    <span class=\\\"m-widget24__desc\\\">\\n                                        {{l(\\\"DashboardSampleStatistics\\\")}}\\n                                    </span>\\n                                    <span class=\\\"m-widget24__stats m--font-danger dashboard-placeholder1 counterup\\\">\\n                                        {{hostDashboardData != null ? hostDashboardData.dashboardPlaceholder1 : \\\"...\\\"}}\\n                                    </span>\\n                                    <div class=\\\"m--space-10\\\"></div>\\n                                    <div class=\\\"progress m-progress--sm\\\">\\n                                        <div class=\\\"progress-bar m--bg-danger\\\" role=\\\"progressbar\\\" style=\\\"width: 45%;\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n                                    </div>\\n                                    <span class=\\\"m-widget24__change\\\">\\n                                        {{l(\\\"DashboardSampleStatisticsHelpText\\\")}}\\n                                    </span>\\n                                    <span class=\\\"m-widget24__number\\\">\\n                                        <span class=\\\"counterup\\\">45</span>%\\n                                    </span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-12 col-lg-6 col-xl-3\\\">\\n                            <div class=\\\"m-widget24 dashboard-statistics2\\\">\\n                                <div class=\\\"m-widget24__item\\\">\\n                                    <h4 class=\\\"m-widget24__title\\\">\\n                                        {{l(\\\"DashboardSampleStatistics\\\")}} 2\\n                                    </h4>\\n                                    <br>\\n                                    <span class=\\\"m-widget24__desc\\\">\\n                                        {{l(\\\"DashboardSampleStatistics\\\")}}\\n                                    </span>\\n                                    <span class=\\\"m-widget24__stats m--font-success dashboard-placeholder2 counterup\\\">\\n                                        {{hostDashboardData != null ? hostDashboardData.dashboardPlaceholder2 : \\\"...\\\"}}\\n                                    </span>\\n                                    <div class=\\\"m--space-10\\\"></div>\\n                                    <div class=\\\"progress m-progress--sm\\\">\\n                                        <div class=\\\"progress-bar m--bg-success\\\" role=\\\"progressbar\\\" style=\\\"width: 65%;\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n                                    </div>\\n                                    <span class=\\\"m-widget24__change\\\">\\n                                        {{l(\\\"DashboardSampleStatisticsHelpText\\\")}}\\n                                    </span>\\n                                    <span class=\\\"m-widget24__number\\\">\\n                                        <span class=\\\"counterup\\\">65</span>%\\n                                    </span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6 col-sm-12\\\">\\n                    <div class=\\\"m-portlet m-portlet--full-height income-statistics\\\">\\n                        <div class=\\\"m-portlet__head\\\">\\n                            <div class=\\\"m-portlet__head-caption\\\">\\n                                <div class=\\\"m-portlet__head-title\\\">\\n                                    <h3 class=\\\"m-portlet__head-text\\\">\\n                                        <i class=\\\"la la-line-chart m--font-info\\\"></i>\\n                                        <span class=\\\"caption-subject font-blue bold uppercase\\\">{{l(\\\"IncomeStatistics\\\")}}</span>\\n                                        <small>\\n                                            <span class=\\\"caption-helper\\\">\\n                                                {{selectedDateRange.startDate.format('L')}} - {{selectedDateRange.endDate.format('L')}}\\n                                            </span>\\n                                        </small>\\n                                    </h3>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"m-portlet__head-tools\\\">\\n                                <div class=\\\"btn-group btn-group-devided\\\" data-toggle=\\\"buttons\\\">\\n                                    <label class=\\\"btn m-btn--pill btn-secondary active\\\" (click)=\\\"incomeStatisticsDateIntervalChange(appIncomeStatisticsDateInterval.Daily)\\\">\\n                                        <input type=\\\"radio\\\"\\n                                               name=\\\"IncomeStatisticsDatePeriod\\\"\\n                                               class=\\\"toggle\\\"\\n                                               [value]=\\\"appIncomeStatisticsDateInterval.Daily\\\">\\n                                        {{l(\\\"Daily\\\")}}\\n                                    </label>\\n                                    <label class=\\\"btn m-btn--pill btn-secondary\\\" (click)=\\\"incomeStatisticsDateIntervalChange(appIncomeStatisticsDateInterval.Weekly)\\\">\\n                                        <input type=\\\"radio\\\"\\n                                               name=\\\"IncomeStatisticsDatePeriod\\\"\\n                                               class=\\\"toggle\\\"\\n                                               [value]=\\\"appIncomeStatisticsDateInterval.Weekly\\\">\\n                                        {{l(\\\"Weekly\\\")}}\\n                                    </label>\\n                                    <label class=\\\"btn m-btn--pill btn-secondary\\\" (click)=\\\"incomeStatisticsDateIntervalChange(appIncomeStatisticsDateInterval.Monthly)\\\">\\n                                        <input type=\\\"radio\\\"\\n                                               name=\\\"IncomeStatisticsDatePeriod\\\"\\n                                               class=\\\"toggle\\\"\\n                                               [value]=\\\"appIncomeStatisticsDateInterval.Monthly\\\">\\n                                        {{l(\\\"Monthly\\\")}}\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"m-portlet__body\\\">\\n                            <div #IncomeStatisticsChart\\n                                 class=\\\"chart income-statistics-chart\\\"\\n                                 [busyIf]=\\\"loadingIncomeStatistics\\\"\\n                                 [hidden]=\\\"!incomeStatisticsHasData\\\">\\n                            </div>\\n                            <div class=\\\"note note-info text-center chart\\\"\\n                                 [hidden]=\\\"incomeStatisticsHasData\\\">\\n                                <small class=\\\"text-muted\\\">{{l(\\\"NoData\\\")}}</small>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-6 col-sm-12\\\">\\n                    <div class=\\\"m-portlet m-portlet--full-height edition-statistics\\\">\\n                        <div class=\\\"m-portlet__head\\\">\\n                            <div class=\\\"m-portlet__head-caption\\\">\\n                                <div class=\\\"m-portlet__head-title\\\">\\n                                    <h3 class=\\\"m-portlet__head-text\\\">\\n                                        <i class=\\\"la la-pie-chart m--font-success\\\"></i>\\n                                        <span class=\\\"caption-subject font-green-seagreen\\\">{{l(\\\"EditionStatistics\\\")}}</span>\\n                                        <small>\\n                                            <span class=\\\"caption-helper\\\">\\n                                                {{selectedDateRange.startDate.format('L')}} - {{selectedDateRange.endDate.format('L')}}\\n                                            </span>\\n                                        </small>\\n                                    </h3>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"m-portlet__body\\\">\\n                            <div #EditionStatisticsChart\\n                                 class=\\\"edition-statistics-chart chart\\\"\\n                                 [hidden]=\\\"!editionStatisticsHasData\\\">\\n                            </div>\\n                            <div class=\\\"note note-info text-center text-muted \\\"\\n                                 [hidden]=\\\"editionStatisticsHasData\\\">\\n                                <small class=\\\"text-muted\\\">{{l(\\\"NoData\\\")}}</small>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\n                    <div class=\\\"m-portlet m-portlet--full-height expiring-tenants\\\">\\n                        <div class=\\\"m-portlet__head\\\">\\n                            <div class=\\\"m-portlet__head-caption\\\">\\n                                <div class=\\\"m-portlet__head-title\\\">\\n                                    <h3 class=\\\"m-portlet__head-text\\\">\\n                                        <i class=\\\"icon-graduation font-red-pink\\\"></i>\\n                                        <span class=\\\"caption-subject font-red-pink bold uppercase\\\">{{l(\\\"SubscriptionExpiringTenants\\\")}}</span><br />\\n                                        <small>\\n                                            <span class=\\\"caption-helper\\\" *ngIf=\\\"hostDashboardData\\\">\\n                                                {{l(\\\"ExpiringTenantsHelpText\\\", hostDashboardData.subscriptionEndAlertDayCount, hostDashboardData.maxExpiringTenantsShownCount)}}\\n                                            </span>\\n                                        </small>\\n                                    </h3>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"m-portlet__body\\\">\\n                            <div class=\\\"scroller chart m-scrollable\\\" data-always-visible=\\\"1\\\" data-rail-visible=\\\"0\\\" data-scrollable=\\\"true\\\">\\n                                <div class=\\\"primeng-datatable-container expiring-tenants-table\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                                    <p-table #ExpiringTenantsTable\\n                                                 [value]=\\\"expiringTenantsData\\\"\\n                                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                                 [paginator]=\\\"false\\\"\\n                                                 [lazy]=\\\"false\\\"\\n                                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\n                                        <ng-template pTemplate=\\\"header\\\">\\n                                            <tr>\\n                                                <th>{{l('TenantName')}}</th>\\n                                                <th>{{l('RemainingDay')}}</th>\\n                                            </tr>\\n                                        </ng-template>\\n                                        <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                            <tr>\\n                                                <td>{{record.tenantName}}</td>\\n                                                <td>{{record.remainingDayCount}}</td>\\n                                            </tr>\\n                                        </ng-template>\\n                                    </p-table>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"scroller-footer\\\">\\n                                <div class=\\\"btn-arrow-link pull-right\\\">\\n                                    <a href=\\\"javascript:;\\\" class=\\\"see-all-expiring-tenants\\\" (click)=\\\"gotoAllExpiringTenants()\\\">{{l(\\\"SeeAllRecords\\\")}}</a>\\n                                    <i class=\\\"icon-arrow-right\\\"></i>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\n                    <div class=\\\"m-portlet m-portlet--full-height recent-tenants\\\">\\n                        <div class=\\\"m-portlet__head\\\">\\n                            <div class=\\\"m-portlet__head-caption\\\">\\n                                <div class=\\\"m-portlet__head-title\\\">\\n                                    <h3 class=\\\"m-portlet__head-text\\\">\\n                                        <i class=\\\"icon-user-follow font-purple-soft\\\"></i>\\n                                        <span class=\\\"caption-subject font-purple-soft\\\">{{l(\\\"RecentTenants\\\")}}</span><br />\\n                                        <small>\\n                                            <span class=\\\"caption-helper\\\" *ngIf=\\\"hostDashboardData\\\">\\n                                                {{l(\\\"RecentTenantsHelpText\\\", hostDashboardData.recentTenantsDayCount, hostDashboardData.maxRecentTenantsShownCount)}}\\n                                            </span>\\n                                        </small>\\n                                    </h3>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"m-portlet__body\\\">\\n                            <div class=\\\"scroller chart m-scrollable\\\" data-always-visible=\\\"1\\\" data-rail-visible=\\\"0\\\" data-scrollable=\\\"true\\\">\\n                                <div class=\\\"primeng-datatable-container recent-tenants-table\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                                    <p-table #RecentTenantsTable\\n                                                 [value]=\\\"recentTenantsData\\\"\\n                                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                                 [paginator]=\\\"false\\\"\\n                                                 [lazy]=\\\"false\\\"\\n                                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\n                                        <ng-template pTemplate=\\\"header\\\">\\n                                            <tr>\\n                                                <th>{{l('TenantName')}}</th>\\n                                                <th>{{l('CreationTime')}}</th>\\n                                            </tr>\\n                                        </ng-template>\\n                                        <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                            <tr>\\n                                                <td>{{record.name}}</td>\\n                                                <td>{{ record.creationTime | momentFormat:'L LT'}}</td>\\n                                            </tr>\\n                                        </ng-template>\\n                                    </p-table>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"scroller-footer\\\">\\n                                <div class=\\\"btn-arrow-link pull-right\\\">\\n                                    <a href=\\\"javascript:;\\\" class=\\\"see-all-recent-tenants\\\" (click)=\\\"gotoAllRecentTenants()\\\">{{l(\\\"SeeAllRecords\\\")}}</a>\\n                                    <i class=\\\"icon-arrow-right\\\"></i>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"#HostDashboard div.chart {\\n  height: 260px;\\n  width: 100%;\\n}\\n#HostDashboard div.chart h3 small {\\n  padding-left: 0px !important;\\n}\\n#HostDashboard .expiring-tenants-table thead th {\\n  background-color: #E08283 !important;\\n  color: white;\\n}\\n#HostDashboard .recent-tenants-table thead th {\\n  background-color: #8877a9 !important;\\n  color: white;\\n}\\n#HostDashboard .expiring-tenants-table {\\n  color: green;\\n}\\n#HostDashboard div.pie-chart-label {\\n  border: 1px solid grey;\\n  font-size: 8pt;\\n  text-align: center;\\n  padding: 5px;\\n  color: white;\\n}\\n#HostDashboard div.portlet div.portlet-title div.caption div.caption-helper {\\n  margin-top: 5px;\\n}\\n#HostDashboard div.portlet div.portlet-title div.actions {\\n  padding: 0;\\n}\\n#HostDashboard div.portlet div.portlet-body {\\n  min-height: 330px;\\n}\\n#HostDashboard div.flot-x-axis > div {\\n  white-space: nowrap;\\n  -webkit-transform: translate(0px, 0) rotate(-25deg);\\n          transform: translate(0px, 0) rotate(-25deg);\\n  text-indent: -6%;\\n  -webkit-transform-origin: bottom;\\n          transform-origin: bottom;\\n}\\n#HostDashboard input[type=\\\"radio\\\"] {\\n  display: none;\\n}\\n#HostDashboard .portlet > .portlet-title > .caption > .caption-helper {\\n  font-size: 11px;\\n}\\n\"","import { AfterViewInit, Component, ElementRef, Injector, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DateTimeService } from '@app/shared/common/timing/date-time.service';\nimport { AppIncomeStatisticsDateInterval } from '@shared/AppEnums';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { HostDashboardData, HostDashboardServiceProxy } from '@shared/service-proxies/service-proxies';\nimport * as moment from 'moment';\nimport { Table } from 'primeng/components/table/table';\n\n@Component({\n    templateUrl: './host-dashboard.component.html',\n    styleUrls: ['./host-dashboard.component.less'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [appModuleAnimation()]\n})\nexport class HostDashboardComponent extends AppComponentBase implements AfterViewInit, OnInit {\n    @ViewChild('DashboardDateRangePicker') dateRangePickerElement: ElementRef;\n    @ViewChild('EditionStatisticsChart') editionStatisticsChart: ElementRef;\n    @ViewChild('IncomeStatisticsChart') incomeStatisticsChart: ElementRef;\n\n    @ViewChild('RecentTenantsTable') recentTenantsTable: Table;\n    @ViewChild('ExpiringTenantsTable') expiringTenantsTable: Table;\n\n    loading = false;\n    loadingIncomeStatistics = false;\n    isInitialized: boolean;\n    hostDashboardData: HostDashboardData;\n    initialStartDate: moment.Moment = moment().add(-7, 'days').startOf('day');\n    initialEndDate: moment.Moment = moment().endOf('day');\n    currency = '$';\n    appIncomeStatisticsDateInterval = AppIncomeStatisticsDateInterval;\n    selectedIncomeStatisticsDateInterval: number;\n    editionStatisticsHasData: boolean;\n    incomeStatisticsHasData: boolean;\n    selectedDateRange = {\n        startDate: this.initialStartDate,\n        endDate: this.initialEndDate\n    };\n\n    private _$editionsTable: JQuery;\n    expiringTenantsData = [];\n    recentTenantsData = [];\n\n    constructor(\n        injector: Injector,\n        private _dateTimeService: DateTimeService,\n        private _hostDashboardService: HostDashboardServiceProxy\n    ) {\n        super(injector);\n    }\n\n    init(): void {\n        this.selectedIncomeStatisticsDateInterval = AppIncomeStatisticsDateInterval.Daily;\n    }\n\n    ngOnInit(): void {\n        this.init();\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.createDateRangePicker();\n            this.getDashboardStatisticsData();\n            this.bindToolTipForIncomeStatisticsChart($(this.incomeStatisticsChart.nativeElement));\n            mApp.initScroller($('.m-scrollable'), {});\n        }, 0);\n    }\n\n    createDateRangePicker(): void {\n        $(this.dateRangePickerElement.nativeElement)\n            .daterangepicker(\n            $.extend(true, this._dateTimeService.createDateRangePickerOptions(), this.selectedDateRange),\n            (start, end, label) => {\n                this.selectedDateRange.startDate = start;\n                this.selectedDateRange.endDate = end;\n                this.getDashboardStatisticsData();\n            });\n    }\n\n    getDashboardStatisticsData(): void {\n        this.loading = true;\n        this._hostDashboardService\n            .getDashboardStatisticsData(\n            this.selectedIncomeStatisticsDateInterval,\n            this.selectedDateRange.startDate,\n            this.selectedDateRange.endDate\n            )\n            .subscribe(result => {\n                this.hostDashboardData = result;\n                this.drawEditionStatisticsData(result.editionStatistics);\n                this.drawIncomeStatisticsChart(result.incomeStatistics);\n                this.loadRecentTenantsTable(result.recentTenants);\n                this.loadExpiringTenantsTable(result.expiringTenants);\n                this.loading = false;\n            });\n    }\n\n    /*\n    * Edition statistics pie chart\n    */\n\n    normalizeEditionStatisticsData(data): Array<any> {\n        const colorPalette = ['#81A17E', '#BA9B7C', '#569BC6', '#e08283', '#888888'];\n        const chartData = new Array(data.length);\n        let pie: any;\n        for (let i = 0; i < data.length; i++) {\n            pie = {\n                label: data[i].label,\n                data: data[i].value\n            };\n\n            if (colorPalette[i]) {\n                pie.color = colorPalette[i];\n            }\n\n            chartData[i] = pie;\n        }\n\n        return chartData;\n    }\n\n    drawEditionStatisticsData(data): void {\n        this.editionStatisticsHasData = (data && data.length > 0);\n        if (!this.editionStatisticsHasData) {\n            return;\n        }\n\n        setTimeout(() => {\n            const self = this;\n            const normalizedData = this.normalizeEditionStatisticsData(data);\n\n            ($ as any).plot($(self.editionStatisticsChart.nativeElement), normalizedData, {\n                series: {\n                    pie: {\n                        show: true,\n                        innerRadius: 0.3,\n                        radius: 1,\n                        label: {\n                            show: true,\n                            radius: 1,\n                            formatter(label, series) {\n                                return '<div class=\\'pie-chart-label\\'>' + label + ' : ' + Math.round(series.percent) + '%</div>';\n                            },\n                            background: {\n                                opacity: 0.8\n                            }\n                        }\n                    }\n                },\n                legend: {\n                    show: false\n                },\n                grid: {\n                    hoverable: true,\n                    clickable: true\n                }\n            });\n        }, 0);\n    }\n\n    /*\n     * Income statistics line chart\n     */\n\n\n    normalizeIncomeStatisticsData(data): Array<any> {\n        const chartData = [];\n        for (let i = 0; i < data.length; i++) {\n            const point = new Array(2);\n            point[0] = moment(data[i].date).utc().valueOf();\n            point[1] = data[i].amount;\n            chartData.push(point);\n        }\n\n        return chartData;\n    }\n\n    drawIncomeStatisticsChart(data): void {\n        this.incomeStatisticsHasData = (data && data.length > 0);\n        if (!this.incomeStatisticsHasData) {\n            return;\n        }\n\n        const self = this;\n        const normalizedData = this.normalizeIncomeStatisticsData(data);\n        setTimeout(() => {\n            ($ as any).plot($(self.incomeStatisticsChart.nativeElement),\n                [{\n                    data: normalizedData,\n                    lines: {\n                        fill: 0.2,\n                        lineWidth: 1\n                    },\n                    color: ['#BAD9F5']\n                }, {\n                    data: normalizedData,\n                    points: {\n                        show: true,\n                        fill: true,\n                        radius: 4,\n                        fillColor: '#9ACAE6',\n                        lineWidth: 2\n                    },\n                    color: '#9ACAE6',\n                    shadowSize: 1\n                }, {\n                    data: normalizedData,\n                    lines: {\n                        show: true,\n                        fill: false,\n                        lineWidth: 3\n                    },\n                    color: '#9ACAE6',\n                    shadowSize: 0\n                }],\n                {\n                    xaxis: {\n                        mode: 'time',\n                        timeformat: this.l('ChartDateFormat'),\n                        minTickSize: [1, 'day'],\n                        font: {\n                            lineHeight: 20,\n                            style: 'normal',\n                            variant: 'small-caps',\n                            color: '#6F7B8A',\n                            size: 10\n                        }\n                    },\n                    yaxis: {\n                        ticks: 5,\n                        tickDecimals: 0,\n                        tickColor: '#eee',\n                        font: {\n                            lineHeight: 14,\n                            style: 'normal',\n                            variant: 'small-caps',\n                            color: '#6F7B8A'\n                        }\n                    },\n                    grid: {\n                        hoverable: true,\n                        clickable: false,\n                        tickColor: '#eee',\n                        borderColor: '#eee',\n                        borderWidth: 1,\n                        margin: {\n                            bottom: 20\n                        }\n                    }\n                });\n        }, 0);\n    }\n\n    incomeStatisticsDateIntervalChange(interval: number) {\n        this.selectedIncomeStatisticsDateInterval = interval;\n        this.refreshIncomeStatisticsData();\n    }\n\n    refreshIncomeStatisticsData(): void {\n        this.loadingIncomeStatistics = true;\n        this._hostDashboardService.getIncomeStatistics(\n            this.selectedIncomeStatisticsDateInterval,\n            this.selectedDateRange.startDate,\n            this.selectedDateRange.endDate)\n            .subscribe(result => {\n                this.drawIncomeStatisticsChart(result.incomeStatistics);\n                this.loadingIncomeStatistics = false;\n            });\n    }\n\n    bindToolTipForIncomeStatisticsChart(incomeStatisticsChartContainer: any): void {\n        let incomeStatisticsChartLastTooltipIndex = null;\n\n        const removeChartTooltipIfExists = () => {\n            const $chartTooltip = $('#chartTooltip');\n            if ($chartTooltip.length === 0) {\n                return;\n            }\n\n            $chartTooltip.remove();\n        };\n\n        const showChartTooltip = (x, y, label, value) => {\n            removeChartTooltipIfExists();\n            $('<div id=\\'chartTooltip\\' class=\\'chart-tooltip\\'>' + label + '<br/>' + value + '</div >')\n                .css({\n                    position: 'absolute',\n                    display: 'none',\n                    top: y - 60,\n                    left: x - 40,\n                    border: '0',\n                    padding: '2px 6px',\n                    opacity: '0.9'\n                })\n                .appendTo('body')\n                .fadeIn(200);\n        };\n\n        incomeStatisticsChartContainer.bind('plothover', (event, pos, item) => {\n            if (!item) {\n                return;\n            }\n\n            if (incomeStatisticsChartLastTooltipIndex !== item.dataIndex) {\n                let label = '';\n                const isSingleDaySelected = this.selectedDateRange.startDate.format('L') === this.selectedDateRange.endDate.format('L');\n                if (this.selectedIncomeStatisticsDateInterval === AppIncomeStatisticsDateInterval.Daily ||\n                    isSingleDaySelected) {\n                    label = moment(item.datapoint[0]).format('dddd, DD MMMM YYYY');\n                } else {\n                    const isLastItem = item.dataIndex === item.series.data.length - 1;\n                    label += moment(item.datapoint[0]).format('LL');\n                    if (isLastItem) {\n                        label += ' - ' + this.selectedDateRange.endDate.format('LL');\n                    } else {\n                        const nextItem = item.series.data[item.dataIndex + 1];\n                        label += ' - ' + moment(nextItem[0]).format('LL');\n                    }\n                }\n\n                incomeStatisticsChartLastTooltipIndex = item.dataIndex;\n                const value = this.l('IncomeWithAmount', '<strong>' + item.datapoint[1] + this.currency + '</strong>');\n                showChartTooltip(item.pageX, item.pageY, label, value);\n            }\n        });\n\n        incomeStatisticsChartContainer.bind('mouseleave', () => {\n            incomeStatisticsChartLastTooltipIndex = null;\n            removeChartTooltipIfExists();\n        });\n    }\n\n    /*\n     * Recent tenants\n     */\n\n    loadRecentTenantsTable(recentTenants): void {\n        this.recentTenantsData = recentTenants;\n    }\n\n    gotoAllRecentTenants(): void {\n        window.open(abp.appPath + 'app/admin/tenants?' +\n            'creationDateStart=' + encodeURIComponent(this.hostDashboardData.tenantCreationStartDate.format()));\n    }\n\n    /*\n     * Expiring tenants\n     */\n\n    loadExpiringTenantsTable(expiringTenants): void {\n        this.expiringTenantsData = expiringTenants;\n    }\n\n    gotoAllExpiringTenants(): void {\n        const url = abp.appPath +\n            'app/admin/tenants?' +\n            'subscriptionEndDateStart=' +\n            encodeURIComponent(this.hostDashboardData.subscriptionEndDateStart.format()) +\n            '&' +\n            'subscriptionEndDateEnd=' +\n            encodeURIComponent(this.hostDashboardData.subscriptionEndDateEnd.format());\n\n        window.open(url);\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto\\\">\\n                <h3 class=\\\"m-subheader__title\\\">\\n                    <span>{{l(\\\"DemoUiComponents\\\")}}</span>\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"col-lg-12 alert alert-success\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\"></button>\\n            {{l(\\\"DemoUiComponents_Info\\\")}}<br />\\n            <a href=\\\"http://keenthemes.com/metronic/preview/?demo=default\\\" class=\\\"alert-link\\\" target=\\\"_blank\\\">{{l(\\\"DemoUiComponents_Info_Metronic_Link_Text\\\")}}</a>\\n        </div>   \\n    \\n        <demo-ui-date-time #demoUiDateTime></demo-ui-date-time>\\n\\n        <demo-ui-file-upload #demoUiFileUpload></demo-ui-file-upload>\\n\\n        <demo-ui-selection #demoUiSelection></demo-ui-selection>\\n\\n        <demo-ui-input-mask #demoUiInputMask></demo-ui-input-mask>\\n\\n        <demo-ui-editor #demoUiEditor></demo-ui-editor>\\n    </div>\\n</div>\\n\\n\"","import { Component, Injector } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\n\n@Component({\n    templateUrl: './demo-ui-components.component.html',\n    animations: [appModuleAnimation()]\n})\nexport class DemoUiComponentsComponent extends AppComponentBase {\n    constructor(\n        injector: Injector\n    ) {\n        super(injector);\n    }\n}\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\n    <div class=\\\"m-portlet__head\\\">\\n        <div class=\\\"m-portlet__head-caption\\\">\\n            <div class=\\\"m-portlet__head-title\\\">\\n                <h3 class=\\\"m-portlet__head-text\\\">\\n                    {{l(\\\"DateAndTimePickers\\\")}}\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-portlet__body\\\">\\n        <form role=\\\"form\\\">\\n\\n            <div class=\\\"form-group m-form__group row\\\">\\n                <label for=\\\"SampleDatePicker\\\" class=\\\"col-md-12\\\">Default date picker</label>\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\n                    <input id=\\\"SampleDatePicker\\\" type=\\\"datetime\\\" #SampleDatePicker name=\\\"SampleDatePicker\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitDate()\\\">{{l(\\\"Submit\\\")}}</button>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group m-form__group row\\\">\\n                <label for=\\\"SampleDateTimePicker\\\" class=\\\"col-md-12\\\">Default datetime picker</label>\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\n                    <input id=\\\"SampleDateTimePicker\\\" type=\\\"datetime\\\" #SampleDateTimePicker name=\\\"SampleDateTimePicker\\\" class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitDateTime()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group m-form__group row\\\">\\n                <label for=\\\"SampleDateRangePicker\\\" class=\\\"col-md-12\\\">Default daterange picker</label>\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\n                    <date-range-picker name=\\\"SampleDateRangePicker\\\"\\n                                       [(startDate)]=\\\"dateRangePickerStartDate\\\"\\n                                       [(endDate)]=\\\"dateRangePickerEndDate\\\"\\n                                       [allowFutureDate]=\\\"true\\\"\\n                                       id=\\\"SampleDateRangePicker\\\">\\n                    </date-range-picker>\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitDateRange()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","import { AfterViewInit, Component, ElementRef, Injector, ViewChild } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'demo-ui-date-time',\n    templateUrl: './demo-ui-date-time.component.html',\n    animations: [appModuleAnimation()]\n})\n\nexport class DemoUiDateTimeComponent extends AppComponentBase implements AfterViewInit {\n\n    @ViewChild('SampleDatePicker') sampleDatePicker: ElementRef;\n    @ViewChild('SampleDateTimePicker') sampleDateTimePicker: ElementRef;\n\n    dateRangePickerStartDate: moment.Moment;\n    dateRangePickerEndDate: moment.Moment;\n\n    constructor(\n        injector: Injector,\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\n    ) {\n        super(injector);\n        this.dateRangePickerStartDate = moment().add(-7, 'days').endOf('day');\n        this.dateRangePickerEndDate = moment().startOf('day');\n    }\n\n    ngAfterViewInit(): void {\n\n        // default date picker\n        $(this.sampleDatePicker.nativeElement).datetimepicker({\n            locale: abp.localization.currentLanguage.name,\n            format: 'L'\n        });\n\n        // default date time picker\n        $(this.sampleDateTimePicker.nativeElement).datetimepicker({\n            locale: abp.localization.currentLanguage.name,\n            format: 'L LT'\n        });\n    }\n\n    // default date picker - post\n    submitDate(): void {\n        let dateInput = moment($(this.sampleDatePicker.nativeElement).data('DateTimePicker').date().format('YYYY-MM-DDTHH:mm:ssZ'));\n\n        this.demoUiComponentsService.sendAndGetDate(dateInput)\n            .subscribe(data => {\n                this.message.info(data.dateString, this.l('PostedValue'));\n                this.notify.info(this.l('SavedSuccessfully'));\n            });\n    }\n\n    // default date time picker - post\n    submitDateTime(): void {\n        let dateInput = moment($(this.sampleDateTimePicker.nativeElement).data('DateTimePicker').date().format('YYYY-MM-DDTHH:mm:ssZ'));\n\n        this.demoUiComponentsService.sendAndGetDateTime(dateInput)\n            .subscribe(data => {\n                this.message.info(data.dateString, this.l('PostedValue'));\n                this.notify.info(this.l('SavedSuccessfully'));\n            });\n    }\n\n    // default date range picker - post\n    submitDateRange(): void {\n        this.demoUiComponentsService.sendAndGetDateRange(this.dateRangePickerStartDate, this.dateRangePickerEndDate)\n            .subscribe(data => {\n                this.message.info(data.dateString, this.l('PostedValue'));\n                this.notify.info(this.l('SavedSuccessfully'));\n            });\n    }\n}\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\n    <div class=\\\"m-portlet__head\\\">\\n        <div class=\\\"m-portlet__head-caption\\\">\\n            <div class=\\\"m-portlet__head-title\\\">\\n                <h3 class=\\\"m-portlet__head-text\\\">\\n                    Editor\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n    <form class=\\\"m-form m-form--fit m-form--label-align-right\\\">\\n        <div class=\\\"m-portlet__body\\\">\\n            <div class=\\\"form-group m-form__group\\\">\\n                <p-editor [(ngModel)]=\\\"htmlEditorInput\\\" name=\\\"HtmlEditorInput\\\" [style]=\\\"{'height':'300px'}\\\"></p-editor>\\n            </div>\\n        </div>\\n        <div class=\\\"m-portlet__foot m-portlet__foot--fit\\\">\\n            <div class=\\\"m-form__actions\\\">\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"submitValue()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"","import { Component, Injector } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    selector: 'demo-ui-editor',\n    templateUrl: './demo-ui-editor.component.html',\n    animations: [appModuleAnimation()]\n})\n\nexport class DemoUiEditorComponent extends AppComponentBase {\n\n    htmlEditorInput: string;\n\n    constructor(\n        injector: Injector,\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\n    ) {\n        super(injector);\n    }\n\n    // input mask - post\n    submitValue(): void {\n\n        this.demoUiComponentsService.sendAndGetValue(this.htmlEditorInput)\n            .subscribe(data => {\n                (abp as any).libs.sweetAlert.config.info.html = true;\n                this.message.info(data.output, this.l('PostedValue'));\n                this.notify.info(this.l('SavedSuccessfully'));\n            });\n    }\n}\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\n    <div class=\\\"m-portlet__head\\\">\\n        <div class=\\\"m-portlet__head-caption\\\">\\n            <div class=\\\"m-portlet__head-title\\\">\\n                <h3 class=\\\"m-portlet__head-text\\\">\\n                    {{l(\\\"FileUpload\\\")}}\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-portlet__body\\\">\\n        <form role=\\\"form\\\">\\n            <div class=\\\"form-group m-form__group\\\">\\n                <label for=\\\"DefaultFileUploadFileInput\\\" class=\\\"control-label\\\">Default file uploader</label>\\n                <p-fileUpload multiple=\\\"multiple\\\"\\n                              id=\\\"DefaultFileUploadFileInput\\\"\\n                              name=\\\"DefaultFileUploadFileInput[]\\\"\\n                              [url]=\\\"uploadUrl\\\"\\n                              accept=\\\"image/*\\\"\\n                              maxFileSize=\\\"1000000\\\"\\n                              (onUpload)=\\\"onUpload($event)\\\"\\n                              (onBeforeSend)=\\\"onBeforeSend($event)\\\">\\n\\n                    <ng-template pTemplate=\\\"content\\\">\\n                        <ul *ngIf=\\\"uploadedFiles.length\\\">\\n                            <li *ngFor=\\\"let file of uploadedFiles\\\">{{file.name}} - {{file.size}} bytes</li>\\n                        </ul>\\n                    </ng-template>\\n                </p-fileUpload>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","import { Component, Injector } from '@angular/core';\nimport { AppConsts } from '@shared/AppConsts';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    selector: 'demo-ui-file-upload',\n    templateUrl: './demo-ui-file-upload.component.html',\n    animations: [appModuleAnimation()]\n})\n\nexport class DemoUiFileUploadComponent extends AppComponentBase {\n\n    uploadUrl: string;\n    uploadedFiles: any[] = [];\n\n    constructor(\n        injector: Injector,\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\n    ) {\n        super(injector);\n        this.uploadUrl = AppConsts.remoteServiceBaseUrl + '/DemoUiComponents/UploadFiles';\n    }\n\n    // upload completed event\n    onUpload(event): void {\n        for (const file of event.files) {\n            this.uploadedFiles.push(file);\n        }\n    }\n\n    onBeforeSend(event): void {\n        event.xhr.setRequestHeader('Authorization', 'Bearer ' + abp.auth.getToken());\n    }\n}\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\n    <div class=\\\"m-portlet__head\\\">\\n        <div class=\\\"m-portlet__head-caption\\\">\\n            <div class=\\\"m-portlet__head-title\\\">\\n                <h3 class=\\\"m-portlet__head-text\\\">\\n                    Input Mask\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-portlet__body\\\">\\n        <form role=\\\"form\\\">\\n\\n            <div class=\\\"form-group m-form__group row\\\">\\n                <label for=\\\"DateInputMask\\\" class=\\\"col-lg-12\\\">Date</label>\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\n                    <p-inputMask id=\\\"DateInputMask\\\" [(ngModel)]=\\\"dateValue\\\" name=\\\"dateValue\\\" mask=\\\"99/99/9999\\\" placeholder=\\\"mm/dd/yyyy\\\" slotChar=\\\"mm/dd/yyyy\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitDateValue()\\\">{{l(\\\"Submit\\\")}}</button>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group m-form__group row\\\">\\n                <label for=\\\"PhoneInputMask\\\" class=\\\"col-lg-12\\\">Phone</label>\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\n                    <p-inputMask id=\\\"PhoneInputMask\\\" [(ngModel)]=\\\"phoneValue\\\" name=\\\"phoneValue\\\" mask=\\\"(999) 999-9999\\\" placeholder=\\\"(999) 999-9999\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submiPhoneValue()\\\">{{l(\\\"Submit\\\")}}</button>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group m-form__group row\\\">\\n                <label for=\\\"PhoneExtInputMask\\\" class=\\\"col-lg-12\\\">Phone Ext</label>\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\n                    <p-inputMask id=\\\"PhoneExtInputMask\\\" mask=\\\"(999) 999-9999? x99999\\\" name=\\\"phoneExtValue\\\" [(ngModel)]=\\\"phoneExtValue\\\" placeholder=\\\"(999) 999-9999? x99999\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitPhoneExtValue()\\\">{{l(\\\"Submit\\\")}}</button>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group m-form__group row\\\">\\n                <label for=\\\"SerialInputMask\\\" class=\\\"col-lg-12\\\">Serial</label>\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\n                    <p-inputMask id=\\\"SerialInputMask\\\" [(ngModel)]=\\\"serialValue\\\" name=\\\"serialValue\\\" mask=\\\"a*-999-a999\\\" placeholder=\\\"a*-999-a999\\\" styleClass=\\\"form-control\\\"></p-inputMask>\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"submitSerialValue()\\\">{{l(\\\"Submit\\\")}}</button>\\n                </div>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\\n\"","import { Component, Injector } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { DemoUiComponentsServiceProxy } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    selector: 'demo-ui-input-mask',\n    templateUrl: './demo-ui-input-mask.component.html',\n    animations: [appModuleAnimation()]\n})\n\nexport class DemoUiInputMaskComponent extends AppComponentBase {\n\n    dateValue = '';\n    phoneValue = '';\n    serialValue = '';\n    phoneExtValue = '';\n\n    constructor(\n        injector: Injector,\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\n    ) {\n        super(injector);\n    }\n\n    submitDateValue(): void {\n        this.submitValue(this.dateValue);\n    }\n\n    submiPhoneValue(): void {\n        this.submitValue(this.phoneValue);\n    }\n\n    submitSerialValue(): void {\n        this.submitValue(this.serialValue);\n    }\n\n    submitPhoneExtValue(): void {\n        this.submitValue(this.phoneExtValue);\n    }\n\n    // input mask - post\n    submitValue(value: any): void {\n\n        this.demoUiComponentsService.sendAndGetValue(value)\n            .subscribe(data => {\n                this.message.info(data.output, this.l('PostedValue'));\n                this.notify.info(this.l('SavedSuccessfully'));\n            });\n    }\n}\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\n    <div class=\\\"m-portlet__head\\\">\\n        <div class=\\\"m-portlet__head-caption\\\">\\n            <div class=\\\"m-portlet__head-title\\\">\\n                <h3 class=\\\"m-portlet__head-text\\\">\\n                    Prime NG Autocomplete\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-portlet__body\\\">\\n        <form role=\\\"form\\\">\\n            <div class=\\\"form-group m-form__group row\\\">\\n                <label for=\\\"SingleSelectInput\\\" class=\\\"col-lg-12\\\">Single select</label>\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\n                    <p-autoComplete [(ngModel)]=\\\"country\\\"\\n                                    id=\\\"SingleSelectInput\\\"\\n                                    [suggestions]=\\\"filteredCountries\\\"\\n                                    (completeMethod)=\\\"filterCountries($event)\\\"\\n                                    field=\\\"name\\\"\\n                                    placeholder=\\\"Country\\\"\\n                                    [minLength]=\\\"1\\\"\\n                                    name=\\\"SingleSelectInput\\\"\\n                                    inputStyleClass=\\\"form-control\\\"\\n                                    styleClass=\\\"width-percent-100\\\">\\n                    </p-autoComplete>\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitSelectedCountry()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group m-form__group row\\\">\\n                <label for=\\\"MultiSelectInput\\\" class=\\\"col-lg-12\\\">Multi select</label>\\n                <div class=\\\"col-lg-10 col-md-9 col-sm-8\\\">\\n                    <p-autoComplete [(ngModel)]=\\\"countries\\\"\\n                                    [suggestions]=\\\"filteredCountries\\\"\\n                                    (completeMethod)=\\\"filterCountries($event)\\\"\\n                                    field=\\\"name\\\"\\n                                    placeholder=\\\"Countries\\\"\\n                                    [minLength]=\\\"1\\\"\\n                                    name=\\\"MultiSelectInput\\\"\\n                                    id=\\\"MultiSelectInput\\\"\\n                                    [multiple]=\\\"true\\\"\\n                                    inputStyleClass=\\\"form-control\\\"\\n                                    styleClass=\\\"width-percent-100\\\">\\n                    </p-autoComplete>\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-3 col-sm-4\\\">\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitSelectedCountries()\\\" type=\\\"button\\\">{{l(\\\"Submit\\\")}}</button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\"","import { Component, Injector } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { DemoUiComponentsServiceProxy, NameValueOfString } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    selector: 'demo-ui-selection',\n    templateUrl: './demo-ui-selection.component.html',\n    animations: [appModuleAnimation()]\n})\n\nexport class DemoUiSelectionComponent extends AppComponentBase {\n\n    filteredCountries: NameValueOfString[];\n    country: any;\n    countries: NameValueOfString[] = new Array<NameValueOfString>();\n\n    constructor(\n        injector: Injector,\n        private demoUiComponentsService: DemoUiComponentsServiceProxy\n    ) {\n        super(injector);\n    }\n\n    // get countries\n    filterCountries(event): void {\n        this.demoUiComponentsService.getCountries(event.query).subscribe(countries => {\n            this.filteredCountries = countries;\n        });\n    }\n\n    // single select - post\n    submitSelectedCountry(): void {\n        let selectedCountries = new Array<NameValueOfString>();\n\n        selectedCountries.push(this.country);\n\n        this.demoUiComponentsService.sendAndGetSelectedCountries(selectedCountries)\n            .subscribe((countries: NameValueOfString[]) => {\n                let message = '';\n\n                $.each(countries, (index, item) => {\n                    message += `<div><strong>id</strong>: ${item.value} - <strong>name</strong>: ${item.name}</div>`;\n                });\n\n                let $div = document.createElement('div');\n                $div.innerHTML = message;\n\n                (abp as any).libs.sweetAlert.config.info.content = $div;\n                this.message.info('', this.l('PostedValue'));\n                this.notify.info(this.l('SavedSuccessfully'));\n                (abp as any).libs.sweetAlert.config.info.content = '';\n            });\n    }\n\n    // multi select - post\n    submitSelectedCountries(): void {\n        this.demoUiComponentsService.sendAndGetSelectedCountries(this.countries)\n            .subscribe((countries: NameValueOfString[]) => {\n                let message = '';\n\n                $.each(countries, (index, item) => {\n                    message += `<div><strong>id</strong>: ${item.value} - <strong>name</strong>: ${item.name}</div>`;\n                });\n\n                let $div = document.createElement('div');\n                $div.innerHTML = message;\n\n                (abp as any).libs.sweetAlert.config.info.content = $div;\n                this.message.info('', this.l('PostedValue'));\n                this.notify.info(this.l('SavedSuccessfully'));\n                (abp as any).libs.sweetAlert.config.info.content = '';\n            });\n    }\n}\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <form *ngIf=\\\"active\\\" #roleForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\">\\n                        <span *ngIf=\\\"edition.id\\\">{{l(\\\"EditEdition\\\")}}: {{edition.displayName}}</span>\\n                        <span *ngIf=\\\"!edition.id\\\">{{l(\\\"CreateNewEdition\\\")}}</span>\\n                    </h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <tabset class=\\\"tab-container tabbable-line\\\">\\n                        <tab heading=\\\"{{l('EditionProperties')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"EditionDisplayName\\\">{{l(\\\"EditionName\\\")}} *</label>\\n                                <input id=\\\"EditionDisplayName\\\" #editionNameInput=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"EditionDisplayName\\\" [ngClass]=\\\"{'edited':edition.displayName}\\\" [(ngModel)]=\\\"edition.displayName\\\" required maxlength=\\\"64\\\">\\n                                <validation-messages [formCtrl]=\\\"editionNameInput\\\"></validation-messages>\\n                            </div>\\n\\n                            <label>{{l(\\\"SubscriptionPrice\\\")}}</label>\\n                            <div class=\\\"m-radio-inline\\\">\\n                                <label for=\\\"EditEdition_IsFree\\\" class=\\\"m-radio\\\">\\n                                    <input id=\\\"EditEdition_IsFree\\\" name=\\\"SubscriptionPrice\\\" [(ngModel)]=\\\"isFree\\\" (ngModelChange)=\\\"resetPrices($event)\\\" [value]=\\\"true\\\" type=\\\"radio\\\">\\n                                    {{l(\\\"Free\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"EditEdition_IsPaid\\\" class=\\\"m-radio\\\">\\n                                    <input id=\\\"EditEdition_IsPaid\\\" name=\\\"SubscriptionPrice\\\" [(ngModel)]=\\\"isFree\\\" [value]=\\\"false\\\" type=\\\"radio\\\">\\n                                    {{l(\\\"Paid\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf=\\\"!isFree\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"MonthlyPrice\\\">{{l(\\\"MonthlyPrice\\\")}}</label>\\n                                        <input #monthlyPriceInput=\\\"ngModel\\\"\\n                                               type=\\\"text\\\"\\n                                               name=\\\"MonthlyPrice\\\"\\n                                               id=\\\"MonthlyPrice\\\"\\n                                               currencyInput\\n                                               class=\\\"form-control\\\"\\n                                               autocomplete=\\\"off\\\"\\n                                               [ngClass]=\\\"{'edited':edition.monthlyPrice}\\\"\\n                                               [required]=\\\"!isFree\\\"\\n                                               [(ngModel)]=\\\"edition.monthlyPrice\\\" />\\n                                        <validation-messages [formCtrl]=\\\"monthlyPriceInput\\\"></validation-messages>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"AnnualPrice\\\">{{l(\\\"AnnualPrice\\\")}}</label>\\n                                        <input #annualPriceInput=\\\"ngModel\\\"\\n                                               type=\\\"text\\\"\\n                                               name=\\\"AnnualPrice\\\"\\n                                               id=\\\"AnnualPrice\\\"\\n                                               currencyInput\\n                                               class=\\\"form-control\\\"\\n                                               autocomplete=\\\"off\\\"\\n                                               [ngClass]=\\\"{'edited':edition.annualPrice}\\\"\\n                                               [required]=\\\"!isFree\\\"\\n                                               [(ngModel)]=\\\"edition.annualPrice\\\" />\\n                                        <validation-messages [formCtrl]=\\\"annualPriceInput\\\"></validation-messages>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div [hidden]=\\\"isFree\\\" class=\\\"paid-features\\\">\\n                                <div class=\\\"m-checkbox-list\\\">\\n                                    <label for=\\\"EditEdition_IsTrialActive\\\" class=\\\"m-checkbox\\\">\\n                                        <input id=\\\"EditEdition_IsTrialActive\\\" type=\\\"checkbox\\\" name=\\\"isTrialActive\\\" [(ngModel)]=\\\"isTrialActive\\\" />\\n                                        {{l(\\\"IsTrialActive\\\")}}\\n                                        <span></span>\\n                                    </label>\\n                                </div>\\n                                <div class=\\\"form-group trial-day-count\\\" *ngIf=\\\"isTrialActive\\\">\\n                                    <label for=\\\"TrialDayCount\\\">{{l(\\\"TrialDayCount\\\")}}</label>\\n                                    <input #trialDayCountInput=\\\"ngModel\\\"\\n                                           class=\\\"form-control\\\"\\n                                           type=\\\"number\\\"\\n                                           name=\\\"TrialDayCount\\\"\\n                                           id=\\\"TrialDayCount\\\"\\n                                           [required]=\\\"isTrialActive\\\"\\n                                           [(ngModel)]=\\\"edition.trialDayCount\\\"\\n                                           [ngClass]=\\\"{'edited':edition.trialDayCount}\\\">\\n                                    <validation-messages [formCtrl]=\\\"trialDayCountInput\\\"></validation-messages>\\n                                </div>\\n                                <div class=\\\"m-checkbox-list\\\">\\n                                    <label for=\\\"EditEdition_IsWaitingDayActive\\\" class=\\\"m-checkbox\\\">\\n                                        <input id=\\\"EditEdition_IsWaitingDayActive\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"IsWaitingDayActive\\\" [(ngModel)]=\\\"isWaitingDayActive\\\" />\\n                                        {{l(\\\"WaitAfterSubscriptionExpireDate\\\")}}\\n                                        <span></span>\\n                                    </label>\\n                                </div>\\n                                <div class=\\\"form-group waiting-day-after-expire\\\" *ngIf=\\\"isWaitingDayActive\\\">\\n                                    <label for=\\\"WaitingDayAfterExpire\\\">{{l(\\\"WaitingDayAfterExpire\\\")}}</label>\\n                                    <input #waitingDayAfterExpireInput=\\\"ngModel\\\"\\n                                           class=\\\"form-control\\\"\\n                                           type=\\\"number\\\"\\n                                           name=\\\"WaitingDayAfterExpire\\\"\\n                                           id=\\\"WaitingDayAfterExpire\\\"\\n                                           [required]=\\\"isWaitingDayActive\\\"\\n                                           [(ngModel)]=\\\"edition.waitingDayAfterExpire\\\"\\n                                           [ngClass]=\\\"{'edited':edition.waitingDayAfterExpire}\\\">\\n                                    <validation-messages [formCtrl]=\\\"waitingDayAfterExpireInput\\\"></validation-messages>\\n                                </div>\\n                                <label>{{l(\\\"WhatWillDoneAfterSubscriptionExpiry\\\")}}</label>\\n                                <div class=\\\"m-radio-inline\\\">\\n                                    <label for=\\\"EditEdition_ExpireAction_DeactiveUser\\\" class=\\\"m-radio\\\">\\n                                        <input id=\\\"EditEdition_ExpireAction_DeactiveUser\\\" name=\\\"ExpireAction\\\" [(ngModel)]=\\\"expireAction\\\" [value]=\\\"expireActionEnum.DeactiveTenant\\\" (ngModelChange)=\\\"removeExpiringEdition($event)\\\" type=\\\"radio\\\">\\n                                        {{l(\\\"DeactiveTenant\\\")}}\\n                                        <span></span>\\n                                    </label>\\n                                    <label for=\\\"EditEdition_ExpireAction_AssignEdition\\\" class=\\\"m-radio\\\">\\n                                        <input id=\\\"EditEdition_ExpireAction_AssignEdition\\\" name=\\\"ExpireAction\\\" [(ngModel)]=\\\"expireAction\\\" [value]=\\\"expireActionEnum.AssignToAnotherEdition\\\" type=\\\"radio\\\">\\n                                        {{l(\\\"AssignToAnotherEdition\\\")}}\\n                                        <span></span>\\n                                    </label>\\n                                </div>\\n                                <div class=\\\"form-group edition-list\\\" *ngIf=\\\"expireAction == expireActionEnum.AssignToAnotherEdition\\\">\\n                                    <select name=\\\"expiringEdition\\\" class=\\\"form-control edited\\\" [(ngModel)]=\\\"edition.expiringEditionId\\\" [minValue]=\\\"expireAction == expireActionEnum.AssignToAnotherEdition ? 1:0\\\" [ngClass]=\\\"{'edited':edition.expiringEditionId}\\\">\\n                                        <option *ngFor=\\\"let expiringEdition of expiringEditions\\\" [value]=\\\"expiringEdition.value\\\">{{expiringEdition.displayText}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                        </tab>\\n                        <tab heading=\\\"{{l('Features')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                            <feature-tree #featureTree></feature-tree>\\n                        </tab>\\n                    </tabset>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!roleForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { AfterViewChecked, Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppEditionExpireAction } from '@shared/AppEnums';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { ComboboxItemDto, CommonLookupServiceProxy, CreateOrUpdateEditionDto, EditionEditDto, EditionServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { ModalDirective } from 'ngx-bootstrap';\nimport { FeatureTreeComponent } from '../shared/feature-tree.component';\n\n@Component({\n    selector: 'createOrEditEditionModal',\n    templateUrl: './create-or-edit-edition-modal.component.html'\n})\nexport class CreateOrEditEditionModalComponent extends AppComponentBase implements AfterViewChecked {\n\n    @ViewChild('editionNameInput') editionNameInput: ElementRef;\n    @ViewChild('createOrEditModal') modal: ModalDirective;\n    @ViewChild('featureTree') featureTree: FeatureTreeComponent;\n\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\n\n    active = false;\n    saving = false;\n\n    edition: EditionEditDto = new EditionEditDto();\n    expiringEditions: ComboboxItemDto[] = [];\n\n    expireAction: AppEditionExpireAction = AppEditionExpireAction.DeactiveTenant;\n    expireActionEnum: typeof AppEditionExpireAction = AppEditionExpireAction;\n    isFree = false;\n    isTrialActive = false;\n    isWaitingDayActive = false;\n\n    constructor(\n        injector: Injector,\n        private _editionService: EditionServiceProxy,\n        private _commonLookupService: CommonLookupServiceProxy\n    ) {\n        super(injector);\n    }\n\n    ngAfterViewChecked(): void {\n        //Temporary fix for: https://github.com/valor-software/ngx-bootstrap/issues/1508\n        $('tabset ul.nav').addClass('m-tabs-line');\n        $('tabset ul.nav li a.nav-link').addClass('m-tabs__link');\n    }\n\n    show(editionId?: number): void {\n        this.active = true;\n\n        this._commonLookupService.getEditionsForCombobox(true).subscribe(editionsResult => {\n            this.expiringEditions = editionsResult.items;\n            this.expiringEditions.unshift(new ComboboxItemDto({ value: null, displayText: this.l('NotAssigned'), isSelected: true }));\n\n            this._editionService.getEditionForEdit(editionId).subscribe(editionResult => {\n                this.edition = editionResult.edition;\n                this.featureTree.editData = editionResult;\n\n                this.expireAction = this.edition.expiringEditionId > 0 ? AppEditionExpireAction.AssignToAnotherEdition : AppEditionExpireAction.DeactiveTenant;\n\n                this.isFree = !editionResult.edition.monthlyPrice && !editionResult.edition.annualPrice;\n                this.isTrialActive = editionResult.edition.trialDayCount > 0;\n                this.isWaitingDayActive = editionResult.edition.waitingDayAfterExpire > 0;\n\n                this.modal.show();\n            });\n        });\n    }\n\n    onShown(): void {\n        $(this.editionNameInput.nativeElement).focus();\n    }\n\n    updateAnnualPrice(value): void {\n        this.edition.annualPrice = value;\n    }\n\n    updateMonthlyPrice(value): void {\n        this.edition.monthlyPrice = value;\n    }\n\n    resetPrices(isFree) {\n        this.edition.annualPrice = undefined;\n        this.edition.monthlyPrice = undefined;\n    }\n\n    removeExpiringEdition(isDeactivateTenant) {\n        this.edition.expiringEditionId = null;\n    }\n\n    save(): void {\n        const input = new CreateOrUpdateEditionDto();\n        input.edition = this.edition;\n        input.featureValues = this.featureTree.getGrantedFeatures();\n\n        this.saving = true;\n        this._editionService.createOrUpdateEdition(input)\n            .finally(() => this.saving = false)\n            .subscribe(() => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n                this.modalSave.emit(null);\n            });\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto col-xs-6 \\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{(\\\"Editions\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"EditionsHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n            <div class=\\\"col-xs-6 text-right\\\">\\n                <button *ngIf=\\\"permission.isGranted('Pages.Editions.Create')\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"createEdition()\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewEdition\\\")}}</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <!--<Primeng-TurboTable-Start>-->\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                        <p-table #dataTable\\n                                 (onLazyLoad)=\\\"getEditions()\\\"\\n                                 [value]=\\\"primengTableHelper.records\\\"\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                 [paginator]=\\\"false\\\"\\n                                 [lazy]=\\\"true\\\"\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th style=\\\"width: 130px;\\\"\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Editions.Edit', 'Pages.Editions.Delete')\\\">\\n                                        {{l('Actions')}}\\n                                    </th>\\n                                    <th>\\n                                        {{l('EditionName')}}\\n                                    </th>\\n                                    <th>\\n                                        {{l('CreationTime')}}\\n                                    </th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                <tr>\\n                                    <td style=\\\"width: 130px;text-align:center\\\">\\n                                        <div class=\\\"btn-group dropdown\\\">\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\"\\n                                                    data-toggle=\\\"dropdown\\\"\\n                                                    aria-haspopup=\\\"true\\\"\\n                                                    aria-expanded=\\\"false\\\">\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\n                                            </button>\\n                                            <ul class=\\\"dropdown-menu\\\">\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Editions.Edit')\\\"\\n                                                       (click)=\\\"createOrEditEditionModal.show(record.id)\\\">{{l('Edit')}}</a>\\n                                                </li>\\n\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Editions.Delete')\\\"\\n                                                       (click)=\\\"deleteEdition(record)\\\">{{l('Delete')}}</a>\\n                                                </li>\\n                                            </ul>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        {{record.displayName}}\\n                                    </td>\\n                                    <td>\\n                                        {{record.creationTime | momentFormat:'L'}}\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                        </p-table>\\n                        <div class=\\\"ui-table-footer\\\">\\n                            {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\n                        </div>\\n                    </div>\\n                    <!--<Primeng-TurboTable-End>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <createOrEditEditionModal #createOrEditEditionModal (modalSave)=\\\"getEditions()\\\"></createOrEditEditionModal>\\n</div>\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { EditionListDto, EditionServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { Paginator } from 'primeng/components/paginator/paginator';\nimport { Table } from 'primeng/components/table/table';\nimport { CreateOrEditEditionModalComponent } from './create-or-edit-edition-modal.component';\n\n@Component({\n    templateUrl: './editions.component.html',\n    animations: [appModuleAnimation()]\n})\nexport class EditionsComponent extends AppComponentBase  {\n\n    @ViewChild('createOrEditEditionModal') createOrEditEditionModal: CreateOrEditEditionModalComponent;\n    @ViewChild('dataTable') dataTable: Table;\n    @ViewChild('paginator') paginator: Paginator;\n\n    constructor(\n        injector: Injector,\n        private _editionService: EditionServiceProxy\n    ) {\n        super(injector);\n    }\n\n    getEditions(): void {\n        this.primengTableHelper.showLoadingIndicator();\n        this._editionService.getEditions().subscribe(result => {\n            this.primengTableHelper.totalRecordsCount = result.items.length;\n            this.primengTableHelper.records = result.items;\n            this.primengTableHelper.hideLoadingIndicator();\n        });\n    }\n\n    createEdition(): void {\n        this.createOrEditEditionModal.show();\n    }\n\n    deleteEdition(edition: EditionListDto): void {\n        this.message.confirm(\n            this.l('EditionDeleteWarningMessage', edition.displayName),\n            isConfirmed => {\n                if (isConfirmed) {\n                    this._editionService.deleteEdition(edition.id).subscribe(() => {\n                        this.getEditions();\n                        this.notify.success(this.l('SuccessfullyDeleted'));\n                    });\n                }\n            }\n        );\n    }\n}\n","module.exports = \"<div [@routerTransition] style=\\\"background-image: url('/assets/metronic/src/media/app/img/bg/bg-1.jpg');\\\">\\n    <div class=\\\"content col-lg-12\\\">\\n        <div class=\\\"m-content\\\">\\n            <div class=\\\"m-portlet m-portlet--mobile\\\">\\n                <div class=\\\"m-portlet__head\\\">\\n                    <div class=\\\"m-portlet__head-caption\\\">\\n                        <div class=\\\"m-portlet__head-title\\\">\\n                            <h3 class=\\\"m-portlet__head-text\\\">\\n                                Demo Installation\\n                            </h3>\\n                        </div>\\n                    </div>\\n                </div>\\n                <form id=\\\"installForm\\\" class=\\\"m-form m-form--fit\\\">\\n                    <div class=\\\"m-portlet__body\\\">\\n                        <div class=\\\"form-group m-form__group\\\">\\n                            <div class=\\\"m-alert m-alert--icon alert alert-warning\\\" role=\\\"alert\\\">\\n                                <div class=\\\"m-alert__icon\\\">\\n                                    <i class=\\\"la la-warning\\\"></i>\\n                                </div>\\n                                <div class=\\\"m-alert__text\\\">\\n                                    <strong>\\n                                        Clear your cookies before installing Demo ! Otherwise, you might have some pro\\n                                    </strong>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"m-form__section\\\">\\n                            <div class=\\\"m-form__heading\\\">\\n                                <h5 class=\\\"m-form__heading-title\\\">\\n                                    Connection String\\n                                </h5>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Connection String\\\" [(ngModel)]=\\\"setupSettings.connectionString\\\" name=\\\"connectionString\\\" value=\\\"{{setupSettings.connectionString}}\\\" autocomplete=\\\"off\\\">\\n                            </div>\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\n                            <div class=\\\"m-form__heading\\\">\\n                                <h5 class=\\\"m-form__heading-title\\\">\\n                                    Admin Password\\n                                </h5>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Admin Password\\\" [(ngModel)]=\\\"setupSettings.adminPassword\\\" name=\\\"adminPassword\\\" autocomplete=\\\"off\\\">\\n                            </div>\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\n                            <div class=\\\"m-form__heading\\\">\\n                                <h5 class=\\\"m-form__heading-title\\\">\\n                                    Client Side URL\\n                                </h5>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Client Side URL\\\" [(ngModel)]=\\\"setupSettings.webSiteUrl\\\" name=\\\"webSiteUrl\\\" value=\\\"{{setupSettings.webSiteUrl}}\\\">\\n                            </div>\\n                            <div class=\\\"m-form__heading\\\">\\n                                <h5 class=\\\"m-form__heading-title\\\">\\n                                    Server Side URL\\n                                </h5>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Server Side URL\\\" [(ngModel)]=\\\"setupSettings.serverUrl\\\" name=\\\"serverUrl\\\" value=\\\"{{setupSettings.serverUrl}}\\\">\\n                            </div>\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\n                            <div class=\\\"m-form__heading\\\">\\n                                <h5 class=\\\"m-form__heading-title\\\">\\n                                    Default Language\\n                                </h5>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <select class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.defaultLanguage\\\" name=\\\"defaultLanguage\\\">\\n                                    <option *ngFor=\\\"let language of languages\\\" value=\\\"{{language.value}}\\\">\\n                                        {{language.name}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\n                            <div class=\\\"m-form__heading\\\">\\n                                <h5 class=\\\"m-form__heading-title\\\">\\n                                    SMTP Settings\\n                                </h5>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"email\\\" placeholder=\\\"Default from address\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.defaultFromAddress\\\" name=\\\"defaultFromAddress\\\">\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"text\\\" placeholder=\\\"Default from displayName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.defaultFromDisplayName\\\" name=\\\"defaultFromDisplayName\\\">\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"text\\\" placeholder=\\\"SMTP host\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpHost\\\" name=\\\"smtpHost\\\">\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"number\\\" placeholder=\\\"SMTP port\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpPort\\\" name=\\\"smtpPort\\\">\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label class=\\\"control-label col-md-12\\\"></label>\\n                                <div class=\\\"m-checkbox-list\\\">\\n                                    <label class=\\\"m-checkbox\\\">\\n                                        <input id=\\\"Settings_SmtpEnableSsl\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpEnableSsl\\\" name=\\\"smtpEnableSsl\\\" value=\\\"true\\\">\\n                                        UseSsl\\n                                        <span></span>\\n                                    </label>\\n                                    <label class=\\\"m-checkbox\\\">\\n                                        <input id=\\\"Settings_SmtpUseDefaultCredentials\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpUseDefaultCredentials\\\" name=\\\"smtpUseDefaultCredentials\\\" value=\\\"true\\\">\\n                                        Use Default Credentials\\n                                        <span></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"text\\\" placeholder=\\\"Domain name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpDomain\\\" name=\\\"smtpDomain\\\">\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"text\\\" placeholder=\\\"User name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpUserName\\\" name=\\\"smtpUserName\\\">\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"setupSettings.smtpSettings.smtpPassword\\\" name=\\\"smtpPassword\\\" id=\\\"SmtpPassword\\\">\\n                            </div>\\n                            <div class=\\\"m-form__seperator m-form__seperator--dashed\\\"></div>\\n                            <div class=\\\"m-form__heading\\\">\\n                                <h5 class=\\\"m-form__heading-title\\\">\\n                                    Invoice Info\\n                                </h5>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"legalName\\\" [(ngModel)]=\\\"setupSettings.billInfo.legalName\\\" placeholder=\\\"Legal name\\\">\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <textarea class=\\\"form-control\\\" name=\\\"billAddress\\\" rows=\\\"5\\\" [(ngModel)]=\\\"setupSettings.billInfo.address\\\" placeholder=\\\"Address\\\"></textarea>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"m-portlet__foot m-portlet__no-border m-portlet__foot--fit\\\">\\n                        <div class=\\\"m-form__actions m-form__actions--solid\\\">\\n                            <button id=\\\"SaveButton\\\" class=\\\"btn btn-primary\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" (click)=\\\"saveAll()\\\">Save</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, Injector, OnInit } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { AppSessionService } from '@shared/common/session/app-session.service';\nimport { CommonLookupServiceProxy, EmailSettingsEditDto, HostBillingSettingsEditDto, InstallDto, InstallServiceProxy, NameValue } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    templateUrl: './install.component.html',\n    animations: [appModuleAnimation()]\n})\nexport class InstallComponent extends AppComponentBase implements OnInit {\n\n    saving = false;\n    setupSettings: InstallDto;\n    languages: NameValue[];\n\n    constructor(\n        injector: Injector,\n        private _installSettingService: InstallServiceProxy,\n        private _commonLookupService: CommonLookupServiceProxy,\n        private _appSessionService: AppSessionService\n    ) {\n        super(injector);\n    }\n\n    loadAppSettingsJson(): void {\n        let self = this;\n        self._installSettingService.getAppSettingsJson()\n            .subscribe(result => {\n                this.setupSettings.webSiteUrl = result.webSiteUrl;\n                this.setupSettings.serverUrl = result.serverSiteUrl;\n                this.languages = result.languages;\n            });\n    }\n\n    init(): void {\n        this._installSettingService.checkDatabase()\n            .subscribe(result => {\n                if (result.isDatabaseExist) {\n                    window.location.href = '/';\n                }\n            });\n\n        this.setupSettings = new InstallDto();\n        this.setupSettings.smtpSettings = new EmailSettingsEditDto();\n        this.setupSettings.billInfo = new HostBillingSettingsEditDto();\n        this.setupSettings.defaultLanguage = 'en';\n        this.loadAppSettingsJson();\n    }\n\n    ngOnInit(): void {\n        let self = this;\n        self.init();\n    }\n\n    saveAll(): void {\n        this.saving = true;\n        this._installSettingService.setup(this.setupSettings)\n            .finally(() => {\n                this.saving = false;\n            })\n            .subscribe(() => {\n                window.location.href = '/';\n            });\n    }\n}\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <form *ngIf=\\\"active\\\" #editForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">\\n                        <span *ngIf=\\\"language.id\\\">{{l(\\\"EditLanguage\\\")}}: {{language.name}}</span>\\n                        <span *ngIf=\\\"!language.id\\\">{{l(\\\"CreateNewLanguage\\\")}}</span>\\n                    </h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <select #languageCombobox\\n                                name=\\\"languageName\\\"\\n                                class=\\\"form-control\\\"\\n                                [(ngModel)]=\\\"language.name\\\"\\n                                [attr.data-live-search]=\\\"true\\\"\\n                                jq-plugin=\\\"selectpicker\\\"\\n                                required>\\n                            <option value=\\\"\\\">{{emptyText}}</option>\\n                            <option *ngFor=\\\"let languageName of languageNames\\\" [value]=\\\"languageName.value\\\">{{languageName.displayText}}</option>\\n                        </select>\\n                        <validation-messages [formCtrl]=\\\"languageCombobox\\\"></validation-messages>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <select #iconCombobox\\n                                name=\\\"languageIcon\\\"\\n                                class=\\\"form-control\\\"\\n                                [(ngModel)]=\\\"language.icon\\\"\\n                                jq-plugin=\\\"selectpicker\\\"\\n                                [attr.data-live-search]=\\\"true\\\">\\n                            <option value=\\\"\\\">{{emptyText}}</option>\\n                            <option *ngFor=\\\"let flag of flags\\\" [value]=\\\"flag.value\\\" [attr.data-icon]=\\\"flag.value\\\">{{flag.displayText}}</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"m-checkbox-list\\\">\\n                        <label for=\\\"EditLanguage_IsEnabled\\\" class=\\\"m-checkbox\\\">\\n                            <input id=\\\"EditLanguage_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"languageIsEnabled\\\"\\n                                   [(ngModel)]=\\\"language.isEnabled\\\">\\n                            {{l(\\\"IsEnabled\\\")}}\\n                            <span></span>\\n                        </label>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!editForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { ApplicationLanguageEditDto, ComboboxItemDto, CreateOrUpdateLanguageInput, LanguageServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { ModalDirective } from 'ngx-bootstrap';\n\n@Component({\n    selector: 'createOrEditLanguageModal',\n    templateUrl: './create-or-edit-language-modal.component.html'\n})\nexport class CreateOrEditLanguageModalComponent extends AppComponentBase {\n\n    @ViewChild('createOrEditModal') modal: ModalDirective;\n    @ViewChild('languageCombobox') languageCombobox: ElementRef;\n    @ViewChild('iconCombobox') iconCombobox: ElementRef;\n\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\n\n    active = false;\n    saving = false;\n\n    language: ApplicationLanguageEditDto = new ApplicationLanguageEditDto();\n\n    languageNames: ComboboxItemDto[] = [];\n    flags: ComboboxItemDto[] = [];\n\n    constructor(\n        injector: Injector,\n        private _languageService: LanguageServiceProxy\n    ) {\n        super(injector);\n    }\n\n    show(languageId?: number): void {\n        this.active = true;\n\n        this._languageService.getLanguageForEdit(languageId).subscribe(result => {\n            this.language = result.language;\n            this.languageNames = result.languageNames;\n            this.flags = result.flags;\n\n            if (!languageId) {\n                this.language.isEnabled = true;\n            }\n\n            this.modal.show();\n            setTimeout(() => {\n                    $(this.languageCombobox.nativeElement).selectpicker('refresh');\n                    $(this.iconCombobox.nativeElement).selectpicker('refresh');\n            }, 0);\n        });\n    }\n\n    save(): void {\n        let input = new CreateOrUpdateLanguageInput();\n        input.language = this.language;\n\n        this.saving = true;\n        this._languageService.createOrUpdateLanguage(input)\n            .finally(() => this.saving = false)\n            .subscribe(() => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n                this.modalSave.emit(null);\n            });\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n}\n","module.exports = \"<div bsModal #modal=\\\"bs-modal\\\" class=\\\"modal fade\\\" (onShown)=\\\"onShown()\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <form *ngIf=\\\"active\\\" #editForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">\\n                        <span>{{l(\\\"EditText\\\")}}</span>\\n                    </h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>{{l(\\\"Key\\\")}}</label>\\n                        <div><strong>{{model.key}}</strong></div>\\n                    </div>\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\n                        <label for=\\\"BaseLanguageDisplayName\\\"><i class=\\\"{{baseLanguage.icon}}\\\"></i> {{baseLanguage.displayName}} </label>\\n                        <textarea id=\\\"BaseLanguageDisplayName\\\" readonly class=\\\"form-control edited\\\" rows=\\\"4\\\" [ngModel]=\\\"baseText\\\" name=\\\"baseText\\\"></textarea>\\n                    </div>\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\n                        <label for=\\\"TargetLanguageDisplayName\\\"><i class=\\\"{{targetLanguage.icon}}\\\"></i> {{targetLanguage.displayName}} </label>\\n                        <textarea id=\\\"TargetLanguageDisplayName\\\" #targetValueInput class=\\\"form-control\\\" [ngClass]=\\\"{'edited':model.value}\\\" rows=\\\"4\\\" [(ngModel)]=\\\"model.value\\\" name=\\\"value\\\"></textarea>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!editForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { LanguageServiceProxy, UpdateLanguageTextInput } from '@shared/service-proxies/service-proxies';\nimport * as _ from 'lodash';\nimport { ModalDirective } from 'ngx-bootstrap';\n\n@Component({\n    selector: 'editTextModal',\n    templateUrl: './edit-text-modal.component.html'\n})\nexport class EditTextModalComponent extends AppComponentBase {\n\n    @ViewChild('targetValueInput') targetValueInput: ElementRef;\n    @ViewChild('modal') modal: ModalDirective;\n\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\n\n    model: UpdateLanguageTextInput = new UpdateLanguageTextInput();\n\n    baseText: string;\n    baseLanguage: abp.localization.ILanguageInfo;\n    targetLanguage: abp.localization.ILanguageInfo;\n\n    active = false;\n    saving = false;\n\n    constructor(\n        injector: Injector,\n        private _languageService: LanguageServiceProxy\n    ) {\n        super(injector);\n    }\n\n    show(baseLanguageName: string, targetLanguageName: string, sourceName: string, key: string, baseText: string, targetText: string): void {\n        this.model.sourceName = sourceName;\n        this.model.key = key;\n        this.model.languageName = targetLanguageName;\n        this.model.value = targetText;\n\n        this.baseText = baseText;\n        this.baseLanguage = _.find(abp.localization.languages, l => l.name === baseLanguageName);\n        this.targetLanguage = _.find(abp.localization.languages, l => l.name === targetLanguageName);\n\n        this.active = true;\n\n        this.modal.show();\n    }\n\n    onShown(): void {\n        $(this.targetValueInput.nativeElement).focus();\n    }\n\n    save(): void {\n        this.saving = true;\n        this._languageService.updateLanguageText(this.model)\n            .finally(() => this.saving = false)\n            .subscribe(() => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n                this.modalSave.emit(null);\n            });\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n\n    private findLanguage(name: string): abp.localization.ILanguageInfo {\n        return _.find(abp.localization.languages, l => l.name === name);\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"LanguageTexts\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"LanguageTextsHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <form autocomplete=\\\"off\\\">\\n                    <div class=\\\"m-form m-form--label-align-right\\\" id=\\\"TextsFilterForm\\\">\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"TextBaseLanguageSelectionCombobox\\\">{{l(\\\"BaseLanguage\\\")}}</label>\\n                                    <select #baseLanguageNameCombobox\\n                                            name=\\\"baseLanguageName\\\"\\n                                            class=\\\"form-control bs-select\\\"\\n                                            [(ngModel)]=\\\"baseLanguageName\\\"\\n                                            [attr.data-live-search]=\\\"true\\\"\\n                                            jq-plugin=\\\"selectpicker\\\"\\n                                            jq-options='{ \\\"iconBase\\\": \\\"famfamfam-flag\\\", \\\"tickIcon\\\": \\\"fa fa-check\\\" }'>\\n                                        <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language.name\\\" [attr.data-icon]=\\\"language.icon\\\">{{language.displayName}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"TextTargetLanguageSelectionCombobox\\\">{{l(\\\"TargetLanguage\\\")}}</label>\\n                                    <select #targetLanguageNameCombobox\\n                                            name=\\\"targetLanguageName\\\"\\n                                            class=\\\"form-control bs-select\\\"\\n                                            [(ngModel)]=\\\"targetLanguageName\\\"\\n                                            [attr.data-live-search]=\\\"true\\\"\\n                                            jq-plugin=\\\"selectpicker\\\"\\n                                            jq-options='{ \\\"iconBase\\\": \\\"famfamfam-flag\\\", \\\"tickIcon\\\": \\\"fa fa-check\\\" }'>\\n                                        <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language.name\\\" [attr.data-icon]=\\\"language.icon\\\">{{language.displayName}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"TextSourceSelectionCombobox\\\">{{l(\\\"Source\\\")}}</label>\\n                                    <select #sourceNameCombobox\\n                                            name=\\\"sourceName\\\"\\n                                            class=\\\"form-control bs-select\\\"\\n                                            [(ngModel)]=\\\"sourceName\\\"\\n                                            [attr.data-live-search]=\\\"true\\\"\\n                                            jq-plugin=\\\"selectpicker\\\">\\n                                        <option *ngFor=\\\"let sourceName of sourceNames\\\" [value]=\\\"sourceName\\\">{{sourceName}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6 col-md-3\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"TargetValueFilterSelectionCombobox\\\">{{l(\\\"TargetValue\\\")}}</label>\\n                                    <select #targetValueFilterCombobox\\n                                            name=\\\"targetValueFilter\\\"\\n                                            class=\\\"form-control bs-select\\\"\\n                                            [(ngModel)]=\\\"targetValueFilter\\\"\\n                                            jq-plugin=\\\"selectpicker\\\">\\n                                        <option value=\\\"ALL\\\">{{l(\\\"All\\\")}}</option>\\n                                        <option value=\\\"EMPTY\\\">{{l(\\\"EmptyOnes\\\")}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <div class=\\\"input-group\\\">\\n                                    <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control\\\" placeholder=\\\"{{l('SearchWithThreeDot')}}\\\" type=\\\"text\\\">\\n                                    <span class=\\\"input-group-btn\\\">\\n                                        <button (click)=\\\"applyFilters()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"icon-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\n                                    </span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n                <div class=\\\"row align-items-center\\\">\\n                    <!--<Primeng-TurboTable-Start>-->\\n                    <div class=\\\"primeng-datatable-container\\\"\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                        <p-table #dataTable\\n                                 (onLazyLoad)=\\\"getLanguageTexts($event)\\\"\\n                                 [value]=\\\"primengTableHelper.records\\\"\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                 [paginator]=\\\"false\\\"\\n                                 [lazy]=\\\"true\\\"\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th pSortableColumn=\\\"key\\\">\\n                                        {{l('Key')}}\\n                                        <p-sortIcon field=\\\"key\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th pSortableColumn=\\\"baseValue\\\">\\n                                        {{l('BaseValue')}}\\n                                        <p-sortIcon field=\\\"baseValue\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th pSortableColumn=\\\"targetValue\\\">\\n                                        {{l('TargetValue')}}\\n                                        <p-sortIcon field=\\\"targetValue\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th>{{l('Edit')}}</th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                <tr>\\n                                    <td>\\n                                        <span title=\\\"{{record.key}}\\\">{{truncateString(record.key)}}</span>\\n                                    </td>\\n                                    <td>\\n                                        <span title=\\\"{{record.baseValue}}\\\">{{truncateString(record.baseValue)}}</span>\\n                                    </td>\\n                                    <td>\\n                                        <span title=\\\"{{record.targetValue}}\\\">{{truncateString(record.targetValue) }}</span>\\n                                    </td>\\n                                    <td>\\n                                        <button class=\\\"btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill\\\"\\n                                                (click)=\\\"editTextModal.show(baseLanguageName,targetLanguageName,sourceName,record.key,record.baseValue,record.targetValue)\\\"\\n                                                title=\\\"{{l('Edit')}}\\\">\\n                                            <i class=\\\"fa fa-edit\\\" [attr.aria-label]=\\\"l('Edit')\\\"></i>\\n                                        </button>\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                        </p-table>\\n                        <div class=\\\"primeng-paging-container\\\">\\n                            <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                         #paginator\\n                                         (onPageChange)=\\\"getLanguageTexts($event)\\\"\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\n                            </p-paginator>\\n                            <span class=\\\"total-records-count\\\">\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\n                            </span>\\n                        </div>\\n                    </div>\\n                    <!--<Primeng-TurboTable-End>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <editTextModal #editTextModal (modalSave)=\\\"refreshTextValueFromModal()\\\"></editTextModal>\\n</div>\\n\"","module.exports = \"\"","import { AfterViewInit, Component, ElementRef, Injector, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { LanguageServiceProxy } from '@shared/service-proxies/service-proxies';\nimport * as _ from 'lodash';\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\nimport { Paginator } from 'primeng/components/paginator/paginator';\nimport { Table } from 'primeng/components/table/table';\nimport { EditTextModalComponent } from './edit-text-modal.component';\n\n@Component({\n    templateUrl: './language-texts.component.html',\n    styleUrls: ['./language-texts.component.less'],\n    animations: [appModuleAnimation()]\n})\nexport class LanguageTextsComponent extends AppComponentBase implements AfterViewInit, OnInit {\n\n    @ViewChild('targetLanguageNameCombobox') targetLanguageNameCombobox: ElementRef;\n    @ViewChild('baseLanguageNameCombobox') baseLanguageNameCombobox: ElementRef;\n    @ViewChild('sourceNameCombobox') sourceNameCombobox: ElementRef;\n    @ViewChild('targetValueFilterCombobox') targetValueFilterCombobox: ElementRef;\n    @ViewChild('textsTable') textsTable: ElementRef;\n    @ViewChild('editTextModal') editTextModal: EditTextModalComponent;\n    @ViewChild('dataTable') dataTable: Table;\n    @ViewChild('paginator') paginator: Paginator;\n\n    sourceNames: string[] = [];\n    languages: abp.localization.ILanguageInfo[] = [];\n    targetLanguageName: string;\n    sourceName: string;\n    baseLanguageName: string;\n    targetValueFilter: string;\n    filterText: string;\n\n    constructor(\n        injector: Injector,\n        private _languageService: LanguageServiceProxy,\n        private _router: Router,\n        private _activatedRoute: ActivatedRoute\n    ) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n        this.sourceNames = _.map(_.filter(abp.localization.sources, source => source.type === 'MultiTenantLocalizationSource'), value => value.name);\n        this.languages = abp.localization.languages;\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            this.init();\n        });\n    }\n\n    getLanguageTexts(event?: LazyLoadEvent) {\n        if (!this.paginator || !this.dataTable || !this.sourceName) {\n            return;\n        }\n\n        this.primengTableHelper.showLoadingIndicator();\n\n        this._languageService.getLanguageTexts(\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\n            this.primengTableHelper.getSkipCount(this.paginator, event),\n            this.primengTableHelper.getSorting(this.dataTable),\n            this.sourceName,\n            this.baseLanguageName,\n            this.targetLanguageName,\n            this.targetValueFilter,\n            this.filterText\n        ).subscribe(result => {\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\n            this.primengTableHelper.records = result.items;\n            this.primengTableHelper.hideLoadingIndicator();\n        });\n    }\n\n    init(): void {\n        this._activatedRoute.params.subscribe((params: Params) => {\n            this.baseLanguageName = params['baseLanguageName'] || abp.localization.currentLanguage.name;\n            this.targetLanguageName = params['name'];\n            this.sourceName = params['sourceName'] || 'Demo';\n            this.targetValueFilter = params['targetValueFilter'] || 'ALL';\n            this.filterText = params['filterText'] || '';\n\n            setTimeout(() => {\n                $(this.baseLanguageNameCombobox.nativeElement).selectpicker('refresh');\n                $(this.targetLanguageNameCombobox.nativeElement).selectpicker('refresh');\n                $(this.sourceNameCombobox.nativeElement).selectpicker('refresh');\n                $(this.targetValueFilterCombobox.nativeElement).selectpicker('refresh');\n            }, 0);\n\n            this.reloadPage();\n        });\n    }\n\n    reloadPage(): void {\n        this.paginator.changePage(this.paginator.getPage());\n    }\n\n    applyFilters(): void {\n        this._router.navigate(['app/admin/languages', this.targetLanguageName, 'texts', {\n            sourceName: this.sourceName,\n            baseLanguageName: this.baseLanguageName,\n            targetValueFilter: this.targetValueFilter,\n            filterText: this.filterText\n        }]);\n\n        if (this.paginator.getPage() !== 0) {\n            this.paginator.changePage(0);\n\n            return;\n        }\n    }\n\n    truncateString(text): string {\n        return abp.utils.truncateStringWithPostfix(text, 32, '...');\n    }\n\n    refreshTextValueFromModal(): void {\n        for (let i = 0; i < this.primengTableHelper.records.length; i++) {\n            if (this.primengTableHelper.records[i].key === this.editTextModal.model.key) {\n                this.primengTableHelper.records[i].targetValue = this.editTextModal.model.value;\n                return;\n            }\n        }\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto col-xs-6\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"Languages\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"LanguagesHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n            <div class=\\\"col-xs-6 text-right\\\">\\n                <button *ngIf=\\\"isGranted('Pages.Administration.Languages.Create')\\\" (click)=\\\"createOrEditLanguageModal.show()\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewLanguage\\\")}}</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <div class=\\\"row align-items-center\\\">\\n                    <!--<Primeng-TurboTable-Start>-->\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                        <p-table #dataTable\\n                                 (onLazyLoad)=\\\"getLanguages()\\\"\\n                                 [value]=\\\"primengTableHelper.records\\\"\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                 [paginator]=\\\"false\\\"\\n                                 [lazy]=\\\"true\\\"\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th style=\\\"width: 130px\\\"\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.Languages.Edit', 'Pages.Administration.Languages.ChangeTexts', 'Pages.Administration.Languages.Delete')\\\">\\n                                        {{l('Actions')}}\\n                                    </th>\\n                                    <th>\\n                                        {{l('Name')}}\\n                                    </th>\\n                                    <th>\\n                                        {{l('Code')}}\\n                                    </th>\\n                                    <th *ngIf=\\\"appSession.tenantId ? true : false\\\">\\n                                        {{l('Default')}} *\\n                                    </th>\\n                                    <th>\\n                                        {{l('CreationTime')}}\\n                                    </th>\\n                                    <th>\\n                                        {{l('IsEnabled')}}\\n                                    </th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                <tr>\\n                                    <td style=\\\"width: 130px; text-align: center\\\">\\n                                        <div class=\\\"btn-group dropdown\\\">\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\"\\n                                                    data-toggle=\\\"dropdown\\\"\\n                                                    aria-haspopup=\\\"true\\\"\\n                                                    aria-expanded=\\\"false\\\">\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\n                                            </button>\\n                                            <ul class=\\\"dropdown-menu\\\">\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Languages.Edit') && record.tenantId === appSession.tenantId\\\"\\n                                                       (click)=\\\"createOrEditLanguageModal.show(record.id)\\\">{{l('Edit')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Languages.ChangeTexts')\\\"\\n                                                       (click)=\\\"changeTexts(record)\\\">{{l('ChangeTexts')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Languages.Edit')\\\"\\n                                                       (click)=\\\"setAsDefaultLanguage(record)\\\">{{l('SetAsDefaultLanguage')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Languages.Delete') && record.tenantId === appSession.tenantId\\\"\\n                                                       (click)=\\\"deleteLanguage(record)\\\">{{l('Delete')}}</a>\\n                                                </li>\\n                                            </ul>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <span [ngClass]=\\\"{'text-bold' : defaultLanguageName === record.name}\\\">\\n                                            <i [ngClass]=\\\"record.icon\\\" class=\\\"margin-right-5\\\"></i>\\n                                            {{record.displayName}} <span *ngIf=\\\"defaultLanguageName === record.name\\\">({{l('Default')}})</span>\\n                                        </span>\\n                                    </td>\\n                                    <td>\\n                                        {{record.name}}\\n                                    </td>\\n                                    <td *ngIf=\\\"appSession.tenantId ? true : false\\\">\\n                                        <span class=\\\"label m-badge m-badge--success m-badge--wide\\\"\\n                                              *ngIf=\\\"record.tenantId !== appSession.tenantId\\\">\\n                                            {{l('Yes')}}\\n                                        </span>\\n                                        <span class=\\\"label m-badge m-badge--metal m-badge--wide\\\"\\n                                              *ngIf=\\\"record.tenantId === appSession.tenantId\\\">\\n                                            {{l('No')}}\\n                                        </span>\\n                                    </td>\\n                                    <td>\\n                                        {{record.creationTime | momentFormat:'L'}}\\n                                    </td>\\n                                    <td>\\n                                        <span class=\\\"label m-badge m-badge--success m-badge--wide\\\"\\n                                              *ngIf=\\\"!record.isDisabled\\\">\\n                                            {{l('Yes')}}\\n                                        </span>\\n                                        <span class=\\\"label m-badge m-badge--metal m-badge--wide\\\"\\n                                              *ngIf=\\\"record.isDisabled\\\">\\n                                            {{l('No')}}\\n                                        </span>\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                        </p-table>\\n                        <div class=\\\"ui-table-footer\\\">\\n                            {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\n                        </div>\\n                    </div>\\n                    <!--<Primeng-TurboTable-End>-->\\n\\n                    <p class=\\\"margin-top-20\\\" *ngIf=\\\"appSession.tenantId\\\">\\n                        * {{l(\\\"CanNotEditOrDeleteDefaultLanguages\\\")}}\\n                    </p>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <createOrEditLanguageModal #createOrEditLanguageModal (modalSave)=\\\"getLanguages()\\\"></createOrEditLanguageModal>\\n</div>\\n\"","import { Component, ElementRef, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { ApplicationLanguageListDto, LanguageServiceProxy, SetDefaultLanguageInput } from '@shared/service-proxies/service-proxies';\nimport { Paginator } from 'primeng/components/paginator/paginator';\nimport { Table } from 'primeng/components/table/table';\nimport { CreateOrEditLanguageModalComponent } from './create-or-edit-language-modal.component';\n\n@Component({\n    templateUrl: './languages.component.html',\n    encapsulation: ViewEncapsulation.None,\n    animations: [appModuleAnimation()]\n})\nexport class LanguagesComponent extends AppComponentBase {\n\n    @ViewChild('languagesTable') languagesTable: ElementRef;\n    @ViewChild('createOrEditLanguageModal') createOrEditLanguageModal: CreateOrEditLanguageModalComponent;\n    @ViewChild('dataTable') dataTable: Table;\n    @ViewChild('paginator') paginator: Paginator;\n\n    defaultLanguageName: string;\n    private _$languagesTable: JQuery;\n\n    constructor(\n        injector: Injector,\n        private _languageService: LanguageServiceProxy,\n        private _router: Router\n    ) {\n        super(injector);\n    }\n\n    getLanguages(): void {\n        this.primengTableHelper.showLoadingIndicator();\n\n        this._languageService.getLanguages().subscribe(result => {\n            this.defaultLanguageName = result.defaultLanguageName;\n            this.primengTableHelper.records = result.items;\n            this.primengTableHelper.totalRecordsCount = result.items.length;\n            this.primengTableHelper.hideLoadingIndicator();\n        });\n    }\n\n    changeTexts(language: ApplicationLanguageListDto): void {\n        this._router.navigate(['app/admin/languages', language.name, 'texts']);\n    }\n\n    setAsDefaultLanguage(language: ApplicationLanguageListDto): void {\n        const input = new SetDefaultLanguageInput();\n        input.name = language.name;\n        this._languageService.setDefaultLanguage(input).subscribe(() => {\n            this.getLanguages();\n            this.notify.success(this.l('SuccessfullySaved'));\n        });\n    }\n\n    deleteLanguage(language: ApplicationLanguageListDto): void {\n        this.message.confirm(\n            this.l('LanguageDeleteWarningMessage', language.displayName),\n            isConfirmed => {\n                if (isConfirmed) {\n                    this._languageService.deleteLanguage(language.id).subscribe(() => {\n                        this.getLanguages();\n                        this.notify.success(this.l('SuccessfullyDeleted'));\n                    });\n                }\n            }\n        );\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto\\\">\\n                <h3 class=\\\"m-subheader__title\\\">\\n                    <span>{{l(\\\"Maintenance\\\")}}</span>\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <tabset class=\\\"tab-container tabbable-line\\\">\\n                    <tab heading=\\\" {{l('Caches')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"row margin-bottom-10\\\">\\n                            <div class=\\\"col-xl-6\\\">\\n                                <p>{{l(\\\"CachesHeaderInfo\\\")}}</p>\\n                            </div>\\n                            <div class=\\\"col-xl-6 text-right\\\">\\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"clearAllCaches()\\\"><i class=\\\"fa fa-recycle\\\"></i> {{l(\\\"ClearAll\\\")}}</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xl-12\\\">\\n                                <table class=\\\"table table-striped table-hover table-bordered\\\">\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let cache of caches\\\">\\n                                            <td>\\n                                                <span>{{cache.name}}</span>\\n                                                <button class=\\\"btn btn-primary btn-sm pull-right\\\" (click)=\\\"clearCache(cache.name);\\\">\\n                                                    {{l(\\\"Clear\\\")}}\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </tab>\\n                    <tab heading=\\\"{{l('WebSiteLogs')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"row margin-bottom-10\\\">\\n                            <div class=\\\"col-xl-6\\\">\\n                                <p>{{l(\\\"WebSiteLogsHeaderInfo\\\")}}</p>\\n                            </div>\\n                            <div class=\\\"col-xl-6 text-right\\\">\\n                                <button class=\\\"btn btn-metal\\\" (click)=\\\"downloadWebLogs()\\\"><i class=\\\"fa fa-download\\\"></i> {{l(\\\"DownloadAll\\\")}}</button>\\n                                <button class=\\\"btn btn-primary\\\" (click)=\\\"getWebLogs()\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xl-12\\\">\\n                                <div class=\\\"web-log-view full-height\\\">\\n                                    <span class=\\\"log-line\\\" *ngFor=\\\"let log of logs\\\">\\n                                        <span [class]=\\\"getLogClass(log)\\\">{{getLogType(log)}}</span>\\n                                        {{getRawLogContent(log)}}\\n                                    </span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </tab>\\n                </tabset>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".web-log-view {\\n  font-family: \\\"Courier New\\\";\\n  overflow-x: scroll;\\n  overflow-y: scroll;\\n  height: 100%;\\n  white-space: nowrap;\\n}\\n.web-log-view span.log-line {\\n  margin-bottom: 5px;\\n  display: block;\\n}\\n.web-log-view span.log-line span.label {\\n  width: 50px;\\n  display: inline-block;\\n}\\n\"","import { AfterViewChecked, AfterViewInit, Component, Injector, OnInit } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { CachingServiceProxy, EntityDtoOfString, WebLogServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { FileDownloadService } from '@shared/utils/file-download.service';\nimport * as _ from 'lodash';\n\n@Component({\n    templateUrl: './maintenance.component.html',\n    styleUrls: ['./maintenance.component.less'],\n    animations: [appModuleAnimation()]\n})\nexport class MaintenanceComponent extends AppComponentBase implements OnInit, AfterViewInit, AfterViewChecked {\n\n    loading = false;\n    caches: any = null;\n    logs: any = '';\n\n    constructor(\n        injector: Injector,\n        private _cacheService: CachingServiceProxy,\n        private _webLogService: WebLogServiceProxy,\n        private _fileDownloadService: FileDownloadService) {\n        super(injector);\n    }\n\n    ngAfterViewChecked(): void {\n        //Temporary fix for: https://github.com/valor-software/ngx-bootstrap/issues/1508\n        $('tabset ul.nav').addClass('m-tabs-line');\n        $('tabset ul.nav li a.nav-link').addClass('m-tabs__link');\n    }\n\n    getCaches(): void {\n        const self = this;\n        self.loading = true;\n        self._cacheService.getAllCaches()\n            .finally(() => {\n                self.loading = false;\n            })\n            .subscribe((result) => {\n                self.caches = result.items;\n            });\n    }\n\n    clearCache(cacheName): void {\n        const self = this;\n        const input = new EntityDtoOfString();\n        input.id = cacheName;\n\n        self._cacheService.clearCache(input).subscribe(() => {\n            self.notify.success(self.l('CacheSuccessfullyCleared'));\n        });\n    }\n\n    clearAllCaches(): void {\n        const self = this;\n        self._cacheService.clearAllCaches().subscribe(() => {\n            self.notify.success(self.l('AllCachesSuccessfullyCleared'));\n        });\n    }\n\n    getWebLogs(): void {\n        const self = this;\n        self._webLogService.getLatestWebLogs().subscribe((result) => {\n            self.logs = result.latestWebLogLines;\n            self.fixWebLogsPanelHeight();\n        });\n    }\n\n    downloadWebLogs = function () {\n        const self = this;\n        self._webLogService.downloadWebLogs().subscribe((result) => {\n            self._fileDownloadService.downloadTempFile(result);\n        });\n    };\n\n    getLogClass(log: string): string {\n\n        if (log.startsWith('DEBUG')) {\n            return 'label label-default';\n        }\n\n        if (log.startsWith('INFO')) {\n            return 'label label-info';\n        }\n\n        if (log.startsWith('WARN')) {\n            return 'label label-warning';\n        }\n\n        if (log.startsWith('ERROR')) {\n            return 'label label-danger';\n        }\n\n        if (log.startsWith('FATAL')) {\n            return 'label label-danger';\n        }\n\n        return '';\n    }\n\n    getLogType(log: string): string {\n        if (log.startsWith('DEBUG')) {\n            return 'DEBUG';\n        }\n\n        if (log.startsWith('INFO')) {\n            return 'INFO';\n        }\n\n        if (log.startsWith('WARN')) {\n            return 'WARN';\n        }\n\n        if (log.startsWith('ERROR')) {\n            return 'ERROR';\n        }\n\n        if (log.startsWith('FATAL')) {\n            return 'FATAL';\n        }\n\n        return '';\n    }\n\n    getRawLogContent(log: string): string {\n        return _.escape(log)\n            .replace('DEBUG', '')\n            .replace('INFO', '')\n            .replace('WARN', '')\n            .replace('ERROR', '')\n            .replace('FATAL', '');\n    }\n\n    fixWebLogsPanelHeight(): void {\n        const windowHeight = $(window).height();\n        const panelHeight = $('.full-height').height();\n        const difference = windowHeight - panelHeight;\n        const fixedHeight = panelHeight + difference;\n        $('.full-height').css('height', (fixedHeight - 350) + 'px');\n    }\n\n    ngAfterViewInit(): void {\n        $(window).bind('resize', () => {\n            this.fixWebLogsPanelHeight();\n        });\n    }\n\n    ngOnInit(): void {\n        const self = this;\n        self.getCaches();\n        self.getWebLogs();\n    }\n}\n","module.exports = \"<div bsModal #modal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal\\\"\\n     (onShown)=\\\"shown()\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">\\n                    <span>{{l('SelectUsers')}}</span>\\n                </h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n\\n            <div class=\\\"modal-body\\\">\\n                <form novalidate (ngSubmit)=\\\"refreshTable()\\\" autocomplete=\\\"off\\\">\\n                    <div class=\\\"input-group margin-bottom-10\\\">\\n                        <input autoFocus [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" class=\\\"form-control\\\" placeholder=\\\"{{l('SearchWithThreeDot')}}\\\" type=\\\"text\\\">\\n                        <span class=\\\"input-group-btn\\\">\\n                            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\n                        </span>\\n                    </div>\\n\\n                    <!--<Primeng-TurboTable-Start>-->\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                        <p-table #dataTable\\n                                 (onLazyLoad)=\\\"getRecordsIfNeeds($event)\\\"\\n                                 [value]=\\\"primengTableHelper.records\\\"\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                 [paginator]=\\\"false\\\"\\n                                 [lazy]=\\\"true\\\"\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\"\\n                                 [(selection)]=\\\"selectedMembers\\\"\\n                                 selectionMode=\\\"multiple\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th style=\\\"width:38px\\\">\\n                                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\n                                    </th>\\n                                    <th>\\n                                        {{l('Name')}}\\n                                    </th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                <tr [pSelectableRow]=\\\"record\\\">\\n                                    <td style=\\\"width: 38px\\\">\\n                                        <p-tableCheckbox [value]=\\\"record\\\"></p-tableCheckbox>\\n                                    </td>\\n                                    <td>\\n                                        {{record.name}}\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                        </p-table>\\n                        <div class=\\\"primeng-paging-container\\\">\\n                            <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                         #paginator\\n                                         (onPageChange)=\\\"getRecordsIfNeeds($event)\\\"\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\n                            </p-paginator>\\n                            <span class=\\\"total-records-count\\\">\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\n                            </span>\\n                        </div>\\n                    </div>\\n                    <!--<Primeng-TurboTable-End>-->\\n                </form>\\n\\n            </div>\\n\\n            <div class=\\\"modal-footer\\\">\\n                <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"addUsersToOrganizationUnit()\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { FindOrganizationUnitUsersInput, NameValueDto, OrganizationUnitServiceProxy, UsersToOrganizationUnitInput } from '@shared/service-proxies/service-proxies';\nimport * as _ from 'lodash';\nimport { ModalDirective } from 'ngx-bootstrap';\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\nimport { Paginator } from 'primeng/components/paginator/paginator';\nimport { Table } from 'primeng/components/table/table';\nimport { IUsersWithOrganizationUnit } from './users-with-organization-unit';\n\n@Component({\n    selector: 'addMemberModal',\n    templateUrl: './add-member-modal.component.html'\n})\nexport class AddMemberModalComponent extends AppComponentBase {\n\n    organizationUnitId: number;\n\n    @Output() membersAdded: EventEmitter<IUsersWithOrganizationUnit> = new EventEmitter<IUsersWithOrganizationUnit>();\n\n    @ViewChild('modal') modal: ModalDirective;\n    @ViewChild('dataTable') dataTable: Table;\n    @ViewChild('paginator') paginator: Paginator;\n\n    isShown = false;\n    filterText = '';\n    tenantId?: number;\n    saving = false;\n    selectedMembers: NameValueDto[];\n\n    constructor(\n        injector: Injector,\n        private _organizationUnitService: OrganizationUnitServiceProxy\n    ) {\n        super(injector);\n    }\n\n    show(): void {\n        this.modal.show();\n    }\n\n    refreshTable(): void {\n        this.paginator.changePage(this.paginator.getPage());\n    }\n\n    close(): void {\n        this.modal.hide();\n    }\n\n    shown(): void {\n        this.isShown = true;\n        this.getRecordsIfNeeds(null);\n    }\n\n    getRecordsIfNeeds(event: LazyLoadEvent): void {\n        if (!this.isShown) {\n            return;\n        }\n\n        this.getRecords(event);\n    }\n\n    getRecords(event?: LazyLoadEvent): void {\n\n        if (this.primengTableHelper.shouldResetPaging(event)) {\n            this.paginator.changePage(0);\n\n            return;\n        }\n\n        this.primengTableHelper.showLoadingIndicator();\n\n        const input = new FindOrganizationUnitUsersInput();\n        input.organizationUnitId = this.organizationUnitId;\n        input.filter = this.filterText;\n        input.skipCount = this.primengTableHelper.getSkipCount(this.paginator, event);\n        input.maxResultCount = this.primengTableHelper.getMaxResultCount(this.paginator, event);\n\n        this._organizationUnitService\n            .findUsers(input)\n            .subscribe(result => {\n                this.primengTableHelper.totalRecordsCount = result.totalCount;\n                this.primengTableHelper.records = result.items;\n                this.primengTableHelper.hideLoadingIndicator();\n            });\n    }\n\n    addUsersToOrganizationUnit(): void {\n        const input = new UsersToOrganizationUnitInput();\n        input.organizationUnitId = this.organizationUnitId;\n        input.userIds = _.map(this.selectedMembers, selectedMember => Number(selectedMember.value));\n        this.saving = true;\n        this._organizationUnitService\n            .addUsersToOrganizationUnit(input)\n            .subscribe(() => {\n                this.notify.success(this.l('SuccessfullyAdded'));\n                this.membersAdded.emit({\n                    userIds: input.userIds,\n                    ouId: input.organizationUnitId\n                });\n                this.saving = false;\n                this.close();\n                this.selectedMembers = [];\n            });\n    }\n}\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n\\n        <div class=\\\"modal-content\\\">\\n\\n            <form *ngIf=\\\"active\\\" #editForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\n\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\">\\n                        <span *ngIf=\\\"organizationUnit.id\\\">{{l(\\\"Edit\\\")}}: {{organizationUnit.displayName}}</span>\\n                        <span *ngIf=\\\"!organizationUnit.id\\\">{{l(\\\"NewOrganizationUnit\\\")}}</span>\\n                    </h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n\\n                <div class=\\\"modal-body\\\">\\n\\n                    <div class=\\\"form-group form-md-line-input form-md-floating-label no-hint\\\">\\n                        <label for=\\\"OrganizationUnitDisplayName\\\">{{l(\\\"Name\\\")}} *</label>\\n                        <input id=\\\"OrganizationUnitDisplayName\\\" #organizationUnitDisplayName=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"displayName\\\" [ngClass]=\\\"{'edited': organizationUnit.displayName}\\\" [(ngModel)]=\\\"organizationUnit.displayName\\\" required maxlength=\\\"128\\\">\\n                        <validation-messages [formCtrl]=\\\"organizationUnitDisplayName\\\"></validation-messages>\\n                    </div>\\n\\n                </div>\\n\\n                <div class=\\\"modal-footer\\\">\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!editForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\\n\"","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { CreateOrganizationUnitInput, OrganizationUnitDto, OrganizationUnitServiceProxy, UpdateOrganizationUnitInput } from '@shared/service-proxies/service-proxies';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nexport interface IOrganizationUnitOnEdit {\n    id?: number;\n    parentId?: number;\n    displayName?: string;\n}\n\n@Component({\n    selector: 'createOrEditOrganizationUnitModal',\n    templateUrl: './create-or-edit-unit-modal.component.html'\n})\nexport class CreateOrEditUnitModalComponent extends AppComponentBase {\n\n    @ViewChild('createOrEditModal') modal: ModalDirective;\n    @ViewChild('organizationUnitDisplayName') organizationUnitDisplayNameInput: ElementRef;\n\n    @Output() unitCreated: EventEmitter<OrganizationUnitDto> = new EventEmitter<OrganizationUnitDto>();\n    @Output() unitUpdated: EventEmitter<OrganizationUnitDto> = new EventEmitter<OrganizationUnitDto>();\n\n    active = false;\n    saving = false;\n\n    organizationUnit: IOrganizationUnitOnEdit = {};\n\n    constructor(\n        injector: Injector,\n        private _organizationUnitService: OrganizationUnitServiceProxy,\n        private _changeDetector: ChangeDetectorRef\n    ) {\n        super(injector);\n    }\n\n    onShown(): void {\n        $(this.organizationUnitDisplayNameInput.nativeElement).focus();\n    }\n\n    show(organizationUnit: IOrganizationUnitOnEdit): void {\n        this.organizationUnit = organizationUnit;\n        this.active = true;\n        this.modal.show();\n        this._changeDetector.detectChanges();\n    }\n\n    save(): void {\n        if (!this.organizationUnit.id) {\n            this.createUnit();\n        } else {\n            this.updateUnit();\n        }\n    }\n\n    createUnit() {\n        const createInput = new CreateOrganizationUnitInput();\n        createInput.parentId = this.organizationUnit.parentId;\n        createInput.displayName = this.organizationUnit.displayName;\n\n        this.saving = true;\n        this._organizationUnitService\n            .createOrganizationUnit(createInput)\n            .finally(() => this.saving = false)\n            .subscribe((result: OrganizationUnitDto) => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n                this.unitCreated.emit(result);\n            });\n    }\n\n    updateUnit() {\n        const updateInput = new UpdateOrganizationUnitInput();\n        updateInput.id = this.organizationUnit.id;\n        updateInput.displayName = this.organizationUnit.displayName;\n\n        this.saving = true;\n        this._organizationUnitService\n            .updateOrganizationUnit(updateInput)\n            .finally(() => this.saving = false)\n            .subscribe((result: OrganizationUnitDto) => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n                this.unitUpdated.emit(result);\n            });\n    }\n\n    close(): void {\n        this.modal.hide();\n        this.active = false;\n    }\n}\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\n    <div class=\\\"m-portlet__head\\\">\\n        <div class=\\\"m-portlet__head-caption\\\">\\n            <div class=\\\"m-portlet__head-title\\\">\\n                <h3 class=\\\"m-portlet__head-text\\\">\\n                    {{l(\\\"OrganizationTree\\\")}}\\n                </h3>\\n            </div>\\n        </div>\\n        <div class=\\\"m-portlet__head-tools\\\">\\n            <button *ngIf=\\\"isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree')\\\" (click)=\\\"addUnit(null)\\\" class=\\\"btn btn-primary\\\">\\n                <i class=\\\"fa fa-plus\\\"></i> {{l(\\\"AddRootUnit\\\")}}\\n            </button>\\n        </div>\\n    </div>\\n    <div class=\\\"m-portlet__body\\\">\\n        <div #tree></div>\\n        <div *ngIf=\\\"!totalUnitCount\\\" class=\\\"text-muted\\\">\\n            {{l(\\\"NoOrganizationUnitDefinedYet\\\")}}\\n        </div>\\n    </div>\\n</div>\\n\\n<createOrEditOrganizationUnitModal #createOrEditOrganizationUnitModal (unitCreated)=\\\"unitCreated($event)\\\" (unitUpdated)=\\\"unitUpdated($event)\\\"></createOrEditOrganizationUnitModal>\\n\"","module.exports = \".ou-text {\\n  color: #999;\\n}\\n.ou-text.ou-text-has-members {\\n  color: #000;\\n}\\n.ou-text.ou-text-has-members .ou-text-member-count {\\n  font-weight: bold;\\n}\\n\"","import { AfterViewInit, Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { HtmlHelper } from '@shared/helpers/HtmlHelper';\nimport { ListResultDtoOfOrganizationUnitDto, MoveOrganizationUnitInput, OrganizationUnitDto, OrganizationUnitServiceProxy } from '@shared/service-proxies/service-proxies';\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs/Observable';\nimport { IBasicOrganizationUnitInfo } from './basic-organization-unit-info';\nimport { CreateOrEditUnitModalComponent } from './create-or-edit-unit-modal.component';\nimport { IUserWithOrganizationUnit } from './user-with-organization-unit';\nimport { IUsersWithOrganizationUnit } from './users-with-organization-unit';\n\nexport interface IOrganizationUnitOnTree extends IBasicOrganizationUnitInfo {\n    id: number;\n    parent: string | number;\n    code: string;\n    displayName: string;\n    memberCount: number;\n    text: string;\n    state: any;\n}\n\n@Component({\n    selector: 'organization-tree',\n    templateUrl: './organization-tree.component.html',\n    styleUrls: ['./organization-tree.component.less']\n})\nexport class OrganizationTreeComponent extends AppComponentBase implements AfterViewInit {\n\n    @Output() ouSelected = new EventEmitter<IBasicOrganizationUnitInfo>();\n\n    @ViewChild('tree') tree: ElementRef;\n    @ViewChild('createOrEditOrganizationUnitModal') createOrEditOrganizationUnitModal: CreateOrEditUnitModalComponent;\n\n    private _$tree: JQuery;\n    private _updatingNode: any;\n\n    constructor(\n        injector: Injector,\n        private _organizationUnitService: OrganizationUnitServiceProxy\n    ) {\n        super(injector);\n    }\n\n    totalUnitCount = 0;\n\n    set selectedOu(ou: IOrganizationUnitOnTree) {\n        this._selectedOu = ou;\n        this.ouSelected.emit(ou);\n    }\n\n    private _selectedOu: IOrganizationUnitOnTree;\n\n    ngAfterViewInit(): void {\n        const self = this;\n        this._$tree = $(this.tree.nativeElement);\n        this.getTreeDataFromServer(treeData => {\n            this.totalUnitCount = treeData.length;\n\n            const jsTreePlugins = [\n                'types',\n                'contextmenu',\n                'wholerow',\n                'sort'\n            ];\n\n            if (this.isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree')) {\n                jsTreePlugins.push('dnd');\n            }\n\n            this._$tree\n                .on('changed.jstree', (e, data) => {\n                    if (data.selected.length !== 1) {\n                        this.selectedOu = null;\n                    } else {\n                        this.selectedOu = data.instance.get_node(data.selected[0]).original;\n                    }\n                })\n                .on('move_node.jstree', (e, data) => {\n                    if (!this.isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree')) {\n                        this._$tree.jstree('refresh'); //rollback\n                        return;\n                    }\n\n                    const parentNodeName = (!data.parent || data.parent === '#')\n                        ? this.l('Root')\n                        : this._$tree.jstree('get_node', data.parent).original.displayName;\n\n                    this.message.confirm(\n                        this.l('OrganizationUnitMoveConfirmMessage', data.node.original.displayName, parentNodeName),\n                        isConfirmed => {\n                            if (isConfirmed) {\n                                const input = new MoveOrganizationUnitInput();\n                                input.id = data.node.id;\n                                input.newParentId = (!data.parent || data.parent === '#') ? undefined : data.parent;\n                                this._organizationUnitService.moveOrganizationUnit(input)\n                                    .catch(error => {\n                                        this._$tree.jstree('refresh'); //rollback\n                                        return Observable.throw(error);\n                                    })\n                                    .subscribe(() => {\n                                        this.notify.success(this.l('SuccessfullyMoved'));\n                                        this.reload();\n                                    });\n                            } else {\n                                this._$tree.jstree('refresh'); //rollback\n                            }\n                        }\n                    );\n                })\n                .jstree({\n                    'core': {\n                        data: treeData,\n                        multiple: false,\n                        check_callback: () => true\n                    },\n                    types: {\n                        'default': {\n                            'icon': 'fa fa-folder m--font-warning'\n                        },\n                        'file': {\n                            'icon': 'fa fa-file m--font-warning'\n                        }\n                    },\n                    contextmenu: {\n                        items: function (node) { return self.contextMenu(node, self); }\n                    },\n                    sort: function (node1, node2) {\n                        if (this.get_node(node2).original.displayName < this.get_node(node1).original.displayName) {\n                            return 1;\n                        }\n\n                        return -1;\n                    },\n                    plugins: jsTreePlugins\n                });\n\n            this._$tree.on('click', '.ou-text .fa-caret-down', function (e) {\n                e.preventDefault();\n\n                const ouId = $(this).closest('.ou-text').attr('data-ou-id');\n                setTimeout(() => {\n                    self._$tree.jstree('show_contextmenu', ouId);\n                }, 100);\n            });\n        });\n    }\n\n    reload(): void {\n        this.getTreeDataFromServer(treeData => {\n            this.totalUnitCount = treeData.length;\n            (<any>this._$tree.jstree(true)).settings.core.data = treeData;\n            this._$tree.jstree('refresh');\n        });\n    }\n\n    private getTreeDataFromServer(callback: (ous: IOrganizationUnitOnTree[]) => void): void {\n        this._organizationUnitService.getOrganizationUnits().subscribe((result: ListResultDtoOfOrganizationUnitDto) => {\n            const treeData = _.map(result.items, item => (<IOrganizationUnitOnTree>{\n                id: item.id,\n                parent: item.parentId ? item.parentId : '#',\n                code: item.code,\n                displayName: item.displayName,\n                memberCount: item.memberCount,\n                text: this.generateTextOnTree(item),\n                dto: item,\n                state: {\n                    opened: true\n                }\n            }));\n\n            callback(treeData);\n        });\n    }\n\n    private generateTextOnTree(ou: IOrganizationUnitOnTree | OrganizationUnitDto) {\n        const itemClass = ou.memberCount > 0 ? ' ou-text-has-members' : ' ou-text-no-members';\n        return '<span title=\"' + ou.code + '\" class=\"ou-text' + itemClass + '\" data-ou-id=\"' + ou.id + '\">' + HtmlHelper.encodeText(ou.displayName) + ' (<span class=\"ou-text-member-count\">' + ou.memberCount + '</span>) <i class=\"fa fa-caret-down text-muted\"></i></span>';\n    }\n\n    private contextMenu(node: any, self: OrganizationTreeComponent) {\n        const canManageOrganizationTree = self.isGranted('Pages.Administration.OrganizationUnits.ManageOrganizationTree');\n\n        const items = {\n            editUnit: {\n                label: self.l('Edit'),\n                _disabled: !canManageOrganizationTree,\n                action: () => {\n                    self._updatingNode = node;\n                    self.createOrEditOrganizationUnitModal.show({\n                        id: node.id,\n                        displayName: node.original.displayName\n                    });\n                }\n            },\n\n            addSubUnit: {\n                label: self.l('AddSubUnit'),\n                _disabled: !canManageOrganizationTree,\n                action: () => {\n                    self.addUnit(node.id);\n                }\n            },\n\n            'delete': {\n                label: self.l('Delete'),\n                _disabled: !canManageOrganizationTree,\n                action: data => {\n                    const instance = $.jstree.reference(data.reference);\n\n                    this.message.confirm(\n                        this.l('OrganizationUnitDeleteWarningMessage', node.original.displayName),\n                        isConfirmed => {\n                            if (isConfirmed) {\n                                this._organizationUnitService.deleteOrganizationUnit(node.id).subscribe(() => {\n                                    this.selectedOu = null;\n                                    this.notify.success(this.l('SuccessfullyDeleted'));\n                                    instance.delete_node(node);\n                                });\n                            }\n                        }\n                    );\n                }\n            }\n        };\n\n        return items;\n    }\n\n    addUnit(parentId?: number): void {\n        this.createOrEditOrganizationUnitModal.show({\n            parentId: parentId\n        });\n    }\n\n    unitCreated(ou: OrganizationUnitDto): void {\n        const instance = $.jstree.reference(this._$tree);\n        instance.create_node(\n            ou.parentId ? instance.get_node(ou.parentId) : '#',\n            {\n                id: ou.id,\n                parent: ou.parentId ? ou.parentId : '#',\n                code: ou.code,\n                displayName: ou.displayName,\n                memberCount: 0,\n                text: this.generateTextOnTree(ou),\n                state: {\n                    opened: true\n                }\n            });\n\n        this.totalUnitCount += 1;\n    }\n\n    unitUpdated(ou: OrganizationUnitDto): void {\n        const instance = $.jstree.reference(this._$tree);\n        this._updatingNode.original.displayName = ou.displayName;\n        instance.rename_node(this._updatingNode, this.generateTextOnTree(ou));\n    }\n\n    membersAdded(data: IUsersWithOrganizationUnit): void {\n        this.incrementMemberCount(data.ouId, data.userIds.length);\n    }\n\n    memberRemoved(data: IUserWithOrganizationUnit): void {\n        this.incrementMemberCount(data.ouId, -1);\n    }\n\n    incrementMemberCount(ouId: number, incrementAmount: number): void {\n        const treeNode = this._$tree.jstree('get_node', ouId);\n        treeNode.original.memberCount = treeNode.original.memberCount + incrementAmount;\n        this._$tree.jstree('rename_node', treeNode, this.generateTextOnTree(treeNode.original));\n    }\n}\n","module.exports = \"<div class=\\\"m-portlet m-portlet--mobile\\\">\\n    <div class=\\\"m-portlet__head\\\">\\n        <div class=\\\"m-portlet__head-caption\\\">\\n            <div class=\\\"m-portlet__head-title\\\">\\n                <h3 class=\\\"m-portlet__head-text\\\">\\n                    <span *ngIf=\\\"organizationUnit\\\">{{organizationUnit.displayName}}</span>\\n                    <span *ngIf=\\\"!organizationUnit\\\">{{l(\\\"Members\\\")}}</span>\\n                </h3>\\n            </div>\\n        </div>\\n        <div class=\\\"m-portlet__head-tools\\\" *ngIf=\\\"organizationUnit\\\">\\n            <button *ngIf=\\\"isGranted('Pages.Administration.OrganizationUnits.ManageMembers')\\\" (click)=\\\"openAddModal()\\\" class=\\\"btn btn-primary\\\">\\n                <i class=\\\"fa fa-plus\\\"></i> {{l(\\\"AddMember\\\")}}\\n            </button>\\n        </div>\\n    </div>\\n    <div class=\\\"m-portlet__body\\\">\\n        <div id=\\\"OuMembersTable\\\">\\n            <!--<Primeng-TurboTable-Start>-->\\n            <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\" [hidden]=\\\"!organizationUnit\\\">\\n                <p-table #dataTable\\n                             (onLazyLoad)=\\\"getOrganizationUnitUsers($event)\\\"\\n                             [value]=\\\"primengTableHelper.records\\\"\\n                             rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                             [paginator]=\\\"false\\\"\\n                             [lazy]=\\\"true\\\"\\n                             [responsive]=\\\"primengTableHelper.isResponsive\\\">\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <tr>\\n                            <th style=\\\"width:15%\\\"\\n                                [hidden]=\\\"!permission.isGranted('Pages.Administration.OrganizationUnits.ManageMembers')\\\">{{l('Delete')}}</th>\\n                            <th pSortableColumn=\\\"userName\\\">\\n                                {{l('UserName')}}\\n                                <p-sortIcon field=\\\"userName\\\"></p-sortIcon>\\n                            </th>\\n                            <th pSortableColumn=\\\"addedTime\\\">\\n                                {{l('AddedTime')}}\\n                                <p-sortIcon field=\\\"addedTime\\\"></p-sortIcon>\\n                            </th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                        <tr>\\n                            <td [hidden]=\\\"!permission.isGranted('Pages.Administration.OrganizationUnits.ManageMembers')\\\">\\n                                <button class=\\\"btn btn-outline-danger m-btn m-btn--icon m-btn--icon-only m-btn--pill\\\"\\n                                        (click)=\\\"removeMember(record)\\\"\\n                                        title=\\\"{{l('Delete')}}\\\">\\n                                    <i class=\\\"fa fa-times\\\" [attr.aria-label]=\\\"l('Delete')\\\"></i>\\n                                </button>\\n                            </td>\\n                            <td >\\n                                {{record.userName}}\\n                            </td>\\n                            <td >\\n                                {{record.addedTime | momentFormat:'L'}}\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n                <div class=\\\"primeng-paging-container\\\">\\n                    <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                 #paginator\\n                                 (onPageChange)=\\\"getOrganizationUnitUsers($event)\\\"\\n                                 [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\n                                 [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\n                    </p-paginator>\\n                    <span class=\\\"total-records-count\\\">\\n                        {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\n                    </span>\\n                </div>\\n            </div>\\n            <!--<Primeng-TurboTable-End>-->\\n        </div>\\n\\n        <div *ngIf=\\\"!organizationUnit\\\" class=\\\"text-muted\\\">\\n            {{l(\\\"SelectAnOrganizationUnitToSeeMembers\\\")}}\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<addMemberModal #addMemberModal (membersAdded)=\\\"addMembers($event)\\\"></addMemberModal>\\n\"","import { ChangeDetectorRef, Component, EventEmitter, Injector, OnInit, Output, ViewChild } from '@angular/core';\nimport { AddMemberModalComponent } from '@app/admin/organization-units/add-member-modal.component';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { OrganizationUnitServiceProxy, OrganizationUnitUserListDto } from '@shared/service-proxies/service-proxies';\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\nimport { Paginator } from 'primeng/components/paginator/paginator';\nimport { Table } from 'primeng/components/table/table';\nimport { IBasicOrganizationUnitInfo } from './basic-organization-unit-info';\nimport { IUserWithOrganizationUnit } from './user-with-organization-unit';\nimport { IUsersWithOrganizationUnit } from './users-with-organization-unit';\n\n@Component({\n    selector: 'organization-unit-members',\n    templateUrl: './organization-unit-members.component.html'\n})\nexport class OrganizationUnitMembersComponent extends AppComponentBase implements OnInit {\n\n    @Output() memberRemoved = new EventEmitter<IUserWithOrganizationUnit>();\n    @Output() membersAdded = new EventEmitter<IUsersWithOrganizationUnit>();\n\n    @ViewChild('addMemberModal') addMemberModal: AddMemberModalComponent;\n    @ViewChild('dataTable') dataTable: Table;\n    @ViewChild('paginator') paginator: Paginator;\n\n    private _organizationUnit: IBasicOrganizationUnitInfo = null;\n\n    constructor(\n        injector: Injector,\n        private _changeDetector: ChangeDetectorRef,\n        private _organizationUnitService: OrganizationUnitServiceProxy\n    ) {\n        super(injector);\n    }\n\n    get organizationUnit(): IBasicOrganizationUnitInfo {\n        return this._organizationUnit;\n    }\n\n    set organizationUnit(ou: IBasicOrganizationUnitInfo) {\n        if (this._organizationUnit === ou) {\n            return;\n        }\n\n        this._organizationUnit = ou;\n        this.addMemberModal.organizationUnitId = ou.id;\n        if (ou) {\n            this.refreshMembers();\n        }\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    getOrganizationUnitUsers(event?: LazyLoadEvent) {\n        if (!this._organizationUnit) {\n            return;\n        }\n\n        if (this.primengTableHelper.shouldResetPaging(event)) {\n            this.paginator.changePage(0);\n\n            return;\n        }\n\n        this.primengTableHelper.showLoadingIndicator();\n        this._organizationUnitService.getOrganizationUnitUsers(\n            this._organizationUnit.id,\n            this.primengTableHelper.getSorting(this.dataTable),\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\n            this.primengTableHelper.getSkipCount(this.paginator, event)\n        ).subscribe(result => {\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\n            this.primengTableHelper.records = result.items;\n            this.primengTableHelper.hideLoadingIndicator();\n        });\n    }\n\n    reloadPage(): void {\n        this.paginator.changePage(this.paginator.getPage());\n    }\n\n    refreshMembers(): void {\n        this.reloadPage();\n    }\n\n    openAddModal(): void {\n        this.addMemberModal.show();\n    }\n\n    removeMember(user: OrganizationUnitUserListDto): void {\n        this.message.confirm(\n            this.l('RemoveUserFromOuWarningMessage', user.userName, this.organizationUnit.displayName),\n            isConfirmed => {\n                if (isConfirmed) {\n                    this._organizationUnitService\n                        .removeUserFromOrganizationUnit(user.id, this.organizationUnit.id)\n                        .subscribe(() => {\n                            this.notify.success(this.l('SuccessfullyRemoved'));\n                            this.memberRemoved.emit({\n                                userId: user.id,\n                                ouId: this.organizationUnit.id\n                            });\n\n                            this.refreshMembers();\n                        });\n                }\n            }\n        );\n    }\n\n    addMembers(data: any): void {\n        this.membersAdded.emit({\n            userIds: data.userIds,\n            ouId: data.ouId\n        });\n\n        this.refreshMembers();\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"OrganizationUnits\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"OrganizationUnitsHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n\\n        </div>\\n    </div>\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6\\\">\\n                <organization-tree #ouTree (ouSelected)=\\\"ouMembers.organizationUnit = $event\\\"></organization-tree>\\n            </div>\\n            <div class=\\\"col-lg-6\\\">\\n                <organization-unit-members #ouMembers (membersAdded)=\\\"ouTree.membersAdded($event)\\\" (memberRemoved)=\\\"ouTree.memberRemoved($event)\\\"></organization-unit-members>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { OrganizationTreeComponent } from './organization-tree.component';\nimport { OrganizationUnitMembersComponent } from './organization-unit-members.component';\n\n@Component({\n    templateUrl: './organization-units.component.html',\n    animations: [appModuleAnimation()]\n})\nexport class OrganizationUnitsComponent extends AppComponentBase {\n\n    @ViewChild('ouMembers') ouMembers: OrganizationUnitMembersComponent;\n    @ViewChild('ouTree') ouTree: OrganizationTreeComponent;\n\n    constructor(\n        injector: Injector\n    ) {\n        super(injector);\n    }\n}\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <form *ngIf=\\\"active\\\" #roleForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">\\n                        <span *ngIf=\\\"role.id\\\">{{l(\\\"EditRole\\\")}}: {{role.displayName}}</span>\\n                        <span *ngIf=\\\"!role.id\\\">{{l(\\\"CreateNewRole\\\")}}</span>\\n                    </h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <tabset class=\\\"tab-container tabbable-line\\\">\\n                        <tab heading=\\\"{{l('RoleName')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label>{{l(\\\"RoleName\\\")}} *</label>\\n                                <input #roleNameInput=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"DisplayName\\\" [(ngModel)]=\\\"role.displayName\\\" required maxlength=\\\"64\\\">\\n                                <validation-messages [formCtrl]=\\\"roleNameInput\\\"></validation-messages>\\n                            </div>\\n\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <label class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"EditRole_IsDefault\\\" type=\\\"checkbox\\\" name=\\\"IsDefault\\\" [(ngModel)]=\\\"role.isDefault\\\">\\n                                    {{l(\\\"Default\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <span class=\\\"help-block\\\">{{l(\\\"DefaultRole_Description\\\")}}</span>\\n                            </div>\\n                        </tab>\\n                        <tab heading=\\\"{{l('Permissions')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                            <permission-tree #permissionTree></permission-tree>\\n                        </tab>\\n                    </tabset>\\n                    <div class=\\\"alert alert-warning\\\" style=\\\"margin-top: 30px;\\\">\\n                        <em>{{l('Note_RefreshPageForPermissionChanges')}}</em>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!roleForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\\n\"","import { AfterViewChecked, Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { CreateOrUpdateRoleInput, RoleEditDto, RoleServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { ModalDirective } from 'ngx-bootstrap';\nimport { PermissionTreeComponent } from '../shared/permission-tree.component';\n\n@Component({\n    selector: 'createOrEditRoleModal',\n    templateUrl: './create-or-edit-role-modal.component.html'\n})\nexport class CreateOrEditRoleModalComponent extends AppComponentBase implements AfterViewChecked {\n\n    @ViewChild('roleNameInput') roleNameInput: ElementRef;\n    @ViewChild('createOrEditModal') modal: ModalDirective;\n    @ViewChild('permissionTree') permissionTree: PermissionTreeComponent;\n\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\n\n    active = false;\n    saving = false;\n\n    role: RoleEditDto = new RoleEditDto();\n    constructor(\n        injector: Injector,\n        private _roleService: RoleServiceProxy\n    ) {\n        super(injector);\n    }\n\n    ngAfterViewChecked(): void {\n        //Temporary fix for: https://github.com/valor-software/ngx-bootstrap/issues/1508\n        $('tabset ul.nav').addClass('m-tabs-line');\n        $('tabset ul.nav li a.nav-link').addClass('m-tabs__link');\n    }\n\n    show(roleId?: number): void {\n        const self = this;\n        self.active = true;\n\n        self._roleService.getRoleForEdit(roleId).subscribe(result => {\n            self.role = result.role;\n            this.permissionTree.editData = result;\n\n            self.modal.show();\n        });\n    }\n\n    onShown(): void {\n        $(this.roleNameInput.nativeElement).focus();\n    }\n\n    save(): void {\n        const self = this;\n\n        const input = new CreateOrUpdateRoleInput();\n        input.role = self.role;\n        input.grantedPermissionNames = self.permissionTree.getGrantedPermissionNames();\n\n        this.saving = true;\n        this._roleService.createOrUpdateRole(input)\n            .finally(() => this.saving = false)\n            .subscribe(() => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n                this.modalSave.emit(null);\n            });\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto col-xs-6\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"Roles\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"RolesHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n            <div class=\\\"col-xs-6 text-right\\\">\\n                <button (click)=\\\"createRole()\\\" *ngIf=\\\"isGranted('Pages.Administration.Roles.Create')\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewRole\\\")}}</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <div class=\\\"m-form m-form--label-align-right\\\">\\n                    <div class=\\\"row m--margin-bottom-10\\\">\\n                        <div class=\\\"col-xl-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <permission-combo [(selectedPermission)]=\\\"selectedPermission\\\"></permission-combo>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-xl-6 text-right\\\">\\n                            <button name=\\\"RefreshButton\\\" class=\\\"btn btn-metal\\\" (click)=\\\"getRoles()\\\"><i class=\\\"la la-refresh\\\"></i> {{l('Refresh')}}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row align-items-center\\\">\\n                    <!--<Primeng-TurboTable-Start>-->\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                        <p-table #dataTable\\n                                 (onLazyLoad)=\\\"getRoles()\\\"\\n                                 [value]=\\\"primengTableHelper.records\\\"\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                 [paginator]=\\\"false\\\"\\n                                 [lazy]=\\\"true\\\"\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\n\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Roles.Edit', 'Pages.Administration.Roles.Delete')\\\">{{l('Actions')}}</th>\\n                                    <th>{{l('RoleName')}}</th>\\n                                    <th>{{l('CreationTime')}}</th>\\n                                </tr>\\n                            </ng-template>\\n\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                <tr>\\n                                    <td [hidden]=\\\"!isGrantedAny('Pages.Administration.Roles.Edit', 'Pages.Administration.Roles.Delete')\\\">\\n                                        <div class=\\\"btn-group dropdown\\\">\\n                                            <button class=\\\"dropdown-toggle btn btn-brand btn-sm dropdown-toggle btn-primary\\\"\\n                                                    data-toggle=\\\"dropdown\\\"\\n                                                    aria-haspopup=\\\"true\\\"\\n                                                    aria-expanded=\\\"false\\\">\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\n                                            </button>\\n                                            <ul class=\\\"dropdown-menu\\\">\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Roles.Edit')\\\"\\n                                                       (click)=\\\"createOrEditRoleModal.show(record.id)\\\">{{l('Edit')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"!record.isStatic && permission.isGranted('Pages.Administration.Roles.Delete')\\\"\\n                                                       (click)=\\\"deleteRole(record)\\\">{{l('Delete')}}</a>\\n                                                </li>\\n                                            </ul>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <span>\\n                                            {{record.displayName}}\\n                                            <span *ngIf=\\\"record.isStatic\\\"\\n                                                  class=\\\"m-badge m-badge--brand m-badge--wide\\\"\\n                                                  data-toggle=\\\"tooltip\\\"\\n                                                  title=\\\"{{l('StaticRole_Tooltip')}}\\\"\\n                                                  data-placement=\\\"top\\\">\\n                                                {{l('Static')}}\\n                                            </span>\\n                                            <span *ngIf=\\\"record.isDefault\\\"\\n                                                  class=\\\"m-badge m-badge--metal m-badge--wide\\\"\\n                                                  data-toggle=\\\"tooltip\\\"\\n                                                  title=\\\"{{l('DefaultRole_Description')}}\\\"\\n                                                  data-placement=\\\"top\\\">\\n                                                {{l('Default')}}\\n                                            </span>\\n                                        </span>\\n                                    </td>\\n                                    <td>\\n                                        {{record.creationTime | momentFormat:'L'}}\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                        </p-table>\\n                        <div class=\\\"ui-table-footer\\\">\\n                            {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\n                        </div>\\n                    </div>\\n                    <!--<Primeng-TurboTable-End>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <createOrEditRoleModal #createOrEditRoleModal (modalSave)=\\\"getRoles()\\\"></createOrEditRoleModal>\\n</div>\\n\"","import { NotifyService } from '@abp/notify/notify.service';\nimport { Component, Injector, ViewChild } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { RoleListDto, RoleServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { FileDownloadService } from '@shared/utils/file-download.service';\nimport { Table } from 'primeng/components/table/table';\nimport { CreateOrEditRoleModalComponent } from './create-or-edit-role-modal.component';\n\n@Component({\n    templateUrl: './roles.component.html',\n    animations: [appModuleAnimation()]\n})\nexport class RolesComponent extends AppComponentBase {\n\n    @ViewChild('createOrEditRoleModal') createOrEditRoleModal: CreateOrEditRoleModalComponent;\n    @ViewChild('dataTable') dataTable: Table;\n\n\n    //Filters\n    selectedPermission = '';\n\n    constructor(\n        injector: Injector,\n        private _roleService: RoleServiceProxy,\n        private _notifyService: NotifyService,\n        private _fileDownloadService: FileDownloadService\n    ) {\n        super(injector);\n    }\n\n    getRoles(): void {\n        this.primengTableHelper.showLoadingIndicator();\n        let permission = this.permission ? this.selectedPermission : undefined;\n\n        this._roleService.getRoles(permission).subscribe(result => {\n            this.primengTableHelper.records = result.items;\n            this.primengTableHelper.totalRecordsCount = result.items.length;\n            this.primengTableHelper.hideLoadingIndicator();\n        });\n    }\n\n    createRole(): void {\n        this.createOrEditRoleModal.show();\n    }\n\n    deleteRole(role: RoleListDto): void {\n        let self = this;\n        self.message.confirm(\n            self.l('RoleDeleteWarningMessage', role.displayName),\n            isConfirmed => {\n                if (isConfirmed) {\n                    this._roleService.deleteRole(role.id).subscribe(() => {\n                        this.getRoles();\n                        abp.notify.success(this.l('SuccessfullyDeleted'));\n                    });\n                }\n            }\n        );\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto col-sm-12 col-md-6\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"Settings\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"SettingsHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n            <div class=\\\"col-sm-12 col-md-6 text-right\\\">\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"saveAll()\\\"><i class=\\\"la la-floppy-o\\\"></i> {{l(\\\"SaveAll\\\")}}</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"hostSettings\\\">\\n                    <tab heading=\\\"{{l('General')}}\\\" *ngIf=\\\"showTimezoneSelection\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Timezone\\\">{{l(\\\"Timezone\\\")}}</label>\\n                            <timezone-combo id=\\\"Timezone\\\" [(selectedTimeZone)]=\\\"hostSettings.general.timezone\\\" defaultTimezoneScope=\\\"{{defaultTimezoneScope}}\\\"></timezone-combo>\\n                        </div>\\n                    </tab>\\n                    <tab heading=\\\"{{l('TenantManagement')}}\\\" *ngIf=\\\"hostSettings.tenantManagement\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"m-form\\\">\\n                            <h5>{{l(\\\"FormBasedRegistration\\\")}}</h5>\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"Setting_AllowSelfRegistration\\\" class=\\\"m-checkbox\\\">\\n                                        <input id=\\\"Setting_AllowSelfRegistration\\\" type=\\\"checkbox\\\" name=\\\"AllowSelfRegistration\\\" [(ngModel)]=\\\"hostSettings.tenantManagement.allowSelfRegistration\\\">\\n                                        {{l(\\\"AllowTenantsToRegisterThemselves\\\")}}\\n                                        <span></span>\\n                                    </label>\\n                                    <span class=\\\"m-form__help\\\">{{l(\\\"AllowTenantsToRegisterThemselves_Hint\\\")}}</span>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"Setting_IsNewRegisteredTenantActiveByDefault\\\" class=\\\"m-checkbox\\\" [hidden]=\\\"!hostSettings.tenantManagement.allowSelfRegistration\\\">\\n                                        <input id=\\\"Setting_IsNewRegisteredTenantActiveByDefault\\\" type=\\\"checkbox\\\" name=\\\"IsNewRegisteredTenantActiveByDefault\\\"\\n                                               [(ngModel)]=\\\"hostSettings.tenantManagement.isNewRegisteredTenantActiveByDefault\\\">\\n                                        {{l(\\\"NewRegisteredTenantsIsActiveByDefault\\\")}}\\n                                        <span></span>\\n                                    </label>\\n                                    <span class=\\\"m-form__help\\\">{{l(\\\"NewRegisteredTenantsIsActiveByDefault_Hint\\\")}}</span>\\n                                </div>\\n                                <label for=\\\"Setting_UseCaptchaOnRegistration\\\" class=\\\"m-checkbox\\\" [hidden]=\\\"!hostSettings.tenantManagement.allowSelfRegistration\\\">\\n                                    <input id=\\\"Setting_UseCaptchaOnRegistration\\\" type=\\\"checkbox\\\" name=\\\"UseCaptchaOnRegistration\\\" [(ngModel)]=\\\"hostSettings.tenantManagement.useCaptchaOnRegistration\\\">\\n                                    {{l(\\\"UseCaptchaOnRegistration\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"DefaultEditionId\\\">{{l(\\\"Edition\\\")}}</label>\\n                                <select id=\\\"DefaultEditionId\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"hostSettings.tenantManagement.defaultEditionId\\\">\\n                                    <option value=\\\"\\\">{{emptyText}}</option>\\n                                    <option *ngFor=\\\"let edition of editions\\\" [value]=\\\"edition.value\\\">{{edition.displayText}}</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </tab>\\n                    <tab heading=\\\"{{l('UserManagement')}}\\\" *ngIf=\\\"hostSettings.userManagement\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"m-checkbox-list\\\">\\n                            <label for=\\\"Settings_IsEmailConfirmationRequiredForLogin\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Settings_IsEmailConfirmationRequiredForLogin\\\" type=\\\"checkbox\\\" name=\\\"IsEmailConfirmationRequiredForLogin\\\"\\n                                       [(ngModel)]=\\\"hostSettings.userManagement.isEmailConfirmationRequiredForLogin\\\">\\n                                {{l(\\\"EmailConfirmationRequiredForLogin\\\")}}\\n                                <span></span>\\n                            </label>\\n                            <label for=\\\"Settings_SmsVerificationEnabled\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Settings_SmsVerificationEnabled\\\" class=\\\"md-check\\\" type=\\\"checkbox\\\" name=\\\"SmsVerificationEnabled\\\"\\n                                       [(ngModel)]=\\\"hostSettings.userManagement.smsVerificationEnabled\\\">\\n                                {{l(\\\"SmsVerificationEnabled\\\")}}\\n                                <span></span>\\n                            </label>\\n                        </div>\\n                    </tab>\\n                    <tab heading=\\\"{{l('Security')}}\\\" *ngIf=\\\"hostSettings.security\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div>\\n                            <h5>{{l(\\\"PasswordComplexity\\\")}}</h5>\\n                            <label for=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\"\\n                                       [(ngModel)]=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\n                                {{l(\\\"UseDefaultSettings\\\")}}\\n                                <span></span>\\n                            </label>\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <label for=\\\"Setting_PasswordComplexity_RequireDigit\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireDigit\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireDigit\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\n                                           disabled>\\n                                    {{l(\\\"PasswordComplexity_RequireDigit\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_PasswordComplexity_RequireLowercase\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireLowercase\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireLowercase\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\n                                           disabled>\\n                                    {{l(\\\"PasswordComplexity_RequireLowercase\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\n                                           disabled>\\n                                    {{l(\\\"PasswordComplexity_RequireNonAlphanumeric\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_PasswordComplexity_RequireUppercase\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requireUppercase\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requireUppercase\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\n                                           disabled>\\n                                    {{l(\\\"PasswordComplexity_RequireUppercase\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label>{{l(\\\"PasswordComplexity_RequiredLength\\\")}}</label>\\n                                <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.passwordComplexity.requiredLength}\\\"\\n                                       [(ngModel)]=\\\"hostSettings.security.passwordComplexity.requiredLength\\\" *ngIf=\\\"!hostSettings.security.useDefaultPasswordComplexitySettings\\\">\\n                                <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.defaultPasswordComplexity.requiredLength}\\\"\\n                                       [(ngModel)]=\\\"hostSettings.security.defaultPasswordComplexity.requiredLength\\\" *ngIf=\\\"hostSettings.security.useDefaultPasswordComplexitySettings\\\"\\n                                       disabled>\\n                            </div>\\n                        </div>\\n                        <div>\\n                            <h5>{{l(\\\"UserLockOut\\\")}}</h5>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"Setting_UserLockOut_IsEnabled\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_UserLockOut_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_UserLockOut_IsEnabled\\\" [(ngModel)]=\\\"hostSettings.security.userLockOut.isEnabled\\\">\\n                                    {{l(\\\"EnableUserAccountLockingOnFailedLoginAttemts\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"hostSettings.security.userLockOut.isEnabled\\\">\\n                                <label for=\\\"MaxFailedAccessAttemptsBeforeLockout\\\">{{l(\\\"MaxFailedAccessAttemptsBeforeLockout\\\")}}</label>\\n                                <input id=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" type=\\\"number\\\" name=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout}\\\"\\n                                       [(ngModel)]=\\\"hostSettings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"hostSettings.security.userLockOut.isEnabled\\\">\\n                                <label for=\\\"DefaultAccountLockoutDurationAsSeconds\\\">{{l(\\\"DefaultAccountLockoutDurationAsSeconds\\\")}}</label>\\n                                <input id=\\\"DefaultAccountLockoutDurationAsSeconds\\\" type=\\\"number\\\" name=\\\"DefaultAccountLockoutSeconds\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.security.userLockOut.defaultAccountLockoutSeconds}\\\"\\n                                       [(ngModel)]=\\\"hostSettings.security.userLockOut.defaultAccountLockoutSeconds\\\">\\n                            </div>\\n                        </div>\\n                        <div>\\n                            <h5>{{l(\\\"TwoFactorLogin\\\")}}</h5>\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEnabled\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEnabled\\\" [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\n                                    {{l(\\\"EnableTwoFactorLogin\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isEmailProviderEnabled\\\">\\n                                    {{l(\\\"IsEmailVerificationEnabled\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isSmsProviderEnabled\\\">\\n                                    {{l(\\\"IsSmsVerificationEnabled\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isGoogleAuthenticatorEnabled\\\">\\n                                    {{l(\\\"IsGoogleAuthenticatorEnabled\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"hostSettings.security.twoFactorLogin.isEnabled\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\"\\n                                           [(ngModel)]=\\\"hostSettings.security.twoFactorLogin.isRememberBrowserEnabled\\\">\\n                                    {{l(\\\"AllowToRememberBrowserForTwoFactorLogin\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </tab>\\n                    <tab heading=\\\"{{l('EmailSmtp')}}\\\" *ngIf=\\\"hostSettings.email\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"DefaultFromAddress\\\">{{l(\\\"DefaultFromAddress\\\")}}</label>\\n                            <input id=\\\"DefaultFromAddress\\\" type=\\\"email\\\" name=\\\"DefaultFromAddress\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.defaultFromAddress}\\\"\\n                                   [(ngModel)]=\\\"hostSettings.email.defaultFromAddress\\\" maxlength=\\\"256\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"DefaultFromDisplayName\\\">{{l(\\\"DefaultFromDisplayName\\\")}}</label>\\n                            <input id=\\\"DefaultFromDisplayName\\\" type=\\\"text\\\" name=\\\"DefaultFromDisplayName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.defaultFromDisplayName}\\\"\\n                                   [(ngModel)]=\\\"hostSettings.email.defaultFromDisplayName\\\" maxlength=\\\"128\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"SmtpHost\\\">{{l(\\\"SmtpHost\\\")}}</label>\\n                            <input id=\\\"SmtpHost\\\" type=\\\"text\\\" name=\\\"SmtpHost\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpHost}\\\" [(ngModel)]=\\\"hostSettings.email.smtpHost\\\"\\n                                   maxlength=\\\"64\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"SmtpPort\\\">{{l(\\\"SmtpPort\\\")}}</label>\\n                            <input id=\\\"SmtpPort\\\" type=\\\"number\\\" name=\\\"SmtpPort\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpPort}\\\" [(ngModel)]=\\\"hostSettings.email.smtpPort\\\"\\n                                   maxlength=\\\"5\\\">\\n                        </div>\\n                        <div class=\\\"m-checkbox-list\\\">\\n                            <label for=\\\"Settings_SmtpEnableSsl\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Settings_SmtpEnableSsl\\\" type=\\\"checkbox\\\" name=\\\"SmtpEnableSsl\\\" [(ngModel)]=\\\"hostSettings.email.smtpEnableSsl\\\">\\n                                {{l(\\\"UseSsl\\\")}}\\n                                <span></span>\\n                            </label>\\n                            <label for=\\\"Settings_SmtpUseDefaultCredentials\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Settings_SmtpUseDefaultCredentials\\\" type=\\\"checkbox\\\" name=\\\"SmtpUseDefaultCredentials\\\" [(ngModel)]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\n                                {{l(\\\"UseDefaultCredentials\\\")}}\\n                                <span></span>\\n                            </label>\\n                        </div>\\n                        <div class=\\\"form-group\\\" [hidden]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\n                            <label for=\\\"SmtpDomainName\\\">{{l(\\\"DomainName\\\")}}</label>\\n                            <input id=\\\"SmtpDomainName\\\" type=\\\"text\\\" name=\\\"SmtpDomainName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpDomain}\\\"\\n                                   [(ngModel)]=\\\"hostSettings.email.smtpDomain\\\" maxlength=\\\"128\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\" [hidden]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\n                            <label for=\\\"SmtpUserName\\\">{{l(\\\"UserName\\\")}}</label>\\n                            <input id=\\\"SmtpUserName\\\" type=\\\"text\\\" name=\\\"SmtpUserName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpUserName}\\\"\\n                                   [(ngModel)]=\\\"hostSettings.email.smtpUserName\\\" maxlength=\\\"128\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\" [hidden]=\\\"hostSettings.email.smtpUseDefaultCredentials\\\">\\n                            <label for=\\\"SmtpPassword\\\">{{l(\\\"Password\\\")}}</label>\\n                            <input id=\\\"SmtpPassword\\\" type=\\\"password\\\" name=\\\"SmtpPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.email.smtpPassword}\\\" [(ngModel)]=\\\"hostSettings.email.smtpPassword\\\"\\n                                   maxlength=\\\"128\\\">\\n                        </div>\\n                        <hr />\\n                        <h5>{{l(\\\"TestEmailSettingsHeader\\\")}}</h5>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"form-group col-md-4\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control input-mini\\\" [(ngModel)]=\\\"testEmailAddress\\\">\\n                            </div>\\n                            <div class=\\\"form-group col-md-2\\\">\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"sendTestEmail()\\\">{{l(\\\"SendTestEmail\\\")}}</button>\\n                            </div>\\n                        </div>\\n                    </tab>\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{l('Invoice')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <!-- *ngIf=\\\"true\\\" is a workaround for https://github.com/valor-software/ng2-bootstrap/issues/823 -->\\n                        <h5>{{l(\\\"InvoiceInformation\\\")}}</h5>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"LegalName\\\">{{l(\\\"LegalName\\\")}}</label>\\n                            <input id=\\\"LegalName\\\" type=\\\"text\\\" name=\\\"legalName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.billing.legalName}\\\" [(ngModel)]=\\\"hostSettings.billing.legalName\\\" maxlength=\\\"64\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Address\\\">{{l(\\\"Address\\\")}}</label>\\n                            <textarea id=\\\"Address\\\" rows=\\\"5\\\" name=\\\"address\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':hostSettings.billing.address}\\\" [(ngModel)]=\\\"hostSettings.billing.address\\\" maxlength=\\\"256\\\"></textarea>\\n                        </div>\\n                    </tab>\\n                </tabset>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { AfterViewChecked, Component, Injector, OnInit } from '@angular/core';\nimport { AppTimezoneScope } from '@shared/AppEnums';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { AppSessionService } from '@shared/common/session/app-session.service';\nimport { ComboboxItemDto, CommonLookupServiceProxy, DefaultTimezoneScope, HostSettingsEditDto, HostSettingsServiceProxy, SendTestEmailInput } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    templateUrl: './host-settings.component.html',\n    animations: [appModuleAnimation()]\n})\nexport class HostSettingsComponent extends AppComponentBase implements OnInit, AfterViewChecked {\n\n    loading = false;\n    hostSettings: HostSettingsEditDto;\n    editions: ComboboxItemDto[] = undefined;\n    testEmailAddress: string = undefined;\n    showTimezoneSelection = abp.clock.provider.supportsMultipleTimezone;\n    defaultTimezoneScope: DefaultTimezoneScope = AppTimezoneScope.Application;\n\n    usingDefaultTimeZone = false;\n    initialTimeZone: string = undefined;\n\n    constructor(\n        injector: Injector,\n        private _hostSettingService: HostSettingsServiceProxy,\n        private _commonLookupService: CommonLookupServiceProxy,\n        private _appSessionService: AppSessionService\n    ) {\n        super(injector);\n    }\n\n    loadHostSettings(): void {\n        const self = this;\n        self._hostSettingService.getAllSettings()\n            .subscribe(setting => {\n                self.hostSettings = setting;\n                self.initialTimeZone = setting.general.timezone;\n                self.usingDefaultTimeZone = setting.general.timezoneForComparison === self.setting.get('Abp.Timing.TimeZone');\n            });\n    }\n\n    loadEditions(): void {\n        const self = this;\n        self._commonLookupService.getEditionsForCombobox(false).subscribe((result) => {\n            self.editions = result.items;\n\n            const notAssignedEdition = new ComboboxItemDto();\n            notAssignedEdition.value = null;\n            notAssignedEdition.displayText = self.l('NotAssigned');\n\n            self.editions.unshift(notAssignedEdition);\n        });\n    }\n\n    init(): void {\n        const self = this;\n        self.testEmailAddress = self._appSessionService.user.emailAddress;\n        self.showTimezoneSelection = abp.clock.provider.supportsMultipleTimezone;\n        self.loadHostSettings();\n        self.loadEditions();\n    }\n\n    ngOnInit(): void {\n        const self = this;\n        self.init();\n    }\n\n    ngAfterViewChecked(): void {\n        //Temporary fix for: https://github.com/valor-software/ngx-bootstrap/issues/1508\n        $('tabset ul.nav').addClass('m-tabs-line');\n        $('tabset ul.nav li a.nav-link').addClass('m-tabs__link');\n    }\n\n    sendTestEmail(): void {\n        const self = this;\n        const input = new SendTestEmailInput();\n        input.emailAddress = self.testEmailAddress;\n        self._hostSettingService.sendTestEmail(input).subscribe(result => {\n            self.notify.info(self.l('TestEmailSentSuccessfully'));\n        });\n    }\n\n    saveAll(): void {\n        const self = this;\n        self._hostSettingService.updateAllSettings(self.hostSettings).subscribe(result => {\n            self.notify.info(self.l('SavedSuccessfully'));\n\n            if (abp.clock.provider.supportsMultipleTimezone && self.usingDefaultTimeZone && self.initialTimeZone !== self.hostSettings.general.timezone) {\n                self.message.info(self.l('TimeZoneSettingChangedRefreshPageNotification')).done(function () {\n                    window.location.reload();\n                });\n            }\n        });\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto col-sm-12 col-md-6\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"Settings\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"SettingsHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n            <div class=\\\"col-sm-12 col-md-6 text-right\\\">\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"saveAll()\\\"><i class=\\\"la la-floppy-o\\\"></i> {{l(\\\"SaveAll\\\")}}</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <tabset class=\\\"tab-container\\\" *ngIf=\\\"settings\\\">\\n                    <tab heading=\\\"{{l('General')}}\\\" *ngIf=\\\"showTimezoneSelection\\\" [active]=\\\"activeTabIndex == 0\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"showTimezoneSelection\\\">\\n                            <label for=\\\"Timezone\\\">{{l(\\\"Timezone\\\")}}</label>\\n                            <timezone-combo id=\\\"Timezone\\\" [(selectedTimeZone)]=\\\"settings.general.timezone\\\" defaultTimezoneScope=\\\"{{defaultTimezoneScope}}\\\"></timezone-combo>\\n                        </div>\\n                    </tab>\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{l('Appearance')}}\\\" [active]=\\\"activeTabIndex == 1\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"row m-form\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <h5>{{l(\\\"ApplicationLogo\\\")}}</h5>\\n                                <form #logoUploadForm>\\n                                    <div class=\\\"form-group\\\">\\n                                        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"logoUploader\\\" class=\\\"col-lg-12\\\" required />\\n                                        <span class=\\\"m-form__help col-lg-12\\\">{{l(\\\"UploadLogo_Info\\\")}}</span>\\n                                    </div>\\n                                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"uploadLogo()\\\">{{l(\\\"Upload\\\")}}</button>\\n                                    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"clearLogo()\\\">{{l(\\\"Clear\\\")}}</button>\\n                                </form>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <h5>{{l(\\\"CustomCSS\\\")}}</h5>\\n                                <p *ngIf=\\\"appSession.tenant.customCssId\\\"><a [href]=\\\"remoteServiceBaseUrl + '/TenantCustomization/GetCustomCss?id=' + appSession.tenant.customCssId\\\" target=\\\"_blank\\\">{{l('Download')}}</a></p>\\n                                <form #cssUploadForm>\\n                                    <div class=\\\"form-group\\\">\\n                                        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"customCssUploader\\\" class=\\\"col-lg-12\\\" required />\\n                                        <span class=\\\"m-form__help col-lg-12\\\">{{l(\\\"UploadCSS_Info\\\")}}</span>\\n                                    </div>\\n                                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"uploadCustomCss()\\\">{{l(\\\"Upload\\\")}}</button>\\n                                    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"clearCustomCss()\\\">{{l(\\\"Clear\\\")}}</button>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </tab>\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{l('UserManagement')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"m-form\\\">\\n                            <h5>{{l(\\\"FormBasedRegistration\\\")}}</h5>\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <div class=\\\"form-group m-form__group\\\">\\n                                    <label for=\\\"Setting_AllowSelfRegistration\\\" class=\\\"m-checkbox\\\">\\n                                        <input id=\\\"Setting_AllowSelfRegistration\\\" class=\\\"m-check\\\" type=\\\"checkbox\\\" name=\\\"AllowSelfRegistration\\\" [(ngModel)]=\\\"settings.userManagement.allowSelfRegistration\\\">\\n                                        {{l(\\\"AllowUsersToRegisterThemselves\\\")}}\\n                                        <span></span>\\n                                    </label>\\n                                    <span class=\\\"m-form__help\\\">{{l(\\\"AllowUsersToRegisterThemselves_Hint\\\")}}</span>\\n                                </div>\\n                                <div class=\\\"form-group m-form__group\\\">\\n                                    <label for=\\\"Setting_IsNewRegisteredUserActiveByDefault\\\" class=\\\"m-checkbox\\\">\\n                                        <input id=\\\"Setting_IsNewRegisteredUserActiveByDefault\\\" type=\\\"checkbox\\\" name=\\\"IsNewRegisteredUserActiveByDefault\\\" [(ngModel)]=\\\"settings.userManagement.isNewRegisteredUserActiveByDefault\\\">\\n                                        {{l(\\\"NewRegisteredUsersIsActiveByDefault\\\")}}\\n                                        <span></span>\\n                                    </label>\\n                                    <span class=\\\"m-form__help\\\">{{l(\\\"NewRegisteredUsersIsActiveByDefault_Hint\\\")}}</span>\\n                                </div>\\n                                <label for=\\\"Setting_UseCaptchaOnRegistration\\\" class=\\\"m-checkbox\\\" [hidden]=\\\"!settings.userManagement.allowSelfRegistration\\\">\\n                                    <input id=\\\"Setting_UseCaptchaOnRegistration\\\" type=\\\"checkbox\\\" name=\\\"UseCaptchaOnRegistration\\\" [(ngModel)]=\\\"settings.userManagement.useCaptchaOnRegistration\\\">\\n                                    {{l(\\\"UseCaptchaOnRegistration\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"!isMultiTenancyEnabled && settings.ldap.isModuleEnabled\\\">\\n                            <h5 class=\\\"margin-top-20\\\">{{l(\\\"LdapSettings\\\")}}</h5>\\n                            <label for=\\\"Setting_LdapIsEnabled\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Setting_LdapIsEnabled\\\" type=\\\"checkbox\\\" name=\\\"LdapIsEnabled\\\" [(ngModel)]=\\\"settings.ldap.isEnabled\\\">\\n                                {{l(\\\"EnableLdapAuthentication\\\")}}\\n                                <span></span>\\n                            </label>\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"!settings.ldap.isEnabled\\\">\\n                                <label for=\\\"LdapDomainName\\\">{{l(\\\"DomainName\\\")}}</label>\\n                                <input id=\\\"LdapDomainName\\\" type=\\\"text\\\" name=\\\"LdapDomainName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.ldap.domain\\\" maxlength=\\\"128\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"!settings.ldap.isEnabled\\\">\\n                                <label for=\\\"LdapUserName\\\">{{l(\\\"UserName\\\")}}</label>\\n                                <input id=\\\"LdapUserName\\\" type=\\\"text\\\" name=\\\"LdapUserName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.ldap.userName\\\" maxlength=\\\"128\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\" [hidden]=\\\"!settings.ldap.isEnabled\\\">\\n                                <label for=\\\"LdapPassword\\\">{{l(\\\"Password\\\")}}</label>\\n                                <input id=\\\"LdapPassword\\\" type=\\\"password\\\" name=\\\"LdapPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.ldap.password\\\" maxlength=\\\"128\\\">\\n                            </div>\\n                        </div>\\n                        <div>\\n                            <h5 class=\\\"margin-top-20\\\">{{l(\\\"OtherSettings\\\")}}</h5>\\n                            <label for=\\\"Setting_IsEmailConfirmationRequiredForLogin\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Setting_IsEmailConfirmationRequiredForLogin\\\" type=\\\"checkbox\\\" name=\\\"IsEmailConfirmationRequiredForLogin\\\" [(ngModel)]=\\\"settings.userManagement.isEmailConfirmationRequiredForLogin\\\">\\n                                {{l(\\\"EmailConfirmationRequiredForLogin\\\")}}\\n                                <span></span>\\n                            </label>\\n                        </div>\\n                    </tab>\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{l('Security')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <!-- *ngIf=\\\"true\\\" is a workaround for https://github.com/valor-software/ng2-bootstrap/issues/823 -->\\n                        <div>\\n                            <h5>{{l(\\\"PasswordComplexity\\\")}}</h5>\\n                            <label for=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_UseDefaultSettings\\\" [(ngModel)]=\\\"settings.security.useDefaultPasswordComplexitySettings\\\">\\n                                {{l(\\\"UseDefaultSettings\\\")}}\\n                                <span></span>\\n                            </label>\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <label for=\\\"Setting_PasswordComplexity_RequireDigit\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\n                                           [(ngModel)]=\\\"settings.security.passwordComplexity.requireDigit\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireDigit\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireDigit\\\"\\n                                           [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireDigit\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\n                                           disabled>\\n                                    {{l(\\\"PasswordComplexity_RequireDigit\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_PasswordComplexity_RequireLowercase\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\n                                           [(ngModel)]=\\\"settings.security.passwordComplexity.requireLowercase\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireLowercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireLowercase\\\"\\n                                           [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireLowercase\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\n                                           disabled>\\n                                    {{l(\\\"PasswordComplexity_RequireLowercase\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\n                                           [(ngModel)]=\\\"settings.security.passwordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireNonAlphanumeric\\\"\\n                                           [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireNonAlphanumeric\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\n                                           disabled>\\n                                    {{l(\\\"PasswordComplexity_RequireNonAlphanumeric\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_PasswordComplexity_RequireUppercase\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\n                                           [(ngModel)]=\\\"settings.security.passwordComplexity.requireUppercase\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\n                                    <input id=\\\"Setting_PasswordComplexity_RequireUppercase\\\" type=\\\"checkbox\\\" name=\\\"Setting_PasswordComplexity_RequireUppercase\\\"\\n                                           [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requireUppercase\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\n                                           disabled>\\n                                    {{l(\\\"PasswordComplexity_RequireUppercase\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label>{{l(\\\"PasswordComplexity_RequiredLength\\\")}}</label>\\n                                <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.passwordComplexity.requiredLength}\\\"\\n                                       [(ngModel)]=\\\"settings.security.passwordComplexity.requiredLength\\\" *ngIf=\\\"!settings.security.useDefaultPasswordComplexitySettings\\\">\\n                                <input type=\\\"number\\\" name=\\\"RequiredLength\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.defaultPasswordComplexity.requiredLength}\\\"\\n                                       [(ngModel)]=\\\"settings.security.defaultPasswordComplexity.requiredLength\\\" *ngIf=\\\"settings.security.useDefaultPasswordComplexitySettings\\\"\\n                                       disabled>\\n                            </div>\\n                        </div>\\n                        <div>\\n                            <h5>{{l(\\\"UserLockOut\\\")}}</h5>\\n                            <div class=\\\"md-checkbox-list\\\">\\n                                <div>\\n                                    <label for=\\\"Setting_UserLockOut_IsEnabled\\\" class=\\\"m-checkbox\\\">\\n                                        <input id=\\\"Setting_UserLockOut_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_UserLockOut_IsEnabled\\\" [(ngModel)]=\\\"settings.security.userLockOut.isEnabled\\\">\\n                                        {{l(\\\"EnableUserAccountLockingOnFailedLoginAttemts\\\")}}\\n                                        <span></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"settings.security.userLockOut.isEnabled\\\">\\n                                <label for=\\\"MaxFailedAccessAttemptsBeforeLockout\\\">{{l(\\\"MaxFailedAccessAttemptsBeforeLockout\\\")}}</label>\\n                                <input id=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" type=\\\"number\\\" name=\\\"MaxFailedAccessAttemptsBeforeLockout\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout}\\\" [(ngModel)]=\\\"settings.security.userLockOut.maxFailedAccessAttemptsBeforeLockout\\\">\\n                            </div>\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"settings.security.userLockOut.isEnabled\\\">\\n                                <label for=\\\"DefaultAccountLockoutSeconds\\\">{{l(\\\"DefaultAccountLockoutDurationAsSeconds\\\")}}</label>\\n                                <input id=\\\"DefaultAccountLockoutSeconds\\\" type=\\\"number\\\" name=\\\"DefaultAccountLockoutSeconds\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.security.userLockOut.defaultAccountLockoutSeconds}\\\" [(ngModel)]=\\\"settings.security.userLockOut.defaultAccountLockoutSeconds\\\">\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"!isMultiTenancyEnabled || settings.security.twoFactorLogin.isEnabledForApplication\\\">\\n                            <h5>{{l(\\\"TwoFactorLogin\\\")}}</h5>\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEnabled\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isEnabled\\\">\\n                                    {{l(\\\"EnableTwoFactorLogin\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled && !isMultiTenancyEnabled\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsEmailProviderEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isEmailProviderEnabled\\\">\\n                                    {{l(\\\"IsEmailVerificationEnabled\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled && !isMultiTenancyEnabled\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsSmsProviderEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isSmsProviderEnabled\\\">\\n                                    {{l(\\\"IsSmsVerificationEnabled\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled && !isMultiTenancyEnabled\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsGoogleAuthenticatorEnabled\\\"\\n                                           [(ngModel)]=\\\"settings.security.twoFactorLogin.isGoogleAuthenticatorEnabled\\\">\\n                                    {{l(\\\"IsGoogleAuthenticatorEnabled\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label for=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" class=\\\"m-checkbox\\\" *ngIf=\\\"settings.security.twoFactorLogin.isEnabled\\\">\\n                                    <input id=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" type=\\\"checkbox\\\" name=\\\"Setting_TwoFactorLogin_IsRememberBrowserEnabled\\\" [(ngModel)]=\\\"settings.security.twoFactorLogin.isRememberBrowserEnabled\\\">\\n                                    {{l(\\\"AllowToRememberBrowserForTwoFactorLogin\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </tab>\\n                    <tab heading=\\\"{{l('EmailSmtp')}}\\\" *ngIf=\\\"!isMultiTenancyEnabled\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"DefaultFromAddress\\\">{{l(\\\"DefaultFromAddress\\\")}}</label>\\n                            <input id=\\\"DefaultFromAddress\\\" type=\\\"email\\\" name=\\\"DefaultFromAddress\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.defaultFromAddress}\\\" [(ngModel)]=\\\"settings.email.defaultFromAddress\\\" maxlength=\\\"128\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"DefaultFromDisplayName\\\">{{l(\\\"DefaultFromDisplayName\\\")}}</label>\\n                            <input id=\\\"DefaultFromDisplayName\\\" type=\\\"text\\\" name=\\\"DefaultFromDisplayName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.defaultFromDisplayName}\\\" [(ngModel)]=\\\"settings.email.defaultFromDisplayName\\\" maxlength=\\\"128\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"SmtpHost\\\">{{l(\\\"SmtpHost\\\")}}</label>\\n                            <input id=\\\"SmtpHost\\\" type=\\\"text\\\" name=\\\"SmtpHost\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpHost}\\\" [(ngModel)]=\\\"settings.email.smtpHost\\\" maxlength=\\\"64\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"SmtpPort\\\">{{l(\\\"SmtpPort\\\")}}</label>\\n                            <input id=\\\"SmtpPort\\\" type=\\\"number\\\" name=\\\"SmtpPort\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpPort}\\\" [(ngModel)]=\\\"settings.email.smtpPort\\\" maxlength=\\\"5\\\">\\n                        </div>\\n                        <div class=\\\"m-checkbox-list\\\">\\n                            <label for=\\\"Settings_SmtpEnableSsl\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Settings_SmtpEnableSsl\\\" type=\\\"checkbox\\\" name=\\\"SmtpEnableSsl\\\" [(ngModel)]=\\\"settings.email.smtpEnableSsl\\\">\\n                                {{l(\\\"UseSsl\\\")}}\\n                                <span></span>\\n                            </label>\\n                            <label for=\\\"Settings_SmtpUseDefaultCredentials\\\" class=\\\"m-checkbox\\\">\\n                                <input id=\\\"Settings_SmtpUseDefaultCredentials\\\" type=\\\"checkbox\\\" name=\\\"SmtpUseDefaultCredentials\\\" [(ngModel)]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\n                                {{l(\\\"UseDefaultCredentials\\\")}}\\n                                <span></span>\\n                            </label>\\n                        </div>\\n                        <div class=\\\"form-group\\\" [hidden]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\n                            <label for=\\\"SmtpDomainName\\\">{{l(\\\"DomainName\\\")}}</label>\\n                            <input id=\\\"SmtpDomainName\\\" type=\\\"text\\\" name=\\\"SmtpDomainName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpDomain}\\\" [(ngModel)]=\\\"settings.email.smtpDomain\\\" maxlength=\\\"128\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\" [hidden]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\n                            <label for=\\\"SmtpUserName\\\">{{l(\\\"UserName\\\")}}</label>\\n                            <input id=\\\"SmtpUserName\\\" type=\\\"text\\\" name=\\\"SmtpUserName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpUserName}\\\" [(ngModel)]=\\\"settings.email.smtpUserName\\\" maxlength=\\\"128\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\" [hidden]=\\\"settings.email.smtpUseDefaultCredentials\\\">\\n                            <label for=\\\"SmtpPassword\\\">{{l(\\\"Password\\\")}}</label>\\n                            <input id=\\\"SmtpPassword\\\" type=\\\"password\\\" name=\\\"SmtpPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.email.smtpPassword}\\\" [(ngModel)]=\\\"settings.email.smtpPassword\\\" maxlength=\\\"128\\\">\\n                        </div>\\n                        <hr />\\n                        <h5>{{l(\\\"TestEmailSettingsHeader\\\")}}</h5>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"form-group col-md-4\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control input-mini\\\" [(ngModel)]=\\\"testEmailAddress\\\">\\n                            </div>\\n                            <div class=\\\"form-group col-md-2\\\">\\n                                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"sendTestEmail()\\\">{{l(\\\"SendTestEmail\\\")}}</button>\\n                            </div>\\n                        </div>\\n                    </tab>\\n                    <tab *ngIf=\\\"true\\\" heading=\\\"{{l('Invoice')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <!-- *ngIf=\\\"true\\\" is a workaround for https://github.com/valor-software/ng2-bootstrap/issues/823 -->\\n                        <h5>{{l(\\\"InvoiceInformation\\\")}}</h5>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"LegalName\\\">{{l(\\\"LegalName\\\")}}</label>\\n                            <input id=\\\"LegalName\\\" type=\\\"text\\\" name=\\\"legalName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.billing.legalName}\\\" [(ngModel)]=\\\"settings.billing.legalName\\\" maxlength=\\\"64\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"Address\\\">{{l(\\\"Address\\\")}}</label>\\n                            <textarea id=\\\"Address\\\" rows=\\\"5\\\" name=\\\"address\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.billing.address}\\\" [(ngModel)]=\\\"settings.billing.address\\\" maxlength=\\\"256\\\"></textarea>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"taxVatNo\\\">{{l(\\\"Tax/VatNo\\\")}}</label>\\n                            <input id=\\\"taxVatNo\\\" type=\\\"text\\\" name=\\\"taxVatNo\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':settings.billing.taxVatNo}\\\" [(ngModel)]=\\\"settings.billing.taxVatNo\\\" maxlength=\\\"32\\\">\\n                        </div>\\n                    </tab>\\n                </tabset>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { IAjaxResponse } from '@abp/abpHttpInterceptor';\nimport { TokenService } from '@abp/auth/token.service';\nimport { AfterViewChecked, Component, Injector, OnInit } from '@angular/core';\nimport { AppConsts } from '@shared/AppConsts';\nimport { AppTimezoneScope } from '@shared/AppEnums';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { AppSessionService } from '@shared/common/session/app-session.service';\nimport { DefaultTimezoneScope, SendTestEmailInput, TenantSettingsEditDto, TenantSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { FileUploader, FileUploaderOptions } from 'ng2-file-upload';\n\n@Component({\n    templateUrl: './tenant-settings.component.html',\n    animations: [appModuleAnimation()]\n})\nexport class TenantSettingsComponent extends AppComponentBase implements OnInit, AfterViewChecked {\n\n    usingDefaultTimeZone = false;\n    initialTimeZone: string = null;\n    testEmailAddress: string = undefined;\n\n    isMultiTenancyEnabled: boolean = this.multiTenancy.isEnabled;\n    showTimezoneSelection: boolean = abp.clock.provider.supportsMultipleTimezone;\n    activeTabIndex: number = (abp.clock.provider.supportsMultipleTimezone) ? 0 : 1;\n    loading = false;\n    settings: TenantSettingsEditDto = undefined;\n\n    logoUploader: FileUploader;\n    customCssUploader: FileUploader;\n\n    remoteServiceBaseUrl = AppConsts.remoteServiceBaseUrl;\n\n    defaultTimezoneScope: DefaultTimezoneScope = AppTimezoneScope.Tenant;\n\n    constructor(\n        injector: Injector,\n        private _tenantSettingsService: TenantSettingsServiceProxy,\n        private _appSessionService: AppSessionService,\n        private _tokenService: TokenService\n    ) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n        this.testEmailAddress = this._appSessionService.user.emailAddress;\n        this.getSettings();\n        this.initUploaders();\n    }\n\n    ngAfterViewChecked(): void {\n        //Temporary fix for: https://github.com/valor-software/ngx-bootstrap/issues/1508\n        $('tabset ul.nav').addClass('m-tabs-line');\n        $('tabset ul.nav li a.nav-link').addClass('m-tabs__link');\n    }\n\n    getSettings(): void {\n        this.loading = true;\n        this._tenantSettingsService.getAllSettings()\n            .finally(() => {\n                this.loading = false;\n            })\n            .subscribe((result: TenantSettingsEditDto) => {\n                this.settings = result;\n                if (this.settings.general) {\n                    this.initialTimeZone = this.settings.general.timezone;\n                    this.usingDefaultTimeZone = this.settings.general.timezoneForComparison === abp.setting.values['Abp.Timing.TimeZone'];\n                }\n            });\n    }\n\n    initUploaders(): void {\n        this.logoUploader = this.createUploader(\n            '/TenantCustomization/UploadLogo',\n            result => {\n                this._appSessionService.tenant.logoFileType = result.fileType;\n                this._appSessionService.tenant.logoId = result.id;\n            }\n        );\n\n        this.customCssUploader = this.createUploader(\n            '/TenantCustomization/UploadCustomCss',\n            result => {\n                this.appSession.tenant.customCssId = result.id;\n                $('#TenantCustomCss').remove();\n                $('head').append('<link id=\"TenantCustomCss\" href=\"' + AppConsts.remoteServiceBaseUrl + '/TenantCustomization/GetCustomCss?id=' + this.appSession.tenant.customCssId + '\" rel=\"stylesheet\"/>');\n            }\n        );\n    }\n\n    createUploader(url: string, success?: (result: any) => void): FileUploader {\n        const uploader = new FileUploader({ url: AppConsts.remoteServiceBaseUrl + url });\n\n        uploader.onAfterAddingFile = (file) => {\n            file.withCredentials = false;\n        };\n\n        uploader.onSuccessItem = (item, response, status) => {\n            const ajaxResponse = <IAjaxResponse>JSON.parse(response);\n            if (ajaxResponse.success) {\n                this.notify.info(this.l('SavedSuccessfully'));\n                if (success) {\n                    success(ajaxResponse.result);\n                }\n            } else {\n                this.message.error(ajaxResponse.error.message);\n            }\n        };\n\n        const uploaderOptions: FileUploaderOptions = {};\n        uploaderOptions.authToken = 'Bearer ' + this._tokenService.getToken();\n        uploaderOptions.removeAfterUpload = true;\n        uploader.setOptions(uploaderOptions);\n        return uploader;\n    }\n\n    uploadLogo(): void {\n        this.logoUploader.uploadAll();\n    }\n\n    uploadCustomCss(): void {\n        this.customCssUploader.uploadAll();\n    }\n\n    clearLogo(): void {\n        this._tenantSettingsService.clearLogo().subscribe(() => {\n            this._appSessionService.tenant.logoFileType = null;\n            this._appSessionService.tenant.logoId = null;\n            this.notify.info(this.l('ClearedSuccessfully'));\n        });\n    }\n\n    clearCustomCss(): void {\n        this._tenantSettingsService.clearCustomCss().subscribe(() => {\n            this.appSession.tenant.customCssId = null;\n            $('#TenantCustomCss').remove();\n            this.notify.info(this.l('ClearedSuccessfully'));\n        });\n    }\n\n    saveAll(): void {\n        this._tenantSettingsService.updateAllSettings(this.settings).subscribe(() => {\n            this.notify.info(this.l('SavedSuccessfully'));\n\n            if (abp.clock.provider.supportsMultipleTimezone && this.usingDefaultTimeZone && this.initialTimeZone !== this.settings.general.timezone) {\n                this.message.info(this.l('TimeZoneSettingChangedRefreshPageNotification')).done(() => {\n                    window.location.reload();\n                });\n            }\n        });\n    }\n\n    sendTestEmail(): void {\n        const input = new SendTestEmailInput();\n        input.emailAddress = this.testEmailAddress;\n        this._tenantSettingsService.sendTestEmail(input).subscribe(result => {\n            this.notify.info(this.l('TestEmailSentSuccessfully'));\n        });\n    }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { ComboboxItemDto, EditionServiceProxy } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    selector: 'edition-combo',\n    template:\n    `<select #EditionCombobox\n        class=\"form-control\"\n        [(ngModel)]=\"selectedEdition\"\n        (ngModelChange)=\"selectedEditionChange.emit($event)\"\n        [attr.data-live-search]=\"true\">\n            <option *ngFor=\"let edition of editions\" [value]=\"edition.value\">{{edition.displayText}}</option>\n    </select>`\n})\nexport class EditionComboComponent extends AppComponentBase implements OnInit, AfterViewInit {\n\n    @ViewChild('EditionCombobox') editionComboboxElement: ElementRef;\n\n    editions: ComboboxItemDto[] = [];\n\n    @Input() selectedEdition: string = undefined;\n    @Output() selectedEditionChange: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor(\n        private _editionService: EditionServiceProxy,\n        injector: Injector) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n        let self = this;\n        this._editionService.getEditionComboboxItems(0, true, false).subscribe(editions => {\n            this.editions = editions;\n            setTimeout(() => {\n                $(self.editionComboboxElement.nativeElement).selectpicker('refresh');\n            }, 0);\n        });\n    }\n\n    ngAfterViewInit(): void {\n        $(this.editionComboboxElement.nativeElement).selectpicker({\n            iconBase: 'famfamfam-flag',\n            tickIcon: 'fa fa-check'\n        });\n    }\n}\n","module.exports = \".feature-tree-textbox {\\n  max-width: 100px;\\n  margin: 1px;\\n  margin-left: 5px;\\n}\\n.feature-tree-textbox.feature-tree-textbox-invalid {\\n  background: #f00;\\n  color: white;\\n}\\n\"","import { AfterViewChecked, AfterViewInit, Component, ElementRef, Injector, OnInit } from '@angular/core';\nimport { FeatureTreeEditModel } from '@app/admin/shared/feature-tree-edit.model';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { FlatFeatureDto, NameValueDto } from '@shared/service-proxies/service-proxies';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'feature-tree',\n    template: `<div class=\"feature-tree\"></div>`,\n    styleUrls: ['./feature-tree.component.less']\n})\nexport class FeatureTreeComponent extends AppComponentBase implements OnInit, AfterViewInit, AfterViewChecked {\n\n    set editData(val: FeatureTreeEditModel) {\n        this._editData = val;\n        this.refreshTree();\n    }\n\n    private _$tree: JQuery;\n    private _editData: FeatureTreeEditModel;\n    private _createdTreeBefore;\n\n    constructor(private _element: ElementRef,\n        injector: Injector\n    ) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    ngAfterViewInit(): void {\n        this._$tree = $(this._element.nativeElement);\n\n        this.refreshTree();\n    }\n\n    ngAfterViewChecked(): void {\n\n    }\n\n    getGrantedFeatures(): NameValueDto[] {\n        if (!this._$tree || !this._createdTreeBefore) {\n            return [];\n        }\n\n        const selectedFeatures = this._$tree.jstree('get_selected', true);\n\n        return _.map(this._editData.features, item => {\n            const feature = new NameValueDto();\n\n            feature.name = item.name;\n\n            if (!item.inputType || item.inputType.name === 'CHECKBOX') {\n                feature.value = _.some(selectedFeatures, { original: { id: item.name } }) ? 'true' : 'false';\n            } else {\n                feature.value = this.getFeatureValueByName(item.name);\n            }\n\n            return feature;\n        });\n    }\n\n    refreshTree(): void {\n        const self = this;\n\n        if (this._createdTreeBefore) {\n            this._$tree.jstree('destroy');\n        }\n\n        this._createdTreeBefore = false;\n\n        if (!this._editData || !this._$tree) {\n            return;\n        }\n\n        const treeData = _.map(this._editData.features, item => ({\n            id: item.name,\n            parent: item.parentName ? item.parentName : '#',\n            text: item.displayName,\n            state: {\n                opened: true,\n                selected: _.some(this._editData.featureValues, { name: item.name, value: 'true' })\n            }\n        }));\n\n        this._$tree\n            .on('ready.jstree', () => {\n                this.customizeTreeNodes();\n            })\n            .on('redraw.jstree', () => {\n                this.customizeTreeNodes();\n            })\n            .on('after_open.jstree', () => {\n                this.customizeTreeNodes();\n            })\n            .on('create_node.jstree', () => {\n                this.customizeTreeNodes();\n            })\n            .on('changed.jstree', (e, data) => {\n                if (!data.node) {\n                    return;\n                }\n\n                const wasInTreeChangeEvent = inTreeChangeEvent;\n                if (!wasInTreeChangeEvent) {\n                    inTreeChangeEvent = true;\n                }\n\n                let childrenNodes;\n\n                if (data.node.state.selected) {\n                    selectNodeAndAllParents(this._$tree.jstree('get_parent', data.node));\n\n                    childrenNodes = $.makeArray(this._$tree.jstree('get_children_dom', data.node));\n                    this._$tree.jstree('select_node', childrenNodes);\n\n                } else {\n                    childrenNodes = $.makeArray(this._$tree.jstree('get_children_dom', data.node));\n                    this._$tree.jstree('deselect_node', childrenNodes);\n                }\n\n                if (!wasInTreeChangeEvent) {\n                    const $nodeLi = this.getNodeLiByFeatureName(data.node.id);\n                    const feature = this.findFeatureByName(data.node.id);\n                    if (feature && (!feature.inputType || feature.inputType.name === 'CHECKBOX')) {\n                        const value = this._$tree.jstree('is_checked', $nodeLi) ? 'true' : 'false';\n                        this.setFeatureValueByName(data.node.id, value);\n                    }\n\n                    inTreeChangeEvent = false;\n                }\n            })\n            .jstree({\n                'core': {\n                    data: treeData\n                },\n                'types': {\n                    'default': {\n                        'icon': 'fa fa-folder m--font-warning'\n                    },\n                    'file': {\n                        'icon': 'fa fa-file m--font-warning'\n                    }\n                },\n                'checkbox': {\n                    keep_selected_style: false,\n                    three_state: false,\n                    cascade: ''\n                },\n                plugins: ['checkbox', 'types']\n            });\n\n        this._createdTreeBefore = true;\n\n        let inTreeChangeEvent = false;\n\n        function selectNodeAndAllParents(node) {\n            self._$tree.jstree('select_node', node, true);\n            const parent = self._$tree.jstree('get_parent', node);\n            if (parent) {\n                selectNodeAndAllParents(parent);\n            }\n        }\n\n        this._$tree.on('changed.jstree', (e, data) => {\n            if (!data.node) {\n                return;\n            }\n\n            const wasInTreeChangeEvent = inTreeChangeEvent;\n            if (!wasInTreeChangeEvent) {\n                inTreeChangeEvent = true;\n            }\n\n            let childrenNodes;\n\n            if (data.node.state.selected) {\n                selectNodeAndAllParents(this._$tree.jstree('get_parent', data.node));\n\n                childrenNodes = $.makeArray(this._$tree.jstree('get_children_dom', data.node));\n                this._$tree.jstree('select_node', childrenNodes);\n\n            } else {\n                childrenNodes = $.makeArray(this._$tree.jstree('get_children_dom', data.node));\n                this._$tree.jstree('deselect_node', childrenNodes);\n            }\n\n            if (!wasInTreeChangeEvent) {\n                inTreeChangeEvent = false;\n            }\n        });\n    }\n\n    customizeTreeNodes(): void {\n        const self = this;\n        self._$tree.find('.jstree-node').each(function () {\n            const $nodeLi = $(this);\n            const $nodeA = $nodeLi.find('.jstree-anchor');\n\n            const featureName = $nodeLi.attr('id');\n            const feature = self.findFeatureByName(featureName);\n            const featureValue = self.findFeatureValueByName(featureName) || '';\n\n            if (!feature || !feature.inputType) {\n                return;\n            }\n\n            if (feature.inputType.name === 'CHECKBOX') {\n                //no change for checkbox\n            } else if (feature.inputType.name === 'SINGLE_LINE_STRING') {\n                if (!$nodeLi.find('.feature-tree-textbox').length) {\n                    $nodeA.find('.jstree-checkbox').hide();\n\n                    let inputType = 'text';\n                    const validator = (feature.inputType.validator as any);\n                    if (feature.inputType.validator) {\n                        if (feature.inputType.validator.name === 'NUMERIC') {\n                            inputType = 'number';\n                        }\n                    }\n\n                    const $textbox = $('<input class=\"feature-tree-textbox\" type=\"' + inputType + '\" />')\n                        .val(featureValue);\n\n                    if (inputType === 'number') {\n                        $textbox.attr('min', validator.minValue);\n                        $textbox.attr('max', validator.maxValue);\n                    } else {\n                        if (feature.inputType.validator && feature.inputType.validator.name === 'STRING') {\n                            if (validator.maxLength > 0) {\n                                $textbox.attr('maxlength', validator.maxLength);\n                            }\n                            if (validator.minLength > 0) {\n                                $textbox.attr('required', 'required');\n                            }\n                            if (validator.regularExpression) {\n                                $textbox.attr('pattern', validator.regularExpression);\n                            }\n                        }\n                    }\n\n                    $textbox.on('input propertychange paste', () => {\n                        const value = $textbox.val() as string;\n                        if (self.isFeatureValueValid(featureName, value)) {\n                            self.setFeatureValueByName(featureName, value);\n                            $textbox.removeClass('feature-tree-textbox-invalid');\n                        } else {\n                            $textbox.addClass('feature-tree-textbox-invalid');\n                        }\n                    });\n\n                    $textbox.appendTo($nodeLi);\n                }\n            } else if (feature.inputType.name === 'COMBOBOX') {\n                if (!$nodeLi.find('.feature-tree-combobox').length) {\n                    $nodeA.find('.jstree-checkbox').hide();\n\n                    const $combobox = $('<select class=\"feature-tree-combobox\" />');\n                    const inputType = (feature.inputType as any);\n                    _.each(inputType.itemSource.items, (opt: any) => {\n                        $('<option></option>')\n                            .attr('value', opt.value)\n                            .text(opt.displayText)\n                            .appendTo($combobox);\n                    });\n\n                    $combobox\n                        .val(featureValue)\n                        .on('change', () => {\n                            const value = $combobox.val() as string;\n                            self.setFeatureValueByName(featureName, value);\n                        })\n                        .appendTo($nodeLi);\n                }\n            }\n        });\n    }\n\n    getNodeLiByFeatureName(featureName: string): JQuery {\n        return $('#' + featureName.replace('.', '\\\\.'));\n    }\n\n    selectNodeAndAllParents(node: any): void {\n        const self = this;\n        self._$tree.jstree('select_node', node, true);\n        const parent = self._$tree.jstree('get_parent', node);\n        if (parent) {\n            self.selectNodeAndAllParents(parent);\n        }\n    }\n\n    findFeatureByName(featureName: string): FlatFeatureDto {\n        const self = this;\n\n        const feature = _.find(self._editData.features, f => f.name === featureName);\n\n        if (!feature) {\n            abp.log.warn('Could not find a feature by name: ' + featureName);\n        }\n\n        return feature;\n    }\n\n    findFeatureValueByName(featureName: string) {\n        const self = this;\n        const feature = self.findFeatureByName(featureName);\n        if (!feature) {\n            return '';\n        }\n\n        const featureValue = _.find(self._editData.featureValues, f => f.name === featureName);\n        if (!featureValue) {\n            return feature.defaultValue;\n        }\n\n        return featureValue.value;\n    }\n\n    isFeatureValueValid(featureName: string, value: string): boolean {\n        const self = this;\n        const feature = self.findFeatureByName(featureName);\n        if (!feature || !feature.inputType || !feature.inputType.validator) {\n            return true;\n        }\n\n        const validator = (feature.inputType.validator as any);\n        if (validator.name === 'STRING') {\n            if (value === undefined || value === null) {\n                return validator.allowNull;\n            }\n\n            if (typeof value !== 'string') {\n                return false;\n            }\n\n            if (validator.minLength > 0 && value.length < validator.minLength) {\n                return false;\n            }\n\n            if (validator.maxLength > 0 && value.length > validator.maxLength) {\n                return false;\n            }\n\n            if (validator.regularExpression) {\n                return (new RegExp(validator.regularExpression)).test(value);\n            }\n        } else if (validator.name === 'NUMERIC') {\n            const numValue = parseInt(value);\n\n            if (isNaN(numValue)) {\n                return false;\n            }\n\n            const minValue = validator.minValue;\n            if (minValue > numValue) {\n                return false;\n            }\n\n            const maxValue = validator.maxValue;\n            if (maxValue > 0 && numValue > maxValue) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    areAllValuesValid(): boolean {\n        const self = this;\n        self._$tree.find('.jstree-node').each(function () {\n            const $nodeLi = $(this);\n            const featureName = $nodeLi.attr('id');\n            const feature = self.findFeatureByName(featureName);\n\n            if (feature && (!feature.inputType || feature.inputType.name === 'CHECKBOX')) {\n                const value = self._$tree.jstree('is_checked', $nodeLi) ? 'true' : 'false';\n                self.setFeatureValueByName(featureName, value);\n            }\n        });\n\n        return self._$tree.find('.feature-tree-textbox-invalid').length <= 0;\n    }\n\n    setFeatureValueByName(featureName: string, value: string): void {\n        const featureValue = _.find(this._editData.featureValues, f => f.name === featureName);\n        if (!featureValue) {\n            return;\n        }\n\n        featureValue.value = value;\n    }\n\n    getFeatureValueByName(featureName: string): string {\n        const featureValue = _.find(this._editData.featureValues, f => f.name === featureName);\n        if (!featureValue) {\n            return null;\n        }\n\n        return featureValue.value;\n    }\n\n    isFeatureEnabled(featureName: string): boolean {\n        const self = this;\n        const value = self.findFeatureValueByName(featureName);\n        return value.toLowerCase() === 'true';\n    }\n}\n","import { AfterViewInit, Component, ElementRef, Injector } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { HtmlHelper } from '@shared/helpers/HtmlHelper';\nimport { OrganizationUnitDto } from '@shared/service-proxies/service-proxies';\nimport * as _ from 'lodash';\n\nexport interface IOrganizationUnitsTreeComponentData {\n    allOrganizationUnits: OrganizationUnitDto[];\n    selectedOrganizationUnits: string[];\n}\n\n@Component({\n    selector: 'organization-unit-tree',\n    template:\n    `<div class='form-group'>\n        <input id='OrganizationUnitsTreeFilter' type='text' class='form-control' placeholder='{{l(\"SearchWithThreeDot\")}}' >\n    </div>\n    <div class=\"organization-unit-tree\"></div>\n    `\n})\nexport class OrganizationUnitsTreeComponent extends AppComponentBase implements AfterViewInit {\n\n    set data(data: IOrganizationUnitsTreeComponentData) {\n        this._allOrganizationUnits = data.allOrganizationUnits;\n        this._selectedOrganizationUnits = data.selectedOrganizationUnits;\n        this.refreshTree();\n    }\n\n    private _$tree: JQuery;\n    private _createdTreeBefore;\n\n    private _allOrganizationUnits: OrganizationUnitDto[];\n    private _selectedOrganizationUnits: string[];\n\n    private filter = '';\n\n    constructor(private _element: ElementRef,\n        injector: Injector\n    ) {\n        super(injector);\n    }\n\n    ngAfterViewInit(): void {\n        this._$tree = $(this._element.nativeElement).find('.organization-unit-tree');\n        this.refreshTree();\n        this.initFiltering();\n    }\n\n    getSelectedOrganizations(): number[] {\n        if (!this._$tree || !this._createdTreeBefore) {\n            return [];\n        }\n\n        let organizationIds = [];\n\n        let selectedOrganizations = this._$tree.jstree('get_selected', true);\n        for (let i = 0; i < selectedOrganizations.length; i++) {\n            organizationIds.push(selectedOrganizations[i].original.id);\n        }\n\n        return organizationIds;\n    }\n\n    refreshTree(): void {\n        let self = this;\n\n        if (this._createdTreeBefore) {\n            this._$tree.jstree('destroy');\n        }\n\n        this._createdTreeBefore = false;\n\n        if (!this._allOrganizationUnits || !this._$tree) {\n            return;\n        }\n\n        let treeData = _.map(this._allOrganizationUnits, item => (<any>{\n            id: item.id,\n            parent: item.parentId ? item.parentId : '#',\n            code: item.code,\n            displayName: item.displayName,\n            memberCount: item.memberCount,\n            text: HtmlHelper.encodeText(item.displayName) ,\n            dto: item,\n            state: {\n                opened: true,\n                selected: _.includes(self._selectedOrganizationUnits, item.code)\n            }\n        }));\n\n        this._$tree.jstree({\n            'core': {\n                data: treeData\n            },\n            'types': {\n                'default': {\n                    'icon': 'fa fa-folder m--font-warning'\n                },\n                'file': {\n                    'icon': 'fa fa-file m--font-warning'\n                }\n            },\n            'checkbox': {\n                keep_selected_style: false,\n                three_state: false,\n                cascade: ''\n            },\n            'search': {\n                'show_only_matches': true\n            },\n            plugins: ['checkbox', 'types', 'search']\n        });\n\n        this._createdTreeBefore = true;\n\n        let inTreeChangeEvent = false;\n\n        function selectNodeAndAllParents(node) {\n            self._$tree.jstree('select_node', node, true);\n            let parent = self._$tree.jstree('get_parent', node);\n            if (parent) {\n                selectNodeAndAllParents(parent);\n            }\n        }\n\n        this._$tree.on('changed.jstree', (e, data) => {\n            if (!data.node) {\n                return;\n            }\n\n            let wasInTreeChangeEvent = inTreeChangeEvent;\n            if (!wasInTreeChangeEvent) {\n                inTreeChangeEvent = true;\n            }\n\n            let childrenNodes;\n\n            if (data.node.state.selected) {\n                selectNodeAndAllParents(this._$tree.jstree('get_parent', data.node));\n\n                childrenNodes = $.makeArray(this._$tree.jstree('get_children_dom', data.node));\n                this._$tree.jstree('select_node', childrenNodes);\n\n            } else {\n                childrenNodes = $.makeArray(this._$tree.jstree('get_children_dom', data.node));\n                this._$tree.jstree('deselect_node', childrenNodes);\n            }\n\n            if (!wasInTreeChangeEvent) {\n                inTreeChangeEvent = false;\n            }\n        });\n    }\n\n    initFiltering(): void {\n        let to = false;\n        let self = this;\n\n        $('#OrganizationUnitsTreeFilter').keyup(() => {\n            if (to) { (window as any).clearTimeout(to); }\n            to = (window as any).setTimeout(() => {\n                let v = $('#OrganizationUnitsTreeFilter').val() as string;\n                self._$tree.jstree(true).search(v);\n            }, 250);\n        });\n    }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { FlatPermissionWithLevelDto, PermissionServiceProxy } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    selector: 'permission-combo',\n    template:\n    `<select #PermissionCombobox\n        class=\"form-control\"\n        [(ngModel)]=\"selectedPermission\"\n        (ngModelChange)=\"selectedPermissionChange.emit($event)\"\n        [attr.data-live-search]=\"true\">\n            <option value=\"\">{{l('FilterByPermission')}}</option>\n            <option *ngFor=\"let permission of permissions\" [value]=\"permission.name\">{{permission.displayName}}</option>\n    </select>`\n})\nexport class PermissionComboComponent extends AppComponentBase implements OnInit, AfterViewInit {\n\n    @ViewChild('PermissionCombobox') permissionComboboxElement: ElementRef;\n\n    permissions: FlatPermissionWithLevelDto[] = [];\n\n    @Input() selectedPermission: string = undefined;\n    @Output() selectedPermissionChange: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor(\n        private _permissionService: PermissionServiceProxy,\n        injector: Injector) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n        let self = this;\n        this._permissionService.getAllPermissions().subscribe(result => {\n            $.each(result.items, (index, item) => {\n                item.displayName = Array(item.level + 1).join('---') + ' ' + item.displayName;\n            });\n\n            this.permissions = result.items;\n            setTimeout(() => {\n                $(self.permissionComboboxElement.nativeElement).selectpicker('refresh');\n            }, 0);\n        });\n    }\n\n    ngAfterViewInit(): void {\n        $(this.permissionComboboxElement.nativeElement).selectpicker({\n            iconBase: 'famfamfam-flag',\n            tickIcon: 'fa fa-check'\n        });\n    }\n}\n","import { AfterViewChecked, AfterViewInit, Component, ElementRef, Injector, OnInit } from '@angular/core';\nimport { PermissionTreeEditModel } from '@app/admin/shared/permission-tree-edit.model';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'permission-tree',\n    template:\n    `<div class=\"permission-tree\"></div>`\n})\nexport class PermissionTreeComponent extends AppComponentBase implements OnInit, AfterViewInit, AfterViewChecked {\n\n    set editData(val: PermissionTreeEditModel) {\n        this._editData = val;\n        this.refreshTree();\n    }\n\n    private _$tree: JQuery;\n    private _editData: PermissionTreeEditModel;\n    private _createdTreeBefore;\n\n    constructor(private _element: ElementRef,\n        injector: Injector\n    ) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit(): void {\n        this._$tree = $(this._element.nativeElement);\n\n        this.refreshTree();\n    }\n\n    ngAfterViewChecked(): void {\n\n    }\n\n    getGrantedPermissionNames(): string[] {\n        if (!this._$tree || !this._createdTreeBefore) {\n            return [];\n        }\n\n        let permissionNames = [];\n\n        let selectedPermissions = this._$tree.jstree('get_selected', true);\n        for (let i = 0; i < selectedPermissions.length; i++) {\n            permissionNames.push(selectedPermissions[i].original.id);\n        }\n\n        return permissionNames;\n    }\n\n    refreshTree(): void {\n        let self = this;\n\n        if (this._createdTreeBefore) {\n            this._$tree.jstree('destroy');\n        }\n\n        this._createdTreeBefore = false;\n\n        if (!this._editData || !this._$tree) {\n            return;\n        }\n\n        let treeData = _.map(this._editData.permissions, function (item) {\n            return {\n                id: item.name,\n                parent: item.parentName ? item.parentName : '#',\n                text: item.displayName,\n                state: {\n                    opened: true,\n                    selected: _.includes(self._editData.grantedPermissionNames, item.name)\n                }\n            };\n        });\n\n        this._$tree.jstree({\n            'core': {\n                data: treeData\n            },\n            'types': {\n                'default': {\n                    'icon': 'fa fa-folder m--font-warning'\n                },\n                'file': {\n                    'icon': 'fa fa-file m--font-warning'\n                }\n            },\n            'checkbox': {\n                keep_selected_style: false,\n                three_state: false,\n                cascade: ''\n            },\n            plugins: ['checkbox', 'types']\n        });\n\n        this._createdTreeBefore = true;\n\n        let inTreeChangeEvent = false;\n\n        function selectNodeAndAllParents(node) {\n            self._$tree.jstree('select_node', node, true);\n            let parent = self._$tree.jstree('get_parent', node);\n            if (parent) {\n                selectNodeAndAllParents(parent);\n            }\n        }\n\n        this._$tree.on('changed.jstree', function (e, data) {\n            if (!data.node) {\n                return;\n            }\n\n            let wasInTreeChangeEvent = inTreeChangeEvent;\n            if (!wasInTreeChangeEvent) {\n                inTreeChangeEvent = true;\n            }\n\n            let childrenNodes;\n\n            if (data.node.state.selected) {\n                selectNodeAndAllParents(self._$tree.jstree('get_parent', data.node));\n\n                childrenNodes = $.makeArray(self._$tree.jstree('get_children_dom', data.node));\n                self._$tree.jstree('select_node', childrenNodes);\n\n            } else {\n                childrenNodes = $.makeArray(self._$tree.jstree('get_children_dom', data.node));\n                self._$tree.jstree('deselect_node', childrenNodes);\n            }\n\n            if (!wasInTreeChangeEvent) {\n                inTreeChangeEvent = false;\n            }\n        });\n    }\n}\n","import { Component, ElementRef, EventEmitter, Injector, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { RoleListDto, RoleServiceProxy } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    selector: 'role-combo',\n    template:\n    `<select #RoleCombobox\n        class=\"form-control\"\n        [(ngModel)]=\"selectedRole\"\n        (ngModelChange)=\"selectedRoleChange.emit($event)\"\n        [attr.data-live-search]=\"true\"\n        jq-plugin=\"selectpicker\">\n            <option value=\"\">{{emptyText}}</option>\n            <option *ngFor=\"let role of roles\" [value]=\"role.id\">{{role.displayName}}</option>\n    </select>`\n})\nexport class RoleComboComponent extends AppComponentBase implements OnInit {\n\n    @ViewChild('RoleCombobox') roleComboboxElement: ElementRef;\n\n    roles: RoleListDto[] = [];\n\n    @Input() selectedRole: string = undefined;\n    @Output() selectedRoleChange: EventEmitter<string> = new EventEmitter<string>();\n\n    @Input() emptyText = '';\n\n    constructor(\n        private _roleService: RoleServiceProxy,\n        injector: Injector) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n        const self = this;\n        this._roleService.getRoles(undefined).subscribe(result => {\n            this.roles = result.items;\n            setTimeout(() => {\n                $(self.roleComboboxElement.nativeElement).selectpicker('refresh');\n            }, 0);\n        });\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-content\\\">\\n\\n        <div class=\\\"m-portlet\\\">\\n            <div class=\\\"m-portlet__body m-portlet__body--no-padding\\\">\\n\\n                <div class=\\\"m-invoice-1\\\">\\n                    <div class=\\\"m-invoice__wrapper\\\">\\n                        <div class=\\\"m-invoice__head\\\" [ngStyle]=\\\"{ 'background': 'url(' + appRootUrl() + 'assets/common/images/bg-6.jpg)', 'background-size': 'cover'}\\\"\\n                             style=\\\"background-image: url(/assets/common/images/bg-6.jpg);\\\">\\n                            <div class=\\\"m-invoice__container m-invoice__container--centered\\\">\\n                                <div class=\\\"m-invoice__logo\\\">\\n                                    <a href=\\\"#\\\">\\n                                        <h1>{{l('Invoice')}}</h1>\\n                                    </a>\\n                                    <a href=\\\"#\\\">\\n                                        <img [src]=\\\"companyLogo\\\">\\n                                    </a>\\n                                </div>\\n                                <span class=\\\"m-invoice__desc\\\">\\n                                    {{invoiceInfo.hostLegalName}}\\n                                    <span *ngFor=\\\"let addressLine of invoiceInfo.hostAddress\\\">\\n                                        <br />{{addressLine}}\\n                                    </span>\\n                                </span>\\n                                <div class=\\\"m-invoice__items\\\">\\n                                    <div class=\\\"m-invoice__item\\\">\\n                                        <span class=\\\"m-invoice__subtitle\\\">{{l('Date')}}</span>\\n                                        <span class=\\\"m-invoice__text\\\">{{invoiceInfo.invoiceDate | momentFormat:'YYYY-MM-DD'}}</span>\\n                                    </div>\\n                                    <div class=\\\"m-invoice__item\\\">\\n                                        <span class=\\\"m-invoice__subtitle\\\">{{l('Invoice')}}</span>\\n                                        <span class=\\\"m-invoice__text\\\">#{{invoiceInfo.invoiceNo}}</span>\\n                                    </div>\\n                                    <div class=\\\"m-invoice__item\\\">\\n                                        <span class=\\\"m-invoice__subtitle\\\">{{l('InvoiceTo')}}</span>\\n                                        <span class=\\\"m-invoice__text\\\">\\n                                            {{invoiceInfo.tenantLegalName}}\\n                                            <span *ngFor=\\\"let addressLine of invoiceInfo.tenantAddress\\\">\\n                                                <br />{{addressLine}}\\n                                            </span>\\n                                            <br />{{l(\\\"Tax/VatNo\\\")}}: {{invoiceInfo.tenantTaxNo}}\\n                                        </span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"m-invoice__body m-invoice__body--centered\\\">\\n                            <div class=\\\"table-responsive\\\">\\n                                <table class=\\\"table\\\">\\n                                    <thead>\\n                                    <tr>\\n                                        <th style=\\\"width: 50px;\\\">#</th>\\n                                        <th>{{l(\\\"Edition\\\")}}</th>\\n                                        <th style=\\\"width: 100px;\\\">{{l(\\\"Amount\\\")}}</th>\\n                                    </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                    <tr>\\n                                        <td>1</td>\\n                                        <td>{{invoiceInfo.editionDisplayName}}</td>\\n                                        <td>${{invoiceInfo.amount | number: '1.2-2'}}</td>\\n                                    </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"m-invoice__footer\\\">\\n                            <div class=\\\"m-invoice__container m-invoice__container--centered\\\">\\n                                <div class=\\\"m-invoice__content\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary d-print-none print-btn\\\" onclick=\\\"javascript:window.print();\\\">{{(\\\"Print\\\")}}</button>\\n                                </div>\\n                                <div class=\\\"m-invoice__content\\\">\\n                                    <span>{{l(\\\"Total\\\")}}</span>\\n                                    <span class=\\\"m-invoice__price\\\">${{invoiceInfo.amount | number: '1.2-2'}}</span>\\n                                    <span></span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"/* Cubic Bezier Transition */\\n/***\\nInvoice page 2\\n***/\\n.invoice-content-2 {\\n  background-color: #fff;\\n  padding: 80px 70px;\\n}\\n.invoice-content-2.bordered {\\n  border: 1px solid;\\n  border-color: #e7ecf1;\\n}\\n.invoice-content-2 .invoice-head {\\n  margin-bottom: 50px;\\n}\\n.invoice-content-2 .invoice-head .invoice-logo > img {\\n  display: inline-block;\\n}\\n.invoice-content-2 .invoice-head .invoice-logo > h1 {\\n  float: left;\\n  font-size: 17px;\\n  font-weight: 700;\\n  color: #39424a;\\n  margin-top: 48px;\\n}\\n.invoice-content-2 .invoice-head .company-address {\\n  text-align: right;\\n  font-size: 14px;\\n  color: #7e8691;\\n}\\n.invoice-content-2 .invoice-title {\\n  font-size: 12px;\\n  font-weight: 600;\\n  letter-spacing: 1px;\\n  color: #9ea8b7;\\n}\\n.invoice-content-2 .invoice-desc {\\n  font-size: 14px;\\n  color: #4e5a64;\\n  font-weight: 600;\\n}\\n.invoice-content-2 .invoice-desc.inv-address {\\n  font-size: 13px;\\n  color: #7e8691;\\n  font-weight: 400;\\n}\\n.invoice-content-2 .invoice-desc.grand-total {\\n  font-size: 16px;\\n  font-weight: 700;\\n}\\n.invoice-content-2 .invoice-cust-add {\\n  margin-bottom: 50px;\\n}\\n.invoice-content-2 .invoice-body {\\n  padding-top: 100px;\\n}\\n.invoice-content-2 .invoice-body .text-center {\\n  text-align: center;\\n}\\n.invoice-content-2 .invoice-body tr:last-child {\\n  border-bottom: 1px solid #e7ecf1;\\n}\\n.invoice-content-2 .invoice-body th,\\n.invoice-content-2 .invoice-body td {\\n  vertical-align: middle;\\n  padding-left: 40px;\\n  padding-right: 40px;\\n}\\n.invoice-content-2 .invoice-body th:first-child,\\n.invoice-content-2 .invoice-body td:first-child {\\n  padding-left: 0;\\n}\\n.invoice-content-2 .invoice-body th:last-child,\\n.invoice-content-2 .invoice-body td:last-child {\\n  padding-right: 0;\\n}\\n.invoice-content-2 .invoice-body h3 {\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #4e5a64;\\n  margin-bottom: 0;\\n}\\n.invoice-content-2 .invoice-body p {\\n  font-size: 13px;\\n  color: #7e8691;\\n}\\n.invoice-content-2 .print-btn {\\n  float: right;\\n  font-size: 14px;\\n  font-weight: 600;\\n  letter-spacing: 1px;\\n}\\n@media (max-width: 1024px) {\\n  .invoice-content-2 .invoice-head .invoice-logo > img {\\n    width: 130px;\\n    margin-top: 26px;\\n  }\\n}\\n@media (max-width: 991px) {\\n  .invoice-content-2 {\\n    padding: 40px 30px;\\n  }\\n}\\n@media (max-width: 480px) {\\n  .invoice-content-2 .invoice-head .invoice-logo > h1 {\\n    margin-top: 10px;\\n  }\\n  .invoice-content-2 .invoice-head .company-address {\\n    font-size: 12px;\\n  }\\n}\\n.invoice-content-2 .invoice-body table tbody tr:last-child {\\n  border-bottom: none;\\n}\\n.invoice-subtotal {\\n  margin-top: 350px;\\n}\\n\"","import { Component, Injector, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { AppConsts } from '@shared/AppConsts';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { InvoiceDto, InvoiceServiceProxy } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    templateUrl: './invoice.component.html',\n    styleUrls: ['./invoice.component.less'],\n    animations: [appModuleAnimation()]\n})\n\nexport class InvoiceComponent extends AppComponentBase implements OnInit {\n\n    paymentId = 0;\n    invoiceInfo: InvoiceDto = new InvoiceDto();\n    companyLogo = AppConsts.appBaseUrl + '/assets/common/images/logo.png';\n\n    constructor(\n        injector: Injector,\n        private _invoiceServiceProxy: InvoiceServiceProxy,\n        private activatedRoute: ActivatedRoute\n    ) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n        this.getAllInfo();\n    }\n\n    getAllInfo(): void {\n\n        this.activatedRoute.params.subscribe((params: Params) => {\n            this.paymentId = params['paymentId'];\n        });\n\n        this._invoiceServiceProxy.getInvoiceInfo(this.paymentId).subscribe(result => {\n            this.invoiceInfo = result;\n        });\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto\\\">\\n                <h3 class=\\\"m-subheader__title\\\">\\n                    <span>{{l(\\\"Subscription\\\")}}</span>\\n                </h3>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <tabset class=\\\"tab-container tabbable-line\\\">\\n                    <tab heading=\\\"{{l('SubscriptionInformation')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <form class=\\\"m-form m-form--label-align-right\\\">\\n                            <input type=\\\"hidden\\\" Name=\\\"PaymentPeriodType\\\" value=\\\"@tenant.PaymentPeriodType\\\" />\\n                            <input type=\\\"hidden\\\" Name=\\\"Gateway\\\" value=\\\"@SubscriptionPaymentGatewayType.Paypal\\\" />\\n\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-sm-4 control-label m--font-bold\\\">{{l(\\\"Edition\\\")}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <p *ngIf=\\\"tenant.edition\\\">\\n                                        {{tenant.edition.displayName}}\\n                                        <span *ngIf=\\\"tenant.edition.isFree\\\" class=\\\"m-badge m-badge--success m-badge--wide\\\">{{l(\\\"Free\\\")}}</span>\\n                                        <span *ngIf=\\\"tenant.isInTrialPeriod\\\" class=\\\"m-badge m-badge--warning m-badge--wide\\\">{{l(\\\"Trial\\\")}}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-sm-4 control-label m--font-bold\\\">{{l(\\\"SubscriptionStartDate\\\")}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <p>{{ tenant.creationTimeString }}</p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-sm-4 control-label m--font-bold\\\">{{l(\\\"SubscriptionEndDate\\\")}}</label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <p *ngIf=\\\"tenant.edition\\\">\\n                                        <span>{{tenant.subscriptionDateString}}</span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group row\\\">\\n                                <label class=\\\"col-sm-4 control-label\\\"></label>\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <a *ngIf=\\\"tenant.edition && !tenant.edition.isFree && !tenant.isInTrialPeriod\\\"\\n                                       [routerLink]=\\\"['/account/extend']\\\" [queryParams]=\\\"{ editionPaymentType: editionPaymentType.Extend}\\\" class=\\\"btn btn-info\\\">\\n                                        {{l(\\\"Extend\\\")}}\\n                                    </a>\\n                                    <a *ngIf=\\\"tenant.isInTrialPeriod\\\"\\n                                       [routerLink]=\\\"['/account/buy']\\\" [queryParams]=\\\"{editionPaymentType: editionPaymentType.BuyNow, editionId: tenant.edition.id }\\\"\\n                                       class=\\\"btn btn-info\\\">\\n                                        {{l(\\\"BuyNow\\\")}}\\n                                    </a>\\n                                    <a *ngIf=\\\"tenant.edition && (tenant.edition.isFree || !tenant.edition.isHighestEdition) && !tenant.isInTrialPeriod\\\"\\n                                       [routerLink]=\\\"['/account/select-edition']\\\" class=\\\"btn btn-warning\\\">\\n                                        {{l(\\\"Upgrade\\\")}}\\n                                    </a>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </tab>\\n                    <tab heading=\\\"{{l('PaymentHistory')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <div class=\\\"primeng-datatable-container\\\"\\n                             [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                            <p-table #dataTable\\n                                         (onLazyLoad)=\\\"getPaymentHistory($event)\\\"\\n                                         [value]=\\\"primengTableHelper.records\\\"\\n                                         rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                         [paginator]=\\\"false\\\"\\n                                         [lazy]=\\\"true\\\"\\n                                         [responsive]=\\\"primengTableHelper.isResponsive\\\">\\n                                <ng-template pTemplate=\\\"header\\\">\\n                                    <tr>\\n                                        <th>{{l('Invoice')}}</th>\\n                                        <th pSortableColumn=\\\"creationTime\\\">\\n                                            {{l('ProcessTime')}}\\n                                            <p-sortIcon field=\\\"creationTime\\\"></p-sortIcon>\\n                                        </th>\\n                                        <th pSortableColumn=\\\"editionDisplayName\\\">\\n                                            {{l('Edition')}}\\n                                            <p-sortIcon field=\\\"editionDisplayName\\\"></p-sortIcon>\\n                                        </th>\\n                                        <th pSortableColumn=\\\"gateway\\\">\\n                                            {{l('Gateway')}}\\n                                            <p-sortIcon field=\\\"gateway\\\"></p-sortIcon>\\n                                        </th>\\n                                        <th pSortableColumn=\\\"amount\\\">\\n                                            {{l('Amount')}}\\n                                            <p-sortIcon field=\\\"amount\\\"></p-sortIcon>\\n                                        </th>\\n                                        <th pSortableColumn=\\\"status\\\">\\n                                            {{l('Status')}}\\n                                            <p-sortIcon field=\\\"status\\\"></p-sortIcon>\\n                                        </th>\\n                                        <th pSortableColumn=\\\"paymentPeriodType\\\">\\n                                            {{l('Period')}}\\n                                            <p-sortIcon field=\\\"paymentPeriodType\\\"></p-sortIcon>\\n                                        </th>\\n                                        <th>{{l('DayCount')}}</th>\\n                                        <th style=\\\"width: 250px;\\\">{{l('PaymentId')}}</th>\\n                                        <th pSortableColumn=\\\"invoiceNo\\\">\\n                                            {{l('InvoiceNo')}}\\n                                            <p-sortIcon field=\\\"invoiceNo\\\"></p-sortIcon>\\n                                        </th>\\n                                    </tr>\\n                                </ng-template>\\n                                <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                    <tr>\\n                                        <td>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary blue\\\" (click)=\\\"createOrShowInvoice(record.id, record.invoiceNo)\\\">{{l('ShowInvoice')}}</button>\\n                                        </td>\\n                                        <td>\\n                                            <span *ngIf=\\\"record.creationTime\\\">{{record.creationTime | momentFormat:'L'}}</span>\\n                                            <span *ngIf=\\\"!record.creationTime\\\">-</span>\\n                                        </td>\\n                                        <td>{{record.editionDisplayName}}</td>\\n                                        <td>\\n                                            {{l('SubscriptionPaymentGatewayType_' + record.gateway)}}\\n                                        </td>\\n                                        <td>\\n                                            {{record.amount}}\\n                                        </td>\\n                                        <td>\\n                                            {{l('SubscriptionPaymentStatus_' + record.status)}}\\n                                        </td>\\n                                        <td>\\n                                            {{l('PaymentPeriodType_' + record.paymentPeriodType)}}\\n                                        </td>\\n                                        <td>\\n                                            {{record.dayCount}}\\n                                        </td>\\n                                        <td style=\\\"width: 250px;\\\">\\n                                            {{record.paymentId}}\\n                                        </td>\\n                                        <td>\\n                                            {{record.invoiceNo}}\\n                                        </td>\\n                                    </tr>\\n                                </ng-template>\\n                            </p-table>\\n                            <div class=\\\"primeng-paging-container\\\">\\n                                <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                             #paginator\\n                                             (onPageChange)=\\\"getPaymentHistory($event)\\\"\\n                                             [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\n                                             [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\n                                </p-paginator>\\n                                <span class=\\\"total-records-count\\\">\\n                                    {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\n                                </span>\\n                            </div>\\n                        </div>\\n                    </tab>\\n                </tabset>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { AfterViewChecked, Component, Injector, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EditionPaymentType, SubscriptionStartType } from '@shared/AppEnums';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { AppSessionService } from '@shared/common/session/app-session.service';\nimport { ApplicationInfoDto, CreateInvoiceDto, InvoiceServiceProxy, PaymentServiceProxy, SessionServiceProxy, TenantLoginInfoDto, UserLoginInfoDto } from '@shared/service-proxies/service-proxies';\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\nimport { Paginator } from 'primeng/components/paginator/paginator';\nimport { Table } from 'primeng/components/table/table';\n\n@Component({\n    templateUrl: './subscription-management.component.html',\n    animations: [appModuleAnimation()]\n})\n\nexport class SubscriptionManagementComponent extends AppComponentBase implements OnInit, AfterViewChecked {\n\n    @ViewChild('dataTable') dataTable: Table;\n    @ViewChild('paginator') paginator: Paginator;\n\n    loading: boolean;\n    user: UserLoginInfoDto = new UserLoginInfoDto();\n    tenant: TenantLoginInfoDto = new TenantLoginInfoDto();\n    application: ApplicationInfoDto = new ApplicationInfoDto();\n    subscriptionStartType: typeof SubscriptionStartType = SubscriptionStartType;\n    editionPaymentType: EditionPaymentType = EditionPaymentType;\n\n    filterText = '';\n\n    constructor(\n        injector: Injector,\n        private _sessionService: SessionServiceProxy,\n        private _paymentServiceProxy: PaymentServiceProxy,\n        private _appSessionService: AppSessionService,\n        private _invoiceServiceProxy: InvoiceServiceProxy,\n        private _activatedRoute: ActivatedRoute\n    ) {\n        super(injector);\n        this.filterText = this._activatedRoute.snapshot.queryParams['filterText'] || '';\n    }\n\n    ngAfterViewChecked(): void {\n        //Temporary fix for: https://github.com/valor-software/ngx-bootstrap/issues/1508\n        $('tabset ul.nav').addClass('m-tabs-line');\n        $('tabset ul.nav li a.nav-link').addClass('m-tabs__link');\n    }\n\n    ngOnInit(): void {\n        this.getSettings();\n    }\n\n    createOrShowInvoice(paymentId: number, invoiceNo: string): void {\n        if (invoiceNo) {\n            window.open('/app/admin/invoice/' + paymentId, '_blank');\n        } else {\n            this._invoiceServiceProxy.createInvoice(new CreateInvoiceDto({ subscriptionPaymentId: paymentId })).subscribe(() => {\n                this.getPaymentHistory();\n                window.open('/app/admin/invoice/' + paymentId, '_blank');\n            });\n        }\n    }\n\n    getSettings(): void {\n        this.loading = true;\n        this._appSessionService.init().then(() => {\n            this.loading = false;\n            this.user = this._appSessionService.user;\n            this.tenant = this._appSessionService.tenant;\n            this.application = this._appSessionService.application;\n        });\n    }\n\n    getPaymentHistory(event?: LazyLoadEvent) {\n        if (this.primengTableHelper.shouldResetPaging(event)) {\n            this.paginator.changePage(0);\n\n            return;\n        }\n\n        this.primengTableHelper.showLoadingIndicator();\n\n        this._paymentServiceProxy.getPaymentHistory(\n            this.primengTableHelper.getSorting(this.dataTable),\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\n            this.primengTableHelper.getSkipCount(this.paginator, event)\n        ).subscribe(result => {\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\n            this.primengTableHelper.records = result.items;\n            this.primengTableHelper.hideLoadingIndicator();\n        });\n    }\n}\n","module.exports = \"<div bsModal #createModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n\\n        <div class=\\\"modal-content\\\">\\n\\n            <form #tenantCreateForm=\\\"ngForm\\\" role=\\\"form\\\" novalidate class=\\\"form-validation\\\" *ngIf=\\\"active\\\" (submit)=\\\"save()\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\">\\n                        <span>{{l(\\\"CreateNewTenant\\\")}}</span>\\n                    </h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n\\n                <div class=\\\"modal-body\\\">\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"TenancyName\\\">{{l(\\\"TenancyName\\\")}} *</label>\\n                        <input id=\\\"TenancyName\\\" #tenancyNameInput=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" [ngClass]=\\\"{'edited':tenant.tenancyName}\\\" name=\\\"tenancyName\\\" [(ngModel)]=\\\"tenant.tenancyName\\\" #tenancyName=\\\"ngModel\\\" required maxlength=\\\"64\\\" pattern=\\\"^[a-zA-Z][a-zA-Z0-9_-]{1,}$\\\">\\n                        <validation-messages [formCtrl]=\\\"tenancyNameInput\\\"></validation-messages>\\n                    </div>\\n                    <div>\\n                        <span class=\\\"help-block text-danger\\\" *ngIf=\\\"!tenancyName.valid && !tenancyName.pristine\\\">{{l(\\\"TenantName_Regex_Description\\\")}}</span>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"Name\\\">{{l(\\\"Name\\\")}} *</label>\\n                        <input id=\\\"Name\\\" #nameInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':tenant.name}\\\" [(ngModel)]=\\\"tenant.name\\\" required maxlength=\\\"128\\\">\\n                        <validation-messages [formCtrl]=\\\"nameInput\\\"></validation-messages>\\n                    </div>\\n\\n                    <div class=\\\"m-checkbox-list\\\">\\n                        <label class=\\\"m-checkbox\\\">\\n                            <input id=\\\"CreateTenant_UseHostDb\\\" type=\\\"checkbox\\\" name=\\\"UseHostDb\\\" [(ngModel)]=\\\"useHostDb\\\">\\n                            {{l(\\\"UseHostDatabase\\\")}}\\n                            <span></span>\\n                        </label>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!useHostDb\\\">\\n                        <label for=\\\"DatabaseConnectionString\\\">{{l(\\\"DatabaseConnectionString\\\")}} *</label>\\n                        <input id=\\\"DatabaseConnectionString\\\" #connectionStringInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"ConnectionString\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.connectionString\\\" [ngClass]=\\\"{'edited':tenant.connectionString}\\\" required maxlength=\\\"1024\\\">\\n                        <validation-messages [formCtrl]=\\\"connectionStringInput\\\"></validation-messages>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"AdminEmailAddress\\\">{{l(\\\"AdminEmailAddress\\\")}} *</label>\\n                        <input id=\\\"AdminEmailAddress\\\" #adminEmailAddressInput=\\\"ngModel\\\" type=\\\"email\\\" name=\\\"AdminEmailAddress\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.adminEmailAddress\\\" [ngClass]=\\\"{'edited':tenant.adminEmailAddress}\\\" required pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{1,})+$\\\" maxlength=\\\"256\\\">\\n                        <validation-messages [formCtrl]=\\\"adminEmailAddressInput\\\" [errorDefs]=\\\"[{pattern: l('InvalidEmailAddress')}]\\\"></validation-messages>\\n                    </div>\\n\\n                    <div class=\\\"m-checkbox-list\\\">\\n                        <label class=\\\"m-checkbox\\\">\\n                            <input id=\\\"CreateTenant_SetRandomPassword\\\" type=\\\"checkbox\\\" name=\\\"SetRandomPassword\\\" [(ngModel)]=\\\"setRandomPassword\\\">\\n                            {{l(\\\"SetRandomPassword\\\")}}\\n                            <span></span>\\n                        </label>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\n                        <label for=\\\"AdminPassword\\\">{{l(\\\"AdminPassword\\\")}}</label>\\n                        <input id=\\\"AdminPassword\\\" type=\\\"password\\\" name=\\\"adminPassword\\\" class=\\\"form-control\\\" id=\\\"adminPassword\\\"\\n                               [(ngModel)]=\\\"tenant.adminPassword\\\" [ngClass]=\\\"{'edited':tenant.adminPassword}\\\" [required]=\\\"!setRandomPassword\\\"\\n                               #adminPassword=\\\"ngModel\\\" validateEqual=\\\"adminPasswordRepeat\\\" reverse=\\\"true\\\" maxlength=\\\"32\\\" [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\n                               [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\">\\n                    </div>\\n\\n                    <div [hidden]=\\\"tenantCreateForm.form.valid || tenantCreateForm.form.pristine\\\">\\n                        <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"tenantCreateForm.controls['adminPassword'] && tenantCreateForm.controls['adminPassword'].errors\\\">\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireDigit\\\">{{l(\\\"PasswordComplexity_RequireDigit_Hint\\\")}}</li>\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireLowercase\\\">{{l(\\\"PasswordComplexity_RequireLowercase_Hint\\\")}}</li>\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireUppercase\\\">{{l(\\\"PasswordComplexity_RequireUppercase_Hint\\\")}}</li>\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requireNonAlphanumeric\\\">{{l(\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\")}}</li>\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPassword'].errors.requiredLength\\\">{{l(\\\"PasswordComplexity_RequiredLength_Hint\\\", passwordComplexitySetting.requiredLength)}}</li>\\n                        </ul>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\n                        <label for=\\\"AdminPasswordRepeat\\\">{{l(\\\"AdminPasswordRepeat\\\")}}</label>\\n                        <input id=\\\"AdminPasswordRepeat\\\" type=\\\"password\\\" name=\\\"adminPasswordRepeat\\\" class=\\\"form-control\\\"\\n                               [(ngModel)]=\\\"tenant.adminPasswordRepeat\\\" [ngClass]=\\\"{'edited':tenant.adminPasswordRepeat}\\\" [required]=\\\"!setRandomPassword\\\"\\n                               #adminPasswordRepeat=\\\"ngModel\\\" [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\n                               [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\n                               validateEqual=\\\"adminPassword\\\"\\n                               maxlength=\\\"32\\\">\\n                    </div>\\n\\n                    <div [hidden]=\\\"tenantCreateForm.form.valid || tenantCreateForm.form.pristine\\\">\\n                        <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"tenantCreateForm.controls['adminPasswordRepeat'] && tenantCreateForm.controls['adminPasswordRepeat'].errors\\\">\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireDigit\\\">{{l(\\\"PasswordComplexity_RequireDigit_Hint\\\")}}</li>\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireLowercase\\\">{{l(\\\"PasswordComplexity_RequireLowercase_Hint\\\")}}</li>\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireUppercase\\\">{{l(\\\"PasswordComplexity_RequireUppercase_Hint\\\")}}</li>\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requireNonAlphanumeric\\\">{{l(\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\")}}</li>\\n                            <li [hidden]=\\\"!tenantCreateForm.controls['adminPasswordRepeat'].errors.requiredLength\\\">{{l(\\\"PasswordComplexity_RequiredLength_Hint\\\", passwordComplexitySetting.requiredLength)}}</li>\\n                            <li [hidden]=\\\"tenantCreateForm.controls['adminPasswordRepeat'].valid\\\">{{l(\\\"PasswordsDontMatch\\\")}}</li>\\n                        </ul>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"edition\\\">{{l(\\\"Edition\\\")}}</label>\\n                        <select id=\\\"edition\\\" name=\\\"edition\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.editionId\\\" (change)=\\\"onEditionChange($event)\\\">\\n                            <option *ngFor=\\\"let edition of editions\\\" [value]=\\\"edition.value\\\">{{edition.displayText}}</option>\\n                        </select>\\n                    </div>\\n\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"m-checkbox-list\\\">\\n                        <label for=\\\"CreateTenant_IsUnlimited\\\" class=\\\"m-checkbox\\\">\\n                            <input id=\\\"CreateTenant_IsUnlimited\\\" type=\\\"checkbox\\\" name=\\\"IsUnlimited\\\" [(ngModel)]=\\\"isUnlimited\\\" />\\n                            {{l(\\\"UnlimitedTimeSubscription\\\")}}\\n                            <span></span>\\n                        </label>\\n                    </div>\\n\\n                    <div [hidden]=\\\"isUnlimited || !isSubscriptionFieldsVisible\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': !subscriptionEndDateIsValid()}\\\">\\n                        <label for=\\\"SubscriptionEndDate\\\">{{l(\\\"SubscriptionEndDate\\\")}}</label>\\n                        <input id=\\\"SubscriptionEndDate\\\" type=\\\"text\\\" #SubscriptionEndDateUtc name=\\\"SubscriptionEndDateUtc\\\" class=\\\"form-control\\\">\\n                    </div>\\n\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"m-checkbox-list\\\">\\n                        <label for=\\\"CreateTenant_IsInTrialPeriod\\\" class=\\\"m-checkbox\\\">\\n                            <input id=\\\"CreateTenant_IsInTrialPeriod\\\" type=\\\"checkbox\\\" name=\\\"IsInTrialPeriod\\\" [disabled]=\\\"isSelectedEditionFree\\\" [(ngModel)]=\\\"tenant.isInTrialPeriod\\\">\\n                            {{l(\\\"IsInTrialPeriod\\\")}}\\n                            <span></span>\\n                        </label>\\n                    </div>\\n\\n                    <div class=\\\"m-checkbox-list\\\">\\n                        <label for=\\\"CreateTenant_ShouldChangePasswordOnNextLogin\\\" class=\\\"m-checkbox\\\">\\n                            <input id=\\\"CreateTenant_ShouldChangePasswordOnNextLogin\\\" type=\\\"checkbox\\\" name=\\\"ShouldChangePasswordOnNextLogin\\\" [(ngModel)]=\\\"tenant.shouldChangePasswordOnNextLogin\\\">\\n                            {{l(\\\"ShouldChangePasswordOnNextLogin\\\")}}\\n                            <span></span>\\n                        </label>\\n                        <label for=\\\"CreateTenant_SendActivationEmail\\\" class=\\\"m-checkbox\\\">\\n                            <input id=\\\"CreateTenant_SendActivationEmail\\\" type=\\\"checkbox\\\" name=\\\"SendActivationEmail\\\" [(ngModel)]=\\\"tenant.sendActivationEmail\\\">\\n                            {{l(\\\"SendActivationEmail\\\")}}\\n                            <span></span>\\n                        </label>\\n                        <label for=\\\"CreateTenant_IsActive\\\" class=\\\"m-checkbox\\\">\\n                            <input id=\\\"CreateTenant_IsActive\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"tenant.isActive\\\">\\n                            {{l(\\\"Active\\\")}}\\n                            <span></span>\\n                        </label>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!tenantCreateForm.form.valid || saving || !subscriptionEndDateIsValid()\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { \n    CommonLookupServiceProxy, CreateTenantInput, \n    PasswordComplexitySetting, ProfileServiceProxy, \n    TenantServiceProxy, SubscribableEditionComboboxItemDto } from \n'@shared/service-proxies/service-proxies';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { ModalDirective } from 'ngx-bootstrap';\n\n@Component({\n    selector: 'createTenantModal',\n    templateUrl: './create-tenant-modal.component.html'\n})\nexport class CreateTenantModalComponent extends AppComponentBase {\n\n    @ViewChild('tenancyNameInput') tenancyNameInput: ElementRef;\n    @ViewChild('createModal') modal: ModalDirective;\n    @ViewChild('SubscriptionEndDateUtc') subscriptionEndDateUtc: ElementRef;\n\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\n\n    active = false;\n    saving = false;\n    setRandomPassword = true;\n    useHostDb = true;\n    editions: SubscribableEditionComboboxItemDto[] = [];\n    tenant: CreateTenantInput;\n    passwordComplexitySetting: PasswordComplexitySetting = new PasswordComplexitySetting();\n    isUnlimited = false;\n    isSubscriptionFieldsVisible = false;\n    isSelectedEditionFree = false;\n\n    constructor(\n        injector: Injector,\n        private _tenantService: TenantServiceProxy,\n        private _commonLookupService: CommonLookupServiceProxy,\n        private _profileService: ProfileServiceProxy\n    ) {\n        super(injector);\n    }\n\n    show() {\n        this.active = true;\n        this.init();\n\n        this._profileService.getPasswordComplexitySetting().subscribe(result => {\n            this.passwordComplexitySetting = result.setting;\n            this.modal.show();\n        });\n    }\n\n    onShown(): void {\n        $(this.tenancyNameInput.nativeElement).focus();\n        $(this.subscriptionEndDateUtc.nativeElement).datetimepicker({\n            locale: abp.localization.currentLanguage.name,\n            format: 'L'\n        });\n    }\n\n    init(): void {\n        this.tenant = new CreateTenantInput();\n        this.tenant.isActive = true;\n        this.tenant.shouldChangePasswordOnNextLogin = true;\n        this.tenant.sendActivationEmail = true;\n        this.tenant.editionId = 0;\n        this.tenant.isInTrialPeriod = false;\n\n        this._commonLookupService.getEditionsForCombobox(false)\n            .subscribe((result) => {\n                this.editions = result.items;\n\n                var notAssignedItem = new SubscribableEditionComboboxItemDto();\n                notAssignedItem.value = \"0\";\n                notAssignedItem.displayText = this.l('NotAssigned');\n\n                this.editions.unshift(notAssignedItem);\n\n                this._commonLookupService.getDefaultEditionName().subscribe((getDefaultEditionResult) => {\n                    let defaultEdition = _.filter(this.editions, { 'displayText': getDefaultEditionResult.name });\n                    if (defaultEdition && defaultEdition[0]) {\n                        this.tenant.editionId = parseInt(defaultEdition[0].value);\n                        this.toggleSubscriptionFields();\n                    }\n                });\n            });\n    }\n\n    getEditionValue(item): number {\n        return parseInt(item.value);\n    }\n\n    selectedEditionIsFree(): boolean {\n        let selectedEditions = _.filter(this.editions, { 'value': this.tenant.editionId })\n        .map(u => Object.assign(new SubscribableEditionComboboxItemDto(),u));\n        \n        if (selectedEditions.length !== 1) {\n            this.isSelectedEditionFree = true;\n        }\n\n        var selectedEdition = selectedEditions[0];\n        this.isSelectedEditionFree = selectedEdition.isFree;\n        return this.isSelectedEditionFree;\n    }\n\n    subscriptionEndDateIsValid(): boolean {\n        if (this.tenant.editionId <= 0) {\n            return true;\n        }\n\n        if (this.isUnlimited) {\n            return true;\n        }\n\n        if (!this.subscriptionEndDateUtc) {\n            return false;\n        }\n\n        let subscriptionEndDateUtc = $(this.subscriptionEndDateUtc.nativeElement).val();\n        return subscriptionEndDateUtc !== undefined && subscriptionEndDateUtc !== '';\n    }\n\n    save(): void {\n        this.saving = true;\n\n        if (this.setRandomPassword) {\n            this.tenant.adminPassword = null;\n        }\n\n        if (this.tenant.editionId === 0) {\n            this.tenant.editionId = null;\n        }\n\n        //take selected date as UTC\n        if (!this.isUnlimited && this.tenant.editionId > 0) {\n            this.tenant.subscriptionEndDateUtc = moment($(this.subscriptionEndDateUtc.nativeElement).data('DateTimePicker').date().format('YYYY-MM-DDTHH:mm:ss') + 'Z');\n        } else {\n            this.tenant.subscriptionEndDateUtc = null;\n        }\n\n        this._tenantService.createTenant(this.tenant)\n            .finally(() => this.saving = false)\n            .subscribe(() => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n                this.modalSave.emit(null);\n            });\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n\n    onEditionChange(): void {\n        this.tenant.isInTrialPeriod = this.tenant.editionId > 0 && !this.selectedEditionIsFree();\n        this.toggleSubscriptionFields();\n    }\n\n    toggleSubscriptionFields() {\n        if (this.tenant.editionId > 0) {\n            this.isSubscriptionFieldsVisible = true;\n        } else {\n            this.isSubscriptionFieldsVisible = false;\n        }\n    }\n}\n","module.exports = \"<div bsModal #editModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n\\n        <div class=\\\"modal-content\\\">\\n\\n            <form #tenantEditForm=\\\"ngForm\\\" role=\\\"form\\\" novalidate class=\\\"form-validation\\\" (submit)=\\\"save()\\\" *ngIf=\\\"tenant && active\\\">\\n\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\">\\n                        <span>{{l(\\\"EditTenant\\\")}}: {{tenant.tenancyName}}</span>\\n                    </h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n\\n                <div class=\\\"modal-body\\\">\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"Name\\\">{{l(\\\"Name\\\")}} *</label>\\n                        <input id=\\\"Name\\\" #nameInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'edited':tenant.name}\\\" [(ngModel)]=\\\"tenant.name\\\" required maxlength=\\\"128\\\">\\n                        <validation-messages [formCtrl]=\\\"nameInput\\\"></validation-messages>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"currentConnectionString\\\">\\n                        <label for=\\\"DatabaseConnectionString\\\">{{l(\\\"DatabaseConnectionString\\\")}} *</label>\\n                        <input id=\\\"DatabaseConnectionString\\\" #connectionStringInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"ConnectionString\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.connectionString\\\" required maxlength=\\\"1024\\\">\\n                        <validation-messages [formCtrl]=\\\"connectionStringInput\\\"></validation-messages>\\n                    </div>\\n\\n                    <div *ngIf=\\\"currentConnectionString\\\">\\n                        <span class=\\\"help-block text-warning\\\">{{l(\\\"TenantDatabaseConnectionStringChangeWarningMessage\\\")}}</span>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"edition\\\">{{l(\\\"Edition\\\")}}</label>\\n                        <select id=\\\"edition\\\" name=\\\"edition\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tenant.editionId\\\" (change)=\\\"onEditionChange($event)\\\">\\n                            <option *ngFor=\\\"let edition of editions\\\" [value]=\\\"edition.value\\\">{{edition.displayText}}</option>\\n                        </select>\\n                    </div>\\n\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"m-checkbox-list\\\">\\n                        <label class=\\\"m-checkbox\\\">\\n                            <input id=\\\"CreateTenant_IsUnlimited\\\" type=\\\"checkbox\\\" name=\\\"IsUnlimited\\\" [(ngModel)]=\\\"isUnlimited\\\" (ngModelChange)=\\\"onUnlimitedChange()\\\"/>\\n                            {{l(\\\"UnlimitedTimeSubscription\\\")}}\\n                            <span></span>\\n                        </label>\\n                    </div>\\n\\n                    <div [hidden]=\\\"isUnlimited || !isSubscriptionFieldsVisible\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': !subscriptionEndDateUtcIsValid }\\\">\\n                        <label for=\\\"SubscriptionEndDateUtc\\\">{{l(\\\"SubscriptionEndDateUtc\\\")}}</label>\\n                        <input id=\\\"SubscriptionEndDateUtc\\\" type=\\\"datetime\\\" #SubscriptionEndDateUtc name=\\\"SubscriptionEndDateUtc\\\" class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{'edited':tenant.subscriptionEndDateUtc}\\\"\\n                               [value]=\\\"formatSubscriptionEndDate(tenant.subscriptionEndDateUtc)\\\"\\n                               [required]=\\\"!isUnlimited\\\">\\n                    </div>\\n\\n                    <div [hidden]=\\\"!isSubscriptionFieldsVisible\\\" class=\\\"m-checkbox-list\\\">\\n                        <label class=\\\"m-checkbox\\\">\\n                            <input id=\\\"CreateTenant_IsInTrialPeriod\\\" type=\\\"checkbox\\\" name=\\\"IsInTrialPeriod\\\" [disabled]=\\\"selectedEditionIsFree()\\\" [(ngModel)]=\\\"tenant.isInTrialPeriod\\\">\\n                            {{l(\\\"IsInTrialPeriod\\\")}}\\n                            <span></span>\\n                        </label>\\n                    </div>\\n\\n                    <div class=\\\"m-checkbox-list\\\">\\n                        <label class=\\\"m-checkbox\\\">\\n                            <input id=\\\"EditTenant_IsActive\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"tenant.isActive\\\">\\n                            {{l(\\\"Active\\\")}}\\n                            <span></span>\\n                        </label>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!tenantEditForm.form.valid || saving || !subscriptionEndDateUtcIsValid\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { CommonLookupServiceProxy, SubscribableEditionComboboxItemDto, TenantEditDto, TenantServiceProxy } from '@shared/service-proxies/service-proxies';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { ModalDirective } from 'ngx-bootstrap';\n\n@Component({\n    selector: 'editTenantModal',\n    templateUrl: './edit-tenant-modal.component.html'\n})\nexport class EditTenantModalComponent extends AppComponentBase {\n\n    @ViewChild('nameInput') nameInput: ElementRef;\n    @ViewChild('editModal') modal: ModalDirective;\n    @ViewChild('SubscriptionEndDateUtc') subscriptionEndDateUtc: ElementRef;\n\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\n\n    active = false;\n    saving = false;\n    isUnlimited = false;\n    subscriptionEndDateUtcIsValid = false;\n\n    tenant: TenantEditDto = undefined;\n    currentConnectionString: string;\n    editions: SubscribableEditionComboboxItemDto[] = [];\n    isSubscriptionFieldsVisible = false;\n\n    constructor(\n        injector: Injector,\n        private _tenantService: TenantServiceProxy,\n        private _commonLookupService: CommonLookupServiceProxy\n    ) {\n        super(injector);\n    }\n\n    show(tenantId: number): void {\n        this.active = true;\n\n        this._commonLookupService.getEditionsForCombobox(false).subscribe(editionsResult => {\n            this.editions = editionsResult.items;\n            let notSelectedEdition = new SubscribableEditionComboboxItemDto();\n            notSelectedEdition.displayText = this.l('NotAssigned');\n            notSelectedEdition.value = '0';\n            this.editions.unshift(notSelectedEdition);\n\n            this._tenantService.getTenantForEdit(tenantId).subscribe((tenantResult) => {\n                this.tenant = tenantResult;\n                this.currentConnectionString = tenantResult.connectionString;\n                this.tenant.editionId = this.tenant.editionId || 0;\n                this.isUnlimited = !this.tenant.subscriptionEndDateUtc;\n                this.subscriptionEndDateUtcIsValid = this.isUnlimited || this.tenant.subscriptionEndDateUtc !== undefined;\n                this.modal.show();\n                this.toggleSubscriptionFields();\n            });\n        });\n    }\n\n    onShown(): void {\n        $(this.nameInput.nativeElement).focus();\n        $(this.subscriptionEndDateUtc.nativeElement).datetimepicker({\n            locale: abp.localization.currentLanguage.name,\n            format: 'L',\n            defaultDate: this.tenant.subscriptionEndDateUtc,\n        }).on('dp.change', (e) => {\n            this.subscriptionEndDateUtcIsValid = e.date !== false;\n        });\n    }\n\n    formatSubscriptionEndDate(date: any): string {\n        if (this.isUnlimited) {\n            return '';\n        }\n\n        if (!this.tenant.editionId) {\n            return '';\n        }\n\n        if (!date) {\n            return '';\n        }\n\n        return moment(date).format('L');\n    }\n\n    selectedEditionIsFree(): boolean {\n        if (!this.tenant.editionId) {\n            return true;\n        }\n\n        let selectedEditions = _.filter(this.editions, { value: this.tenant.editionId + '' });\n        if (selectedEditions.length !== 1) {\n            return true;\n        }\n\n        let selectedEdition = selectedEditions[0];\n        return selectedEdition.isFree;\n    }\n\n    save(): void {\n        this.saving = true;\n        if (this.tenant.editionId === 0) {\n            this.tenant.editionId = null;\n        }\n\n        //take selected date as UTC\n        if (!this.isUnlimited && this.tenant.editionId) {\n            let date = $(this.subscriptionEndDateUtc.nativeElement).data('DateTimePicker').date();\n            if (!date) {\n                date = this.tenant.subscriptionEndDateUtc;\n            }\n\n            this.tenant.subscriptionEndDateUtc = moment(date.format('YYYY-MM-DDTHH:mm:ss') + 'Z');\n        } else {\n            this.tenant.subscriptionEndDateUtc = null;\n        }\n\n        this._tenantService.updateTenant(this.tenant)\n            .finally(() => this.saving = false)\n            .subscribe(() => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n                this.modalSave.emit(null);\n            });\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n\n    onEditionChange(): void {\n        if (this.selectedEditionIsFree()) {\n            this.tenant.isInTrialPeriod = false;\n        }\n\n        this.toggleSubscriptionFields();\n    }\n\n    onUnlimitedChange(): void {\n        if (this.isUnlimited) {\n            $(this.subscriptionEndDateUtc.nativeElement).data('DateTimePicker').clear();\n            this.tenant.subscriptionEndDateUtc = null;\n            this.subscriptionEndDateUtcIsValid = true;\n        } else {\n            let date = $(this.subscriptionEndDateUtc.nativeElement).data('DateTimePicker').date();\n            if (!date) {\n                this.subscriptionEndDateUtcIsValid = false;\n            }\n        }\n    }\n\n    toggleSubscriptionFields() {\n        if (this.tenant.editionId > 0) {\n            this.isSubscriptionFieldsVisible = true;\n        } else {\n            this.isSubscriptionFieldsVisible = false;\n        }\n    }\n}\n","module.exports = \"<div bsModal #tenantFeaturesModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"tenantFeaturesModal\\\"\\n     aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n\\n        <div class=\\\"modal-content\\\">\\n\\n            <form #editTenantFeaturesForm=\\\"ngForm\\\" name=\\\"editTenantFeaturesForm\\\" role=\\\"form\\\" novalidate class=\\\"form-validation\\\" (submit)=\\\"save()\\\" *ngIf=\\\"active\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">\\n                        <span>{{l(\\\"Features\\\")}} - {{tenantName}}</span>\\n                    </h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <feature-tree #featureTree></feature-tree>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving\\\" [buttonBusy]=\\\"resettingFeatures\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-default pull-left\\\" (click)=\\\"resetFeatures()\\\" [tooltipHtml]=\\\"l('ResetFeaturesTooltip')\\\" placement=\\\"top\\\"><span>{{l(\\\"ResetSpecialFeatures\\\")}}</span></button>\\n                    <button type=\\\"button\\\" [disabled]=\\\"saving || resettingFeatures\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" [disabled]=\\\"resettingFeatures\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { EntityDto, TenantServiceProxy, UpdateTenantFeaturesInput } from '@shared/service-proxies/service-proxies';\nimport { ModalDirective } from 'ngx-bootstrap';\nimport { FeatureTreeComponent } from '../shared/feature-tree.component';\n\n@Component({\n    selector: 'tenantFeaturesModal',\n    templateUrl: './tenant-features-modal.component.html'\n})\nexport class TenantFeaturesModalComponent extends AppComponentBase {\n\n    @ViewChild('tenantFeaturesModal') modal: ModalDirective;\n    @ViewChild('featureTree') featureTree: FeatureTreeComponent;\n\n    active = false;\n    saving = false;\n\n    resettingFeatures = false;\n    tenantId: number;\n    tenantName: string;\n    featureEditData: any = null;\n\n    constructor(\n        injector: Injector,\n        private _tenantService: TenantServiceProxy\n    ) {\n        super(injector);\n    }\n\n    show(tenantId: number, tenantName: string): void {\n        this.tenantId = tenantId;\n        this.tenantName = tenantName;\n        this.active = true;\n        this.loadFeatures();\n        this.modal.show();\n    }\n\n    loadFeatures(): void {\n        const self = this;\n        self._tenantService.getTenantFeaturesForEdit(this.tenantId).subscribe((result) => {\n            self.featureTree.editData = result;\n        });\n    }\n\n    save(): void {\n        if (!this.featureTree.areAllValuesValid()) {\n            this.message.warn(this.l('InvalidFeaturesWarning'));\n            return;\n        }\n\n\n        const input = new UpdateTenantFeaturesInput();\n        input.id = this.tenantId;\n        input.featureValues = this.featureTree.getGrantedFeatures();\n\n        this.saving = true;\n        this._tenantService.updateTenantFeatures(input)\n            .finally(() => this.saving = false)\n            .subscribe(() => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n            });\n    }\n\n    resetFeatures(): void {\n        const input = new EntityDto();\n        input.id = this.tenantId;\n\n        this.resettingFeatures = true;\n        this._tenantService.resetTenantSpecificFeatures(input)\n            .finally(() => this.resettingFeatures = false)\n            .subscribe(() => {\n                this.notify.info(this.l('ResetSuccessfully'));\n                this.loadFeatures();\n            });\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto col-xs-6\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"Tenants\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"TenantsHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n            <div class=\\\"col-xs-6 text-right\\\">\\n                <button ng-if=\\\"vm.permissions.create\\\" class=\\\"btn btn-primary blue\\\" (click)=\\\"createTenant()\\\"><i class=\\\"fa fa-plus\\\"></i>{{l(\\\"CreateNewTenant\\\")}}</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <div class=\\\"m-form m-form--label-align-right\\\">\\n                    <form (submit)=\\\"getTenants()\\\" autocomplete=\\\"off\\\">\\n                        <div class=\\\"form-body\\\">\\n\\n                            <div class=\\\"row m--margin-bottom-10\\\">\\n                                <div class=\\\"col-xl-6\\\">\\n                                    <label for=\\\"TenantNameOrTenancyCode\\\">{{l('TenantNameOrTenancyCode')}}</label>\\n                                    <div class=\\\"input-group\\\">\\n                                        <input id=\\\"TenantNameOrTenancyCode\\\" [(ngModel)]=\\\"filters.filterText\\\" name=\\\"filterText\\\" class=\\\"form-control\\\" placeholder=\\\"{{l('SearchWithThreeDot')}}\\\" type=\\\"text\\\">\\n                                        <span class=\\\"input-group-btn\\\">\\n                                            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\n                                        </span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xl-6\\\">\\n                                    <label for=\\\"EditionDropdown\\\">{{l('Edition')}}</label>\\n                                    <edition-combo [(selectedEdition)]=\\\"filters.selectedEditionId\\\"></edition-combo>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row m--margin-bottom-10\\\">\\n                                <div class=\\\"col-xl-6\\\">\\n                                    <div class=\\\"m-checkbox-list\\\">\\n                                        <label class=\\\"m-checkbox\\\">\\n                                            <input type=\\\"checkbox\\\"\\n                                                   [(ngModel)]=\\\"filters.subscriptionEndDateRangeActive\\\"\\n                                                   id=\\\"TenantsTable_SubscriptionEndDateRangeActive\\\"\\n                                                   name=\\\"SubscriptionEndDateRangeActive\\\"\\n                                                   value=\\\"true\\\">\\n                                            {{l('SubscriptionEndDate')}}\\n                                            <span></span>\\n                                        </label>\\n                                    </div>\\n                                    <date-range-picker name=\\\"SubscriptionEndDateRange\\\"\\n                                                       [isDisabled]=\\\"!filters.subscriptionEndDateRangeActive\\\"\\n                                                       [(startDate)]=\\\"filters.subscriptionEndDateStart\\\"\\n                                                       [(endDate)]=\\\"filters.subscriptionEndDateEnd\\\"\\n                                                       [allowFutureDate]=\\\"true\\\">\\n                                    </date-range-picker>\\n                                </div>\\n                                <div class=\\\"col-xl-6\\\">\\n                                    <div class=\\\"m-checkbox-list\\\">\\n                                        <label class=\\\"m-checkbox\\\">\\n                                            <input type=\\\"checkbox\\\"\\n                                                   [(ngModel)]=\\\"filters.creationDateRangeActive\\\"\\n                                                   id=\\\"TenantsTable_CreationDateRangeActive\\\"\\n                                                   name=\\\"CreationDateRangeActive\\\"\\n                                                   value=\\\"true\\\">\\n                                            {{l('CreationTime')}}\\n                                            <span></span>\\n                                        </label>\\n                                    </div>\\n                                    <date-range-picker name=\\\"CreationDateRange\\\"\\n                                                       [isDisabled]=\\\"!filters.creationDateRangeActive\\\"\\n                                                       [(startDate)]=\\\"filters.creationDateStart\\\"\\n                                                       [(endDate)]=\\\"filters.creationDateEnd\\\"\\n                                                       [allowFutureDate]=\\\"false\\\">\\n                                    </date-range-picker>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row m--margin-bottom-10\\\">\\n                                <div class=\\\"col-xl-12 text-right\\\">\\n                                    <button name=\\\"RefreshButton\\\" class=\\\"btn btn-metal\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l('Refresh')}}</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n                <div class=\\\"row align-items-center\\\">\\n                    <!--<Primeng-TurboTable-Start>-->\\n                    <div class=\\\"primeng-datatable-container\\\" [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                        <p-table #dataTable\\n                                 (onLazyLoad)=\\\"getTenants($event)\\\"\\n                                 [value]=\\\"primengTableHelper.records\\\"\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                 [paginator]=\\\"false\\\"\\n                                 [lazy]=\\\"true\\\"\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th style=\\\"width:130px\\\">{{l('Actions')}}</th>\\n                                    <th pSortableColumn=\\\"tenancyName\\\">\\n                                        {{l('TenancyCodeName')}}\\n                                        <p-sortIcon field=\\\"tenancyName\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th pSortableColumn=\\\"name\\\">\\n                                        {{l('Name')}}\\n                                        <p-sortIcon field=\\\"name\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th>{{l('Edition')}}</th>\\n                                    <th pSortableColumn=\\\"subscriptionEndDateUtc\\\">\\n                                        {{l('SubscriptionEndDateUtc')}}\\n                                        <p-sortIcon field=\\\"subscriptionEndDateUtc\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th pSortableColumn=\\\"isActive\\\">\\n                                        {{l('Active')}}\\n                                        <p-sortIcon field=\\\"isActive\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th pSortableColumn=\\\"creationTime\\\">\\n                                        {{l('CreationTime')}}\\n                                        <p-sortIcon field=\\\"creationTime\\\"></p-sortIcon>\\n                                    </th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                <tr>\\n                                    <td style=\\\"width: 130px\\\">\\n                                        <div class=\\\"btn-group dropdown\\\">\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\"\\n                                                    data-toggle=\\\"dropdown\\\"\\n                                                    aria-haspopup=\\\"true\\\"\\n                                                    aria-expanded=\\\"false\\\">\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\n                                            </button>\\n                                            <ul class=\\\"dropdown-menu\\\">\\n                                                <li [class.disabled]=\\\"!record.isActive\\\">\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Tenants.Impersonation')\\\"\\n                                                       (click)=\\\"record.isActive && showUserImpersonateLookUpModal(record)\\\">{{l('LoginAsThisTenant')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Tenants.Edit')\\\"\\n                                                       (click)=\\\"editTenantModal.show(record.id)\\\">{{l('Edit')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Tenants.ChangeFeatures')\\\"\\n                                                       (click)=\\\"tenantFeaturesModal.show(record.id, record.name)\\\">{{l('Features')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Tenants.Delete')\\\"\\n                                                       (click)=\\\"deleteTenant(record)\\\">{{l('Delete')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a (click)=\\\"unlockUser(record)\\\">{{l('Unlock')}}</a>\\n                                                </li>\\n                                            </ul>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <i *ngIf=\\\"record.connectionString\\\" class=\\\"fa fa-database\\\" title=\\\"{{l('HasOwnDatabase')}}\\\"></i>\\n                                        {{record.tenancyName}}\\n                                    </td>\\n                                    <td>{{record.name}}</td>\\n                                    <td>{{record.editionDisplayName}}</td>\\n                                    <td>\\n                                        {{ record.subscriptionEndDateUtc ? (record.subscriptionEndDateUtc | momentFormat:'L') : '-'}}\\n                                    </td>\\n                                    <td>\\n                                        <span *ngIf=\\\"record.isActive\\\" class=\\\"label label-success\\\">{{l('Yes')}}</span>\\n                                        <span *ngIf=\\\"!record.isActive\\\" class=\\\"label label-default\\\">{{l('No')}}</span>\\n                                    </td>\\n                                    <td>\\n                                        {{record.creationTime | momentFormat:'L'}}\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                        </p-table>\\n                        <div class=\\\"primeng-paging-container\\\">\\n                            <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                         #paginator\\n                                         (onPageChange)=\\\"getTenants($event)\\\"\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\n                            </p-paginator>\\n                            <span class=\\\"total-records-count\\\">\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\n                            </span>\\n                        </div>\\n                    </div>\\n                    <!--<Primeng-TurboTable-End>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <createTenantModal #createTenantModal (modalSave)=\\\"getTenants()\\\"></createTenantModal>\\n    <editTenantModal #editTenantModal (modalSave)=\\\"getTenants()\\\"></editTenantModal>\\n    <tenantFeaturesModal #tenantFeaturesModal></tenantFeaturesModal>\\n    <commonLookupModal #impersonateUserLookupModal (itemSelected)=\\\"impersonateUser($event)\\\"></commonLookupModal>\\n</div>\\n\"","import { Component, Injector, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ImpersonationService } from '@app/admin/users/impersonation.service';\nimport { CommonLookupModalComponent } from '@app/shared/common/lookup/common-lookup-modal.component';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { CommonLookupServiceProxy, EntityDtoOfInt64, FindUsersInput, NameValueDto, TenantListDto, TenantServiceProxy } from '@shared/service-proxies/service-proxies';\nimport * as moment from 'moment';\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\nimport { Paginator } from 'primeng/components/paginator/paginator';\nimport { Table } from 'primeng/components/table/table';\nimport { CreateTenantModalComponent } from './create-tenant-modal.component';\nimport { EditTenantModalComponent } from './edit-tenant-modal.component';\nimport { TenantFeaturesModalComponent } from './tenant-features-modal.component';\n\n@Component({\n    templateUrl: './tenants.component.html',\n    encapsulation: ViewEncapsulation.None,\n    animations: [appModuleAnimation()]\n})\nexport class TenantsComponent extends AppComponentBase implements OnInit {\n\n    @ViewChild('impersonateUserLookupModal') impersonateUserLookupModal: CommonLookupModalComponent;\n    @ViewChild('createTenantModal') createTenantModal: CreateTenantModalComponent;\n    @ViewChild('editTenantModal') editTenantModal: EditTenantModalComponent;\n    @ViewChild('tenantFeaturesModal') tenantFeaturesModal: TenantFeaturesModalComponent;\n    @ViewChild('dataTable') dataTable: Table;\n    @ViewChild('paginator') paginator: Paginator;\n\n    private _$tenantsTable: JQuery;\n    filters: {\n        filterText: string;\n        creationDateRangeActive: boolean;\n        subscriptionEndDateRangeActive: boolean;\n        subscriptionEndDateStart: moment.Moment;\n        subscriptionEndDateEnd: moment.Moment;\n        creationDateStart: moment.Moment;\n        creationDateEnd: moment.Moment;\n        selectedEditionId: number;\n    } = <any>{};\n\n    constructor(\n        injector: Injector,\n        private _tenantService: TenantServiceProxy,\n        private _activatedRoute: ActivatedRoute,\n        private _commonLookupService: CommonLookupServiceProxy,\n        private _impersonationService: ImpersonationService\n    ) {\n        super(injector);\n        this.setFiltersFromRoute();\n    }\n\n    setFiltersFromRoute(): void {\n        if (this._activatedRoute.snapshot.queryParams['subscriptionEndDateStart'] != null) {\n            this.filters.subscriptionEndDateRangeActive = true;\n            this.filters.subscriptionEndDateStart = moment(this._activatedRoute.snapshot.queryParams['subscriptionEndDateStart']);\n        } else {\n            this.filters.subscriptionEndDateStart = moment().startOf('day');\n        }\n\n        if (this._activatedRoute.snapshot.queryParams['subscriptionEndDateEnd'] != null) {\n            this.filters.subscriptionEndDateRangeActive = true;\n            this.filters.subscriptionEndDateEnd = moment(this._activatedRoute.snapshot.queryParams['subscriptionEndDateEnd']);\n        } else {\n            this.filters.subscriptionEndDateEnd = moment().add(30, 'days').endOf('day');\n        }\n\n        if (this._activatedRoute.snapshot.queryParams['creationDateStart'] != null) {\n            this.filters.creationDateRangeActive = true;\n            this.filters.creationDateStart = moment(this._activatedRoute.snapshot.queryParams['creationDateStart']);\n        } else {\n            this.filters.creationDateStart = moment().add(-7, 'days').startOf('day');\n        }\n\n        if (this._activatedRoute.snapshot.queryParams['creationDateEnd'] != null) {\n            this.filters.creationDateRangeActive = true;\n            this.filters.creationDateEnd = moment(this._activatedRoute.snapshot.queryParams['creationDateEnd']);\n        } else {\n            this.filters.creationDateEnd = moment().endOf('day');\n        }\n    }\n\n    ngOnInit(): void {\n        this.filters.filterText = this._activatedRoute.snapshot.queryParams['filterText'] || '';\n\n        this.impersonateUserLookupModal.configure({\n            title: this.l('SelectAUser'),\n            dataSource: (skipCount: number, maxResultCount: number, filter: string, tenantId?: number) => {\n                let input = new FindUsersInput();\n                input.filter = filter;\n                input.maxResultCount = maxResultCount;\n                input.skipCount = skipCount;\n                input.tenantId = tenantId;\n                return this._commonLookupService.findUsers(input);\n            }\n        });\n    }\n\n    getTenants(event?: LazyLoadEvent) {\n        if (this.primengTableHelper.shouldResetPaging(event)) {\n            this.paginator.changePage(0);\n\n            return;\n        }\n\n        this.primengTableHelper.showLoadingIndicator();\n\n        this._tenantService.getTenants(\n            this.filters.filterText,\n            this.filters.subscriptionEndDateRangeActive ? this.filters.subscriptionEndDateStart : undefined,\n            this.filters.subscriptionEndDateRangeActive ? this.filters.subscriptionEndDateEnd : undefined,\n            this.filters.creationDateRangeActive ? this.filters.creationDateStart : undefined,\n            this.filters.creationDateRangeActive ? this.filters.creationDateEnd : undefined,\n            this.filters.selectedEditionId,\n            this.filters.selectedEditionId !== undefined && (this.filters.selectedEditionId + '') !== '-1',\n            this.primengTableHelper.getSorting(this.dataTable),\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\n            this.primengTableHelper.getSkipCount(this.paginator, event)\n        ).subscribe(result => {\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\n            this.primengTableHelper.records = result.items;\n            this.primengTableHelper.hideLoadingIndicator();\n        });\n    }\n\n    showUserImpersonateLookUpModal(record: any): void {\n        this.impersonateUserLookupModal.tenantId = record.id;\n        this.impersonateUserLookupModal.show();\n    }\n\n    unlockUser(record: any): void {\n        this._tenantService.unlockTenantAdmin(new EntityDtoOfInt64({ id: record.id })).subscribe(() => {\n            this.notify.success(this.l('UnlockedTenandAdmin', record.name));\n        });\n    }\n\n    reloadPage(): void {\n        this.paginator.changePage(this.paginator.getPage());\n    }\n\n    createTenant(): void {\n        this.createTenantModal.show();\n    }\n\n    deleteTenant(tenant: TenantListDto): void {\n        this.message.confirm(\n            this.l('TenantDeleteWarningMessage', tenant.tenancyName),\n            isConfirmed => {\n                if (isConfirmed) {\n                    this._tenantService.deleteTenant(tenant.id).subscribe(() => {\n                        this.reloadPage();\n                        this.notify.success(this.l('SuccessfullyDeleted'));\n                    });\n                }\n            }\n        );\n    }\n\n    impersonateUser(item: NameValueDto): void {\n        this._impersonationService\n            .impersonate(\n            parseInt(item.value),\n            this.impersonateUserLookupModal.tenantId\n            );\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader \\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"mr-auto col-sm-12 col-md-6\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"VisualSettings\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"UiCustomizationHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n            <div class=\\\"col-sm-12 col-md-6 text-right\\\">\\n                <button *ngIf=\\\"isGranted('Pages.Administration.UiCustomization')\\\" (click)=\\\"updateDefaultUiManagementSettings()\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-floppy-o\\\"></i> {{l(\\\"SaveAsSystemDefault\\\")}}</button>\\n                <button *ngIf=\\\"!isGranted('Pages.Administration.UiCustomization')\\\" (click)=\\\"updateUiManagementSettings()\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-floppy-o\\\"></i> {{l(\\\"Save\\\")}}</button>\\n                <button *ngIf=\\\"!isGranted('Pages.Administration.UiCustomization')\\\" (click)=\\\"useSystemDefaultSettings()\\\" class=\\\"btn btn-metal blue\\\"> {{l(\\\"UseSystemDefaults\\\")}}</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <tabset class=\\\"tab-container tabbable-line\\\" *ngIf=\\\"settings\\\">\\n                    <tab heading=\\\"{{l('UiCustomization_Layout')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <form id=\\\"LayoutSettingsForm\\\">\\n                            <div class=\\\"m-radio-list m--margin-bottom-20\\\">\\n                                <label>{{l(\\\"UiCustomization_Theme\\\")}}</label>\\n                                <label class=\\\"m-radio\\\" for=\\\"Theme_Default\\\">\\n                                    <input id=\\\"Theme_Default\\\" name=\\\"Theme\\\" [(ngModel)]=\\\"settings.layout.theme\\\" value=\\\"default\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.theme === 'default'\\\">\\n                                    {{l(\\\"Default\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label class=\\\"m-radio m-radio--solid m-radio--state-info\\\" for=\\\"Theme_Blue\\\">\\n                                    <input id=\\\"Theme_Blue\\\" name=\\\"Theme\\\" [(ngModel)]=\\\"settings.layout.theme\\\" value=\\\"blue\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.theme === 'blue'\\\">\\n                                    {{l(\\\"Blue\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label class=\\\"m-radio m-radio--solid m-radio--state-success\\\" for=\\\"Theme_Green\\\">\\n                                    <input id=\\\"Theme_Green\\\" name=\\\"Theme\\\" [(ngModel)]=\\\"settings.layout.theme\\\" value=\\\"green\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.theme === 'green'\\\">\\n                                    {{l(\\\"Green\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label class=\\\"m-radio m-radio--solid m-radio--state-danger\\\" for=\\\"Theme_Pink\\\">\\n                                    <input id=\\\"Theme_Pink\\\" name=\\\"Theme\\\" [(ngModel)]=\\\"settings.layout.theme\\\" value=\\\"pink\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.theme === 'pink'\\\">\\n                                    {{l(\\\"Pink\\\")}}\\n                                    <span></span>\\n                                </label>\\n                                <label class=\\\"m-radio m-radio--solid m-radio--state-warning\\\" for=\\\"Theme_Yellow\\\">\\n                                    <input id=\\\"Theme_Yellow\\\" name=\\\"Theme\\\" [(ngModel)]=\\\"settings.layout.theme\\\" value=\\\"yellow\\\" type=\\\"radio\\\" [checked]=\\\"settings.layout.theme === 'yellow'\\\">\\n                                    {{l(\\\"Yellow\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label for=\\\"LayoutType\\\">{{l(\\\"UiCustomization_LayoutType\\\")}}</label>\\n                                <select id=\\\"LayoutType\\\" name=\\\"LayoutType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.layoutType\\\">\\n                                    <option value=\\\"fluid\\\">{{l(\\\"UiCustomization_Fluid\\\")}}</option>\\n                                    <option value=\\\"boxed\\\">{{l(\\\"UiCustomization_Boxed\\\")}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label for=\\\"ContentSkin\\\">{{l(\\\"UiCustomization_ContentSkin\\\")}}</label>\\n                                <select id=\\\"ContentSkin\\\" name=\\\"ContentSkin\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.layout.contentSkin\\\">\\n                                    <option value=\\\"light2\\\">{{l(\\\"UiCustomization_LightGrey\\\")}}</option>\\n                                    <option value=\\\"light\\\">{{l(\\\"UiCustomization_White\\\")}}</option>\\n                                </select>\\n                            </div>\\n                        </form>\\n                    </tab>\\n                    <tab heading=\\\"{{l('UiCustomization_Header')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <form id=\\\"HeaderSettingsForm\\\">\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label for=\\\"DropdownSkin\\\">{{l(\\\"UiCustomization_DropdownSkin\\\")}}</label>\\n                                <select id=\\\"DropdownSkin\\\" name=\\\"DropdownSkin\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.header.dropdownSkin\\\">\\n                                    <option value=\\\"light\\\">{{l(\\\"UiCustomization_Light\\\")}}</option>\\n                                    <option value=\\\"dark\\\">{{l(\\\"UiCustomization_Dark\\\")}}</option>\\n                                </select>\\n                            </div>\\n                            <h5>{{l('UiCustomization_Desktop')}}</h5>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"DesktopFixedHeader\\\" [(ngModel)]=\\\"settings.header.desktopFixedHeader\\\">\\n                                    {{l(\\\"UiCustomization_DesktopFixedHeader\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label for=\\\"DesktopMinimizeMode\\\">{{l(\\\"UiCustomization_DesktopMinimizeMode\\\")}}</label>\\n                                <select id=\\\"DesktopMinimizeMode\\\" name=\\\"DesktopMinimizeMode\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.header.desktopMinimizeMode\\\">\\n                                    <option value=\\\"\\\">{{l(\\\"UiCustomization_None\\\")}}</option>\\n                                    <option value=\\\"hide\\\">{{l(\\\"UiCustomization_Hide\\\")}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label for=\\\"DropdownSkinDesktop\\\">{{l(\\\"UiCustomization_DropdownSkinDesktop\\\")}}</label>\\n                                <select id=\\\"DropdownSkinDesktop\\\" name=\\\"DropdownSkinDesktop\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.header.dropdownSkinDesktop\\\">\\n                                    <option value=\\\"light\\\">{{l(\\\"UiCustomization_Light\\\")}}</option>\\n                                    <option value=\\\"dark\\\">{{l(\\\"UiCustomization_Dark\\\")}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"DisplaySubmenuArrowDesktop\\\" [(ngModel)]=\\\"settings.header.displaySubmenuArrowDesktop\\\">\\n                                    {{l(\\\"UiCustomization_DisplaySubmenuArrowDesktop\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n\\n                            <h5>{{l('UiCustomization_Mobile')}}</h5>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"MobileFixedHeader\\\" [(ngModel)]=\\\"settings.header.mobileFixedHeader\\\">\\n                                    {{l(\\\"UiCustomization_MobileFixedHeader\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                        </form>\\n                    </tab>\\n                    <tab heading=\\\"{{l('UiCustomization_Menu')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <form id=\\\"MenuSettingsForm\\\">\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label for=\\\"Position\\\">{{l(\\\"UiCustomization_MenuPosition\\\")}}</label>\\n                                <select id=\\\"Position\\\" name=\\\"Position\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.menu.position\\\">\\n                                    <option value=\\\"left\\\">{{l(\\\"UiCustomization_Left\\\")}}</option>\\n                                    <option value=\\\"top\\\">{{l(\\\"UiCustomization_Top\\\")}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label for=\\\"AsideSkin\\\">{{l(\\\"UiCustomization_MenuSkin\\\")}}</label>\\n                                <select id=\\\"AsideSkin\\\" name=\\\"AsideSkin\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.menu.asideSkin\\\">\\n                                    <option value=\\\"light\\\">{{l(\\\"UiCustomization_Light\\\")}}</option>\\n                                    <option value=\\\"dark\\\">{{l(\\\"UiCustomization_Dark\\\")}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\" *ngIf=\\\"leftMenuPositionSelected()\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"FixedAside\\\" [(ngModel)]=\\\"settings.menu.fixedAside\\\">\\n                                    {{l(\\\"UiCustomization_FixedMenu\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\" *ngIf=\\\"leftMenuPositionSelected()\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"AllowAsideMinimizing\\\" [(ngModel)]=\\\"settings.menu.allowAsideMinimizing\\\" (ngModelChange)=\\\"allowAsideMinimizingChange($event)\\\">\\n                                    {{l(\\\"UiCustomization_AllowAsideMinimizing\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\" *ngIf=\\\"leftMenuPositionSelected()\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"DefaultMinimizedAside\\\" [(ngModel)]=\\\"settings.menu.defaultMinimizedAside\\\" [(disabled)]=\\\"!settings.menu.allowAsideMinimizing\\\">\\n                                    {{l(\\\"UiCustomization_DefaultMinimizedAside\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\" *ngIf=\\\"leftMenuPositionSelected()\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"AllowAsideHiding\\\" [(ngModel)]=\\\"settings.menu.allowAsideHiding\\\" [(disabled)]=\\\"settings.menu.allowAsideMinimizing\\\" (ngModelChange)=\\\"allowAsideHidingChange($event)\\\">\\n                                    {{l(\\\"UiCustomization_AllowAsideHiding\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\" *ngIf=\\\"leftMenuPositionSelected()\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"DefaultHiddenAside\\\" [(ngModel)]=\\\"settings.menu.defaultHiddenAside\\\" [(disabled)]=\\\"!settings.menu.allowAsideHiding\\\">\\n                                    {{l(\\\"UiCustomization_DefaultHiddenAside\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\" *ngIf=\\\"leftMenuPositionSelected()\\\">\\n                                <label for=\\\"SubmenuToggle\\\">{{l(\\\"UiCustomization_SubmenuToggle\\\")}}</label>\\n                                <select id=\\\"SubmenuToggle\\\" name=\\\"SubmenuToggle\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.menu.submenuToggle\\\">\\n                                    <option value=\\\"dropdown\\\">{{l(\\\"UiCustomization_Dropdown\\\")}}</option>\\n                                    <option value=\\\"accordion\\\">{{l(\\\"UiCustomization_Accordion\\\")}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\" *ngIf=\\\"leftMenuPositionSelected()\\\">\\n                                <label for=\\\"DropdownSubmenuSkin\\\">{{l(\\\"UiCustomization_DropdownSubmenuSkin\\\")}}</label>\\n                                <select id=\\\"DropdownSubmenuSkin\\\" name=\\\"DropdownSubmenuSkin\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"settings.menu.dropdownSubmenuSkin\\\">\\n                                    <option value=\\\"inherit\\\">{{l(\\\"UiCustomization_Inherit\\\")}}</option>\\n                                    <option value=\\\"light\\\">{{l(\\\"UiCustomization_Light\\\")}}</option>\\n                                    <option value=\\\"dark\\\">{{l(\\\"UiCustomization_Dark\\\")}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"form-group m-form__group\\\" *ngIf=\\\"leftMenuPositionSelected()\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"DropdownSubmenuArrow\\\" [(ngModel)]=\\\"settings.menu.dropdownSubmenuArrow\\\">\\n                                    {{l(\\\"UiCustomization_DropdownSubmenuArrow\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                        </form>\\n                    </tab>\\n                    <tab heading=\\\"{{l('UiCustomization_Footer')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                        <form id=\\\"FooterSettingsForm\\\">\\n                            <div class=\\\"form-group m-form__group\\\">\\n                                <label class=\\\"m-checkbox col-lg-12\\\">\\n                                    <input type=\\\"checkbox\\\" name=\\\"FixedFooter\\\" [(ngModel)]=\\\"settings.footer.fixedFooter\\\">\\n                                    {{l(\\\"UiCustomization_FixedFooter\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                        </form>\\n                    </tab>\\n                </tabset>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import { AfterViewChecked, Component, Injector, OnInit } from '@angular/core';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { UiCustomizationSettingsEditDto, UiCustomizationSettingsServiceProxy } from '@shared/service-proxies/service-proxies';\n\n@Component({\n    templateUrl: './ui-customization.component.html',\n    animations: [appModuleAnimation()]\n})\nexport class UiCustomizationComponent extends AppComponentBase implements AfterViewChecked, OnInit {\n\n    settings: UiCustomizationSettingsEditDto;\n\n    constructor(\n        injector: Injector,\n        private _uiCustomizationService: UiCustomizationSettingsServiceProxy\n    ) {\n        super(injector);\n    }\n\n    ngAfterViewChecked(): void {\n        //Temporary fix for: https://github.com/valor-software/ngx-bootstrap/issues/1508\n        $('tabset ul.nav').addClass('m-tabs-line');\n        $('tabset ul.nav li a.nav-link').addClass('m-tabs__link');\n    }\n\n    ngOnInit(): void {\n        this._uiCustomizationService.getUiManagementSettings().subscribe((settingsResult) => {\n            this.settings = settingsResult;\n        });\n    }\n\n    leftMenuPositionSelected(): boolean {\n        return this.settings.menu.position === 'left';\n    }\n\n    updateDefaultUiManagementSettings(): void {\n        this._uiCustomizationService.updateDefaultUiManagementSettings(this.settings).subscribe(() => {\n            window.location.reload();\n        });\n    }\n\n    updateUiManagementSettings(): void {\n        this._uiCustomizationService.updateUiManagementSettings(this.settings).subscribe(() => {\n            window.location.reload();\n        });\n    }\n\n    useSystemDefaultSettings(): void {\n        this._uiCustomizationService.useSystemDefaultSettings().subscribe(() => {\n            window.location.reload();\n        });\n    }\n\n    allowAsideMinimizingChange(val): void {\n        if (val) {\n            this.settings.menu.allowAsideHiding = false;\n            this.settings.menu.defaultHiddenAside = false;\n        } else {\n            this.settings.menu.defaultMinimizedAside = false;\n        }\n    }\n\n    allowAsideHidingChange(val): void {\n        if (!val) {\n            this.settings.menu.defaultHiddenAside = false;\n        }\n    }\n}\n","module.exports = \"<div bsModal #createOrEditModal=\\\"bs-modal\\\" (onShown)=\\\"onShown()\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"createOrEditModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <form *ngIf=\\\"active\\\" #userForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\" autocomplete=\\\"off\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">\\n                        <span *ngIf=\\\"user.id\\\">{{l(\\\"EditUser\\\")}}: {{user.userName}}</span>\\n                        <span *ngIf=\\\"!user.id\\\">{{l(\\\"CreateNewUser\\\")}}</span>\\n                    </h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <tabset class=\\\"tab-container tabbable-line\\\">\\n                        <tab heading=\\\"{{l('UserInformations')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-3 text-center margin-bottom-15 margin-top-15\\\">\\n                                    <img src=\\\"{{profilePicture}}\\\" width=\\\"128\\\" height=\\\"128\\\" class=\\\"img-thumbnail img-rounded\\\" />\\n                                </div>\\n                                <div class=\\\"col-sm-9\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"Name\\\">{{l(\\\"Name\\\")}} *</label>\\n                                        <input id=\\\"Name\\\" #nameInput=\\\"ngModel\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Name\\\" [(ngModel)]=\\\"user.name\\\" required maxlength=\\\"32\\\">\\n                                        <validation-messages [formCtrl]=\\\"nameInput\\\"></validation-messages>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"Surname\\\">{{l(\\\"Surname\\\")}} *</label>\\n                                        <input id=\\\"Surname\\\" #surnameInput=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"Surname\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.surname\\\" required maxlength=\\\"32\\\">\\n                                        <validation-messages [formCtrl]=\\\"surnameInput\\\"></validation-messages>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"EmailAddress\\\">{{l(\\\"EmailAddress\\\")}} *</label>\\n                                <input id=\\\"EmailAddress\\\" #emailAddressInput=\\\"ngModel\\\" type=\\\"email\\\" name=\\\"EmailAddress\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.emailAddress\\\" required maxlength=\\\"256\\\" email>\\n                                <validation-messages [formCtrl]=\\\"emailAddressInput\\\" [errorDefs]=\\\"[{email: l('InvalidEmailAddress')}]\\\"></validation-messages>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"PhoneNumber\\\">{{l(\\\"PhoneNumber\\\")}}</label>\\n                                <input id=\\\"PhoneNumber\\\" type=\\\"text\\\" name=\\\"PhoneNumber\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.phoneNumber\\\" maxlength=\\\"24\\\">\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"UserName\\\">{{l(\\\"UserName\\\")}} *</label>\\n                                <input id=\\\"UserName\\\" #userNameInput=\\\"ngModel\\\" type=\\\"text\\\" [disabled]=\\\"!canChangeUserName\\\" name=\\\"UserName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.userName\\\" required maxlength=\\\"32\\\">\\n                                <span class=\\\"help-block\\\" *ngIf=\\\"!canChangeUserName\\\">{{l(\\\"CanNotChangeAdminUserName\\\")}}</span>\\n                                <validation-messages [formCtrl]=\\\"userNameInput\\\"></validation-messages>\\n                            </div>\\n\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <label for=\\\"EditUser_SetRandomPassword\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"EditUser_SetRandomPassword\\\" type=\\\"checkbox\\\" name=\\\"SetRandomPassword\\\" [(ngModel)]=\\\"setRandomPassword\\\">\\n                                    {{l(\\\"SetRandomPassword\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\n                                <div class=\\\"right\\\">\\n                                    <label for=\\\"Password\\\">{{l(\\\"Password\\\")}}</label>\\n                                    <input id=\\\"Password\\\" type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" id=\\\"Password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.password\\\" [required]=\\\"!user.id && !setRandomPassword\\\" maxlength=\\\"32\\\"\\n                                           [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\n                                           [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\n                                           validateEqual=\\\"PasswordRepeat\\\" reverse=\\\"true\\\">\\n                                </div>\\n                            </div>\\n                            <div [hidden]=\\\"setRandomPassword || userForm.form.valid || userForm.form.pristine\\\">\\n                                <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"userForm.controls['Password'] && userForm.controls['Password'].errors\\\">\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireDigit\\\">{{l(\\\"PasswordComplexity_RequireDigit_Hint\\\")}}</li>\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireLowercase\\\">{{l(\\\"PasswordComplexity_RequireLowercase_Hint\\\")}}</li>\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireUppercase\\\">{{l(\\\"PasswordComplexity_RequireUppercase_Hint\\\")}}</li>\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requireNonAlphanumeric\\\">{{l(\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\")}}</li>\\n                                    <li [hidden]=\\\"!userForm.controls['Password'].errors.requiredLength\\\">{{l(\\\"PasswordComplexity_RequiredLength_Hint\\\", passwordComplexitySetting.requiredLength)}}</li>\\n                                </ul>\\n                            </div>\\n                            <div class=\\\"form-group\\\" *ngIf=\\\"!setRandomPassword\\\">\\n                                <div class=\\\"right\\\">\\n                                    <label for=\\\"PasswordRepeat\\\">{{l(\\\"PasswordRepeat\\\")}}</label>\\n                                    <input id=\\\"PasswordRepeat\\\" type=\\\"password\\\" name=\\\"PasswordRepeat\\\" #PasswordRepeat=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.passwordRepeat\\\" [required]=\\\"!user.id && !setRandomPassword\\\" maxlength=\\\"32\\\"\\n                                           [requireDigit]=\\\"passwordComplexitySetting.requireDigit\\\" [requireLowercase]=\\\"passwordComplexitySetting.requireLowercase\\\"\\n                                           [requireUppercase]=\\\"passwordComplexitySetting.requireUppercase\\\" [requireNonAlphanumeric]=\\\"passwordComplexitySetting.requireNonAlphanumeric\\\" [requiredLength]=\\\"passwordComplexitySetting.requiredLength\\\"\\n                                           validateEqual=\\\"Password\\\" reverse=\\\"false\\\">\\n                                </div>\\n                            </div>\\n                            <div [hidden]=\\\"setRandomPassword || userForm.form.valid || userForm.form.pristine\\\">\\n                                <ul class=\\\"help-block text-danger\\\" *ngIf=\\\"userForm.controls['PasswordRepeat'] && userForm.controls['PasswordRepeat'].errors\\\">\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireDigit\\\">{{l(\\\"PasswordComplexity_RequireDigit_Hint\\\")}}</li>\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireLowercase\\\">{{l(\\\"PasswordComplexity_RequireLowercase_Hint\\\")}}</li>\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireUppercase\\\">{{l(\\\"PasswordComplexity_RequireUppercase_Hint\\\")}}</li>\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requireNonAlphanumeric\\\">{{l(\\\"PasswordComplexity_RequireNonAlphanumeric_Hint\\\")}}</li>\\n                                    <li [hidden]=\\\"!userForm.controls['PasswordRepeat'].errors.requiredLength\\\">{{l(\\\"PasswordComplexity_RequiredLength_Hint\\\", passwordComplexitySetting.requiredLength)}}</li>\\n                                    <li [hidden]=\\\"userForm.controls['PasswordRepeat'].valid\\\">{{l(\\\"PasswordsDontMatch\\\")}}</li>\\n                                </ul>\\n                            </div>\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <label for=\\\"EditUser_ShouldChangePasswordOnNextLogin\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"EditUser_ShouldChangePasswordOnNextLogin\\\" type=\\\"checkbox\\\" name=\\\"ShouldChangePasswordOnNextLogin\\\" [(ngModel)]=\\\"user.shouldChangePasswordOnNextLogin\\\">\\n                                    {{l(\\\"ShouldChangePasswordOnNextLogin\\\")}}\\n                                    <span></span>\\n                                </label>\\n\\n                                <label for=\\\"EditUser_SendActivationEmail\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"EditUser_SendActivationEmail\\\" type=\\\"checkbox\\\" name=\\\"SendActivationEmail\\\" [(ngModel)]=\\\"sendActivationEmail\\\">\\n                                    {{l(\\\"SendActivationEmail\\\")}}\\n                                    <span></span>\\n                                </label>\\n\\n                                <label for=\\\"EditUser_IsActive\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"EditUser_IsActive\\\" type=\\\"checkbox\\\" name=\\\"IsActive\\\" [(ngModel)]=\\\"user.isActive\\\">\\n                                    {{l(\\\"Active\\\")}}\\n                                    <span></span>\\n                                </label>\\n\\n                                <label *ngIf=\\\"isTwoFactorEnabled\\\" for=\\\"EditUser_IsTwoFactorEnabled\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"EditUser_IsTwoFactorEnabled\\\" type=\\\"checkbox\\\" name=\\\"IsTwoFactorEnabled\\\" [(ngModel)]=\\\"user.isTwoFactorEnabled\\\">\\n                                    {{l(\\\"IsTwoFactorEnabled\\\")}}\\n                                    <span></span>\\n                                </label>\\n\\n                                <label *ngIf=\\\"isLockoutEnabled\\\" for=\\\"EditUser_IsLockoutEnabled\\\" class=\\\"m-checkbox\\\">\\n                                    <input id=\\\"EditUser_IsLockoutEnabled\\\" type=\\\"checkbox\\\" name=\\\"IsLockoutEnabled\\\" [(ngModel)]=\\\"user.isLockoutEnabled\\\">\\n                                    {{l(\\\"IsLockoutEnabled\\\")}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                        </tab>\\n                        <tab heading=\\\"{{l('Roles')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                            <ng-template tabHeading>\\n                                <span class=\\\"badge badge-primary\\\">{{getAssignedRoleCount()}}</span>\\n                            </ng-template>\\n                            <div class=\\\"m-checkbox-list\\\">\\n                                <label attr.for=\\\"EditUser_{{role.roleName}}\\\" class=\\\"m-checkbox\\\" *ngFor=\\\"let role of roles\\\">\\n                                    <input id=\\\"EditUser_{{role.roleName}}\\\" type=\\\"checkbox\\\" name=\\\"{{role.roleName}}\\\" [(ngModel)]=\\\"role.isAssigned\\\">\\n                                    {{role.roleDisplayName}}\\n                                    <span></span>\\n                                </label>\\n                            </div>\\n                        </tab>\\n                        <tab heading=\\\"{{l('OrganizationUnits')}}\\\" customClass=\\\"m-tabs__item\\\">\\n                            <organization-unit-tree #organizationUnitTree></organization-unit-tree>\\n                        </tab>\\n                    </tabset>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button [disabled]=\\\"saving\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!userForm.form.valid\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { AfterViewChecked, Component, ElementRef, EventEmitter, Injector, Output, ViewChild } from '@angular/core';\nimport { AppConsts } from '@shared/AppConsts';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { CreateOrUpdateUserInput, OrganizationUnitDto, PasswordComplexitySetting, ProfileServiceProxy, UserEditDto, UserRoleDto, UserServiceProxy } from '@shared/service-proxies/service-proxies';\nimport * as _ from 'lodash';\nimport { ModalDirective } from 'ngx-bootstrap';\nimport { IOrganizationUnitsTreeComponentData, OrganizationUnitsTreeComponent } from '../shared/organization-unit-tree.component';\n\n@Component({\n    selector: 'createOrEditUserModal',\n    templateUrl: './create-or-edit-user-modal.component.html',\n    styles: [`.user-edit-dialog-profile-image {\n             margin-bottom: 20px;\n        }`\n    ]\n})\nexport class CreateOrEditUserModalComponent extends AppComponentBase implements AfterViewChecked {\n\n    @ViewChild('nameInput') nameInput: ElementRef;\n    @ViewChild('createOrEditModal') modal: ModalDirective;\n    @ViewChild('organizationUnitTree') organizationUnitTree: OrganizationUnitsTreeComponent;\n\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\n\n    active = false;\n    saving = false;\n    canChangeUserName = true;\n    isTwoFactorEnabled: boolean = this.setting.getBoolean('Abp.Zero.UserManagement.TwoFactorLogin.IsEnabled');\n    isLockoutEnabled: boolean = this.setting.getBoolean('Abp.Zero.UserManagement.UserLockOut.IsEnabled');\n    passwordComplexitySetting: PasswordComplexitySetting = new PasswordComplexitySetting();\n\n    user: UserEditDto = new UserEditDto();\n    roles: UserRoleDto[];\n    sendActivationEmail = true;\n    setRandomPassword = true;\n    passwordComplexityInfo = '';\n    profilePicture: string;\n\n    allOrganizationUnits: OrganizationUnitDto[];\n    memberedOrganizationUnits: string[];\n\n    constructor(\n        injector: Injector,\n        private _userService: UserServiceProxy,\n        private _profileService: ProfileServiceProxy\n    ) {\n        super(injector);\n    }\n\n    ngAfterViewChecked(): void {\n        //Temporary fix for: https://github.com/valor-software/ngx-bootstrap/issues/1508\n        $('tabset ul.nav').addClass('m-tabs-line');\n        $('tabset ul.nav li a.nav-link').addClass('m-tabs__link');\n    }\n\n    show(userId?: number): void {\n        if (!userId) {\n            this.active = true;\n            this.setRandomPassword = true;\n            this.sendActivationEmail = true;\n        }\n\n        this._userService.getUserForEdit(userId).subscribe(userResult => {\n            this.user = userResult.user;\n            this.roles = userResult.roles;\n            this.canChangeUserName = this.user.userName !== AppConsts.userManagement.defaultAdminUserName;\n\n            this.allOrganizationUnits = userResult.allOrganizationUnits;\n            this.memberedOrganizationUnits = userResult.memberedOrganizationUnits;\n\n            this.getProfilePicture(userResult.profilePictureId);\n\n            if (userId) {\n                this.active = true;\n\n                setTimeout(() => {\n                    this.setRandomPassword = false;\n                }, 0);\n\n                this.sendActivationEmail = false;\n            }\n\n            this._profileService.getPasswordComplexitySetting().subscribe(passwordComplexityResult => {\n                this.passwordComplexitySetting = passwordComplexityResult.setting;\n                this.setPasswordComplexityInfo();\n                this.modal.show();\n            });\n        });\n    }\n\n    setPasswordComplexityInfo(): void {\n\n        this.passwordComplexityInfo = '<ul>';\n\n        if (this.passwordComplexitySetting.requireDigit) {\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireDigit_Hint') + '</li>';\n        }\n\n        if (this.passwordComplexitySetting.requireLowercase) {\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireLowercase_Hint') + '</li>';\n        }\n\n        if (this.passwordComplexitySetting.requireUppercase) {\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireUppercase_Hint') + '</li>';\n        }\n\n        if (this.passwordComplexitySetting.requireNonAlphanumeric) {\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequireNonAlphanumeric_Hint') + '</li>';\n        }\n\n        if (this.passwordComplexitySetting.requiredLength) {\n            this.passwordComplexityInfo += '<li>' + this.l('PasswordComplexity_RequiredLength_Hint', this.passwordComplexitySetting.requiredLength) + '</li>';\n        }\n\n        this.passwordComplexityInfo += '</ul>';\n    }\n\n    getProfilePicture(profilePictureId: string): void {\n        if (!profilePictureId) {\n            this.profilePicture = this.appRootUrl() + 'assets/common/images/default-profile-picture.png';\n        } else {\n            this._profileService.getProfilePictureById(profilePictureId).subscribe(result => {\n\n                if (result && result.profilePicture) {\n                    this.profilePicture = 'data:image/jpeg;base64,' + result.profilePicture;\n                } else {\n                    this.profilePicture = this.appRootUrl() + 'assets/common/images/default-profile-picture.png';\n                }\n            });\n        }\n    }\n\n    onShown(): void {\n        $(this.nameInput.nativeElement).focus();\n\n        this.organizationUnitTree.data = <IOrganizationUnitsTreeComponentData>{\n            allOrganizationUnits: this.allOrganizationUnits,\n            selectedOrganizationUnits: this.memberedOrganizationUnits\n        };\n    }\n\n    save(): void {\n        let input = new CreateOrUpdateUserInput();\n\n        input.user = this.user;\n        input.setRandomPassword = this.setRandomPassword;\n        input.sendActivationEmail = this.sendActivationEmail;\n        input.assignedRoleNames =\n            _.map(\n                _.filter(this.roles, { isAssigned: true }), role => role.roleName\n            );\n\n        input.organizationUnits = this.organizationUnitTree.getSelectedOrganizations();\n\n        this.saving = true;\n        this._userService.createOrUpdateUser(input)\n            .finally(() => { this.saving = false; })\n            .subscribe(() => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n                this.modalSave.emit(null);\n            });\n    }\n\n    close(): void {\n        this.active = false;\n        this.modal.hide();\n    }\n\n    getAssignedRoleCount(): number {\n        return _.filter(this.roles, { isAssigned: true }).length;\n    }\n}\n","module.exports = \"<div bsModal #editModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editModal\\\" aria-hidden=\\\"true\\\" [config]=\\\"{backdrop: 'static'}\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n            <form #userForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h4 class=\\\"modal-title\\\">\\n                        <span>{{l(\\\"Permissions\\\")}}<span *ngIf=\\\"userName\\\"> - {{userName}}</span></span>\\n                    </h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\" [attr.aria-label]=\\\"l('Close')\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <permission-tree #permissionTree></permission-tree>\\n\\n                    <div class=\\\"note note-warning\\\" style=\\\"margin-bottom: 0; margin-top: 15px\\\">\\n                        <em>{{l('Note_RefreshPageForPermissionChanges')}}</em>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button [disabled]=\\\"saving\\\" [buttonBusy]=\\\"resettingPermissions\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\" type=\\\"button\\\" class=\\\"btn btn-default pull-left\\\" (click)=\\\"resetPermissions()\\\" [tooltip]=\\\"l('ResetPermissionsTooltip')\\\" placement=\\\"top\\\"><span>{{l(\\\"ResetSpecialPermissions\\\")}}</span></button>\\n                    <button [disabled]=\\\"saving || resettingPermissions\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"close()\\\">{{l(\\\"Cancel\\\")}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary blue\\\" [disabled]=\\\"!userForm.form.valid || resettingPermissions\\\" [buttonBusy]=\\\"saving\\\" [busyText]=\\\"l('SavingWithThreeDot')\\\"><i class=\\\"fa fa-save\\\"></i> <span>{{l(\\\"Save\\\")}}</span></button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, Injector, ViewChild } from '@angular/core';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { EntityDtoOfInt64, UpdateUserPermissionsInput, UserServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { ModalDirective } from 'ngx-bootstrap';\nimport { PermissionTreeComponent } from '../shared/permission-tree.component';\n\n@Component({\n    selector: 'editUserPermissionsModal',\n    templateUrl: './edit-user-permissions-modal.component.html'\n})\nexport class EditUserPermissionsModalComponent extends AppComponentBase {\n\n    @ViewChild('editModal') modal: ModalDirective;\n    @ViewChild('permissionTree') permissionTree: PermissionTreeComponent;\n\n    saving = false;\n    resettingPermissions = false;\n\n    userId: number;\n    userName: string;\n\n    constructor(\n        injector: Injector,\n        private _userService: UserServiceProxy\n    ) {\n        super(injector);\n    }\n\n    show(userId: number, userName?: string): void {\n        this.userId = userId;\n        this.userName = userName;\n\n        this._userService.getUserPermissionsForEdit(userId).subscribe(result => {\n            this.permissionTree.editData = result;\n            this.modal.show();\n        });\n    }\n\n    save(): void {\n        let input = new UpdateUserPermissionsInput();\n\n        input.id = this.userId;\n        input.grantedPermissionNames = this.permissionTree.getGrantedPermissionNames();\n\n        this.saving = true;\n        this._userService.updateUserPermissions(input)\n            .finally(() => { this.saving = false; })\n            .subscribe(() => {\n                this.notify.info(this.l('SavedSuccessfully'));\n                this.close();\n            });\n    }\n\n    resetPermissions(): void {\n\n        let input = new EntityDtoOfInt64();\n\n        input.id = this.userId;\n\n        this.resettingPermissions = true;\n        this._userService.resetUserSpecificPermissions(input).subscribe(() => {\n            this.notify.info(this.l('ResetSuccessfully'));\n            this._userService.getUserPermissionsForEdit(this.userId).subscribe(result => {\n                this.permissionTree.editData = result;\n            });\n        }, undefined, () => {\n            this.resettingPermissions = false;\n        });\n    }\n\n    close(): void {\n        this.modal.hide();\n    }\n}\n","module.exports = \"<div [@routerTransition]>\\n    <div class=\\\"m-subheader\\\">\\n        <div class=\\\"d-flex align-items-center\\\">\\n            <div class=\\\"mr-auto col-xs-6\\\">\\n                <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\n                    <span>{{l(\\\"Users\\\")}}</span>\\n                </h3>\\n                <span class=\\\"m-section__sub\\\">\\n                    {{l(\\\"UsersHeaderInfo\\\")}}\\n                </span>\\n            </div>\\n            <div class=\\\"col-xs-6 text-right\\\">\\n                <button (click)=\\\"exportToExcel()\\\" class=\\\"btn btn-outline-success\\\"><i class=\\\"fa fa-file-excel-o\\\"></i> {{l(\\\"ExportToExcel\\\")}}</button>\\n                <button (click)=\\\"createUser()\\\" *ngIf=\\\"isGranted('Pages.Administration.Users.Create')\\\" class=\\\"btn btn-primary blue\\\"><i class=\\\"fa fa-plus\\\"></i> {{l(\\\"CreateNewUser\\\")}}</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"m-content\\\">\\n        <div class=\\\"m-portlet m-portlet--mobile\\\">\\n            <div class=\\\"m-portlet__body\\\">\\n                <form class=\\\"horizontal-form\\\" autocomplete=\\\"off\\\">\\n                    <div class=\\\"m-form m-form--label-align-right\\\">\\n                        <div class=\\\"row align-items-center m--margin-bottom-10\\\">\\n                            <div class=\\\"col-xl-12\\\">\\n                                <div class=\\\"form-group m-form__group align-items-center\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <input [(ngModel)]=\\\"filterText\\\" name=\\\"filterText\\\" autoFocus class=\\\"form-control m-input\\\" [placeholder]=\\\"l('SearchWithThreeDot')\\\" type=\\\"text\\\">\\n                                        <span class=\\\"input-group-btn\\\">\\n                                            <button (click)=\\\"getUsers()\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\"><i class=\\\"flaticon-search-1\\\" [attr.aria-label]=\\\"l('Search')\\\"></i></button>\\n                                        </span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row m--margin-bottom-10\\\" [hidden]=\\\"!advancedFiltersAreShown\\\">\\n                            <div [ngClass]=\\\"{'col-md-6': isGranted('Pages.Administration.Roles'), 'col-md-12':!isGranted('Pages.Administration.Roles')}\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <permission-combo [(selectedPermission)]=\\\"selectedPermission\\\"></permission-combo>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\" *ngIf=\\\"isGranted('Pages.Administration.Roles')\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <role-combo [(selectedRole)]=\\\"role\\\" emptyText=\\\"{{l('FilterByRole')}}\\\"></role-combo>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row margin-bottom-10\\\" *ngIf=\\\"advancedFiltersAreShown\\\">\\n                            <div class=\\\"col-sm-12 text-right\\\">\\n                                <button class=\\\"btn btn-metal\\\" (click)=\\\"getUsers()\\\"><i class=\\\"fa fa-refresh\\\"></i> {{l(\\\"Refresh\\\")}}</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row margin-bottom-10\\\">\\n                            <div class=\\\"col-sm-12\\\">\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"!advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-down\\\"></i> {{l(\\\"ShowAdvancedFilters\\\")}}</span>\\n                                <span class=\\\"clickable-item text-muted\\\" *ngIf=\\\"advancedFiltersAreShown\\\" (click)=\\\"advancedFiltersAreShown=!advancedFiltersAreShown\\\"><i class=\\\"fa fa-angle-up\\\"></i> {{l(\\\"HideAdvancedFilters\\\")}}</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n\\n                <div class=\\\"row align-items-center\\\">\\n                    <!--<Primeng-TurboTable-Start>-->\\n                    <div class=\\\"primeng-datatable-container\\\"\\n                         [busyIf]=\\\"primengTableHelper.isLoading\\\">\\n                        <p-table #dataTable\\n                                 (onLazyLoad)=\\\"getUsers($event)\\\"\\n                                 [value]=\\\"primengTableHelper.records\\\"\\n                                 rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                 [paginator]=\\\"false\\\"\\n                                 [lazy]=\\\"true\\\"\\n                                 [scrollable]=\\\"true\\\"\\n                                 ScrollWidth=\\\"100%\\\"\\n                                 [responsive]=\\\"primengTableHelper.isResponsive\\\"\\n                                 [resizableColumns]=\\\"primengTableHelper.resizableColumns\\\">\\n                            <ng-template pTemplate=\\\"header\\\">\\n                                <tr>\\n                                    <th style=\\\"width: 130px\\\" [hidden]=\\\"!isGrantedAny('Pages.Administration.Users.Impersonation', 'Pages.Administration.Users.Edit', 'Pages.Administration.Users.ChangePermissions', 'Pages.Administration.Users.Delete')\\\">{{l('Actions')}}</th>\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"username\\\">\\n                                        {{l('UserName')}}\\n                                        <p-sortIcon field=\\\"username\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"name\\\">\\n                                        {{l('Name')}}\\n                                        <p-sortIcon field=\\\"name\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"surname\\\">\\n                                        {{l('Surname')}}\\n                                        <p-sortIcon field=\\\"surname\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width: 150px\\\" pSortableColumn=\\\"roles\\\">\\n                                        {{l('Roles')}}\\n                                        <p-sortIcon field=\\\"roles\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width: 250px\\\" pSortableColumn=\\\"emailAddress\\\">\\n                                        {{l('EmailAddress')}}\\n                                        <p-sortIcon field=\\\"emailAddress\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width: 200px\\\" pSortableColumn=\\\"isEmailConfirmed\\\">\\n                                        {{l('EmailConfirm')}}\\n                                        <p-sortIcon field=\\\"isEmailConfirmed\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width: 100px\\\" pSortableColumn=\\\"isActive\\\">\\n                                        {{l('Active')}}\\n                                        <p-sortIcon field=\\\"isActive\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width: 200px\\\" pSortableColumn=\\\"lastLoginTime\\\">\\n                                        {{l('LastLoginTime')}}\\n                                        <p-sortIcon field=\\\"lastLoginTime\\\"></p-sortIcon>\\n                                    </th>\\n                                    <th style=\\\"width: 200px\\\" pSortableColumn=\\\"creationTime\\\">\\n                                        {{l('CreationTime')}}\\n                                        <p-sortIcon field=\\\"creationTime\\\"></p-sortIcon>\\n                                    </th>\\n                                </tr>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"body\\\" let-record=\\\"$implicit\\\">\\n                                <tr>\\n                                    <td style=\\\"width: 130px\\\"\\n                                        [hidden]=\\\"!isGrantedAny('Pages.Administration.Users.Impersonation', 'Pages.Administration.Users.Edit', 'Pages.Administration.Users.ChangePermissions', 'Pages.Administration.Users.Delete')\\\">\\n                                        <div class=\\\"btn-group dropdown\\\" normalizePosition>\\n                                            <button class=\\\"dropdown-toggle btn btn-sm btn-primary\\\"\\n                                                    data-toggle=\\\"dropdown\\\"\\n                                                    aria-haspopup=\\\"true\\\"\\n                                                    aria-expanded=\\\"false\\\">\\n                                                <i class=\\\"fa fa-cog\\\"></i><span class=\\\"caret\\\"></span> {{l(\\\"Actions\\\")}}\\n                                            </button>\\n                                            <ul class=\\\"dropdown-menu\\\">\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.Impersonation') && record.id !== appSession.userId\\\"\\n                                                       (click)=\\\"_impersonationService.impersonate(record.id, appSession.tenantId)\\\">{{l('LoginAsThisUser')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.Edit')\\\"\\n                                                       (click)=\\\"createOrEditUserModal.show(record.id)\\\">{{l('Edit')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.ChangePermissions')\\\"\\n                                                       (click)=\\\"editUserPermissionsModal.show(record.id, record.userName)\\\">{{l('Permissions')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.ChangePermissions')\\\"\\n                                                       (click)=\\\"unlockUser(record)\\\">{{l('Unlock')}}</a>\\n                                                </li>\\n                                                <li>\\n                                                    <a *ngIf=\\\"permission.isGranted('Pages.Administration.Users.Delete')\\\"\\n                                                       (click)=\\\"deleteUser(record)\\\">{{l('Delete')}}</a>\\n                                                </li>\\n                                            </ul>\\n                                        </div>\\n                                    </td>\\n                                    <td style=\\\"width:150px\\\">{{record.userName}}</td>\\n                                    <td style=\\\"width:150px\\\">{{record.name}}</td>\\n                                    <td style=\\\"width:150px\\\">{{record.surname}}</td>\\n                                    <td style=\\\"width:150px\\\">\\n                                        {{getRolesAsString(record.roles)}}\\n                                    </td>\\n                                    <td style=\\\"width:250px\\\">{{record.emailAddress}}</td>\\n                                    <td style=\\\"width:200px\\\">\\n                                        <span class=\\\"label label-success\\\" *ngIf=\\\"record.isEmailConfirmed\\\">{{l('Yes')}}</span>\\n                                        <span class=\\\"label label-default\\\" *ngIf=\\\"!record.isEmailConfirmed\\\">{{l('No')}}</span>\\n                                    </td>\\n                                    <td style=\\\"width:100px\\\">\\n                                        <span class=\\\"label label-success\\\" *ngIf=\\\"record.isActive\\\">{{l('Yes')}}</span>\\n                                        <span class=\\\"label label-default\\\" *ngIf=\\\"!record.isActive\\\">{{l('No')}}</span>\\n                                    </td>\\n                                    <td style=\\\"width:200px\\\">\\n                                        <span *ngIf=\\\"record.lastLoginTime\\\">{{record.lastLoginTime | momentFormat:'L'}}</span>\\n                                        <span *ngIf=\\\"!record.lastLoginTime\\\">-</span>\\n                                    </td>\\n                                    <td style=\\\"width:200px\\\">\\n                                        {{record.creationTime | momentFormat:'L'}}\\n                                    </td>\\n                                </tr>\\n                            </ng-template>\\n                        </p-table>\\n                        <div class=\\\"primeng-paging-container\\\">\\n                            <p-paginator rows=\\\"{{primengTableHelper.defaultRecordsCountPerPage}}\\\"\\n                                         #paginator\\n                                         (onPageChange)=\\\"getUsers($event)\\\"\\n                                         [totalRecords]=\\\"primengTableHelper.totalRecordsCount\\\"\\n                                         [rowsPerPageOptions]=\\\"primengTableHelper.predefinedRecordsCountPerPage\\\">\\n                            </p-paginator>\\n                            <span class=\\\"total-records-count\\\">\\n                                {{l('TotalRecordsCount', primengTableHelper.totalRecordsCount)}}\\n                            </span>\\n                        </div>\\n                    </div>\\n                    <!--<Primeng-TurboTable-End>-->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <createOrEditUserModal #createOrEditUserModal (modalSave)=\\\"getUsers()\\\"></createOrEditUserModal>\\n\\n    <editUserPermissionsModal #editUserPermissionsModal></editUserPermissionsModal>\\n</div>\\n\"","import { NotifyService } from '@abp/notify/notify.service';\nimport { Component, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppConsts } from '@shared/AppConsts';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/common/app-component-base';\nimport { EntityDtoOfInt64, TokenAuthServiceProxy, UserListDto, UserServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { FileDownloadService } from '@shared/utils/file-download.service';\nimport { LazyLoadEvent } from 'primeng/components/common/lazyloadevent';\nimport { Paginator } from 'primeng/components/paginator/paginator';\nimport { Table } from 'primeng/components/table/table';\nimport { CreateOrEditUserModalComponent } from './create-or-edit-user-modal.component';\nimport { EditUserPermissionsModalComponent } from './edit-user-permissions-modal.component';\nimport { ImpersonationService } from './impersonation.service';\n\n@Component({\n    templateUrl: './users.component.html',\n    encapsulation: ViewEncapsulation.None,\n    animations: [appModuleAnimation()]\n})\nexport class UsersComponent extends AppComponentBase {\n\n    @ViewChild('createOrEditUserModal') createOrEditUserModal: CreateOrEditUserModalComponent;\n    @ViewChild('editUserPermissionsModal') editUserPermissionsModal: EditUserPermissionsModalComponent;\n    @ViewChild('dataTable') dataTable: Table;\n    @ViewChild('paginator') paginator: Paginator;\n\n    //Filters\n    advancedFiltersAreShown = false;\n    filterText = '';\n    selectedPermission = '';\n    role: number = undefined;\n\n    constructor(\n        injector: Injector,\n        public _impersonationService: ImpersonationService,\n        private _http: Http,\n        private _userServiceProxy: UserServiceProxy,\n        private _notifyService: NotifyService,\n        private _fileDownloadService: FileDownloadService,\n        private _tokenAuth: TokenAuthServiceProxy,\n        private _activatedRoute: ActivatedRoute\n    ) {\n        super(injector);\n        this.filterText = this._activatedRoute.snapshot.queryParams['filterText'] || '';\n    }\n\n    getUsers(event?: LazyLoadEvent) {\n        if (this.primengTableHelper.shouldResetPaging(event)) {\n            this.paginator.changePage(0);\n\n            return;\n        }\n\n        this.primengTableHelper.showLoadingIndicator();\n\n        this._userServiceProxy.getUsers(\n            this.filterText,\n            this.permission ? this.selectedPermission : undefined,\n            this.role,\n            this.primengTableHelper.getSorting(this.dataTable),\n            this.primengTableHelper.getMaxResultCount(this.paginator, event),\n            this.primengTableHelper.getSkipCount(this.paginator, event)\n        ).subscribe(result => {\n            this.primengTableHelper.totalRecordsCount = result.totalCount;\n            this.primengTableHelper.records = result.items;\n            this.primengTableHelper.hideLoadingIndicator();\n        });\n    }\n\n    unlockUser(record): void {\n        this._userServiceProxy.unlockUser(new EntityDtoOfInt64({ id: record.id })).subscribe(() => {\n            this.notify.success(this.l('UnlockedTheUser', record.userName));\n        });\n    }\n\n    getRolesAsString(roles): string {\n        let roleNames = '';\n\n        for (let j = 0; j < roles.length; j++) {\n            if (roleNames.length) {\n                roleNames = roleNames + ', ';\n            }\n\n            roleNames = roleNames + roles[j].roleName;\n        }\n\n        return roleNames;\n    }\n\n    reloadPage(): void {\n        this.paginator.changePage(this.paginator.getPage());\n    }\n\n    exportToExcel(): void {\n        this._userServiceProxy.getUsersToExcel()\n            .subscribe(result => {\n                this._fileDownloadService.downloadTempFile(result);\n            });\n    }\n\n    createUser(): void {\n        this.createOrEditUserModal.show();\n    }\n\n    deleteUser(user: UserListDto): void {\n        if (user.userName === AppConsts.userManagement.defaultAdminUserName) {\n            this.message.warn(this.l('{0}UserCannotBeDeleted', AppConsts.userManagement.defaultAdminUserName));\n            return;\n        }\n\n        this.message.confirm(\n            this.l('UserDeleteWarningMessage', user.userName),\n            (isConfirmed) => {\n                if (isConfirmed) {\n                    this._userServiceProxy.deleteUser(user.id)\n                        .subscribe(() => {\n                            this.reloadPage();\n                            this.notify.success(this.l('SuccessfullyDeleted'));\n                        });\n                }\n            }\n        );\n    }\n}\n","export class HtmlHelper {\n    static encodeText(value: string): string {\n        if (!$) {\n            return null;\n        }\n\n        return $('<div/>').text(value).html();\n    }\n\n    static decodeText(value: string): string {\n        if (!$) {\n            return null;\n        }\n\n        return $('<div/>').html(value).text();\n    }\n\n    static encodeJson(jsonObject: object): string {\n        if (!$) {\n            return null;\n        }\n\n        return JSON.parse(this.encodeText(JSON.stringify(jsonObject)));\n    }\n\n    static decodeJson(jsonObject: object): string {\n        if (!$) {\n            return null;\n        }\n\n        return JSON.parse(this.decodeText(JSON.stringify(jsonObject)));\n    }\n}\n"],"sourceRoot":""}